
Encoder_Test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006e18  00400000  00400000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406e18  00406e18  0000ee18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     0000095c  20000000  00406e20  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000002b8  2000095c  0040777c  0001095c  2**2
                  ALLOC
  4 .stack        00000804  20000c14  00407a34  0001095c  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  0001095c  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010985  2**0
                  CONTENTS, READONLY
  7 .debug_info   00009cfc  00000000  00000000  000109e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001c43  00000000  00000000  0001a6dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000042a1  00000000  00000000  0001c31f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000006b0  00000000  00000000  000205c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000668  00000000  00000000  00020c70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001022b  00000000  00000000  000212d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000099be  00000000  00000000  00031503  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00041173  00000000  00000000  0003aec1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000016ac  00000000  00000000  0007c034  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <_sfixed>:
  400000:	20001418 	.word	0x20001418
  400004:	00401065 	.word	0x00401065
  400008:	00401061 	.word	0x00401061
  40000c:	00401061 	.word	0x00401061
  400010:	00401061 	.word	0x00401061
  400014:	00401061 	.word	0x00401061
  400018:	00401061 	.word	0x00401061
	...
  40002c:	00401061 	.word	0x00401061
  400030:	00401061 	.word	0x00401061
  400034:	00000000 	.word	0x00000000
  400038:	00401061 	.word	0x00401061
  40003c:	004012cd 	.word	0x004012cd
  400040:	00401061 	.word	0x00401061
  400044:	00401061 	.word	0x00401061
  400048:	00401061 	.word	0x00401061
  40004c:	00401061 	.word	0x00401061
  400050:	00401061 	.word	0x00401061
  400054:	00401061 	.word	0x00401061
  400058:	00401061 	.word	0x00401061
  40005c:	00401061 	.word	0x00401061
  400060:	00401061 	.word	0x00401061
  400064:	00401061 	.word	0x00401061
  400068:	00401061 	.word	0x00401061
  40006c:	00400dbd 	.word	0x00400dbd
  400070:	00400dd1 	.word	0x00400dd1
  400074:	00400de5 	.word	0x00400de5
  400078:	00401061 	.word	0x00401061
  40007c:	00401061 	.word	0x00401061
  400080:	00401061 	.word	0x00401061
  400084:	00401061 	.word	0x00401061
  400088:	00401061 	.word	0x00401061
  40008c:	00401061 	.word	0x00401061
  400090:	00401061 	.word	0x00401061
  400094:	004012dd 	.word	0x004012dd
  400098:	00401061 	.word	0x00401061
  40009c:	00401061 	.word	0x00401061
  4000a0:	00401061 	.word	0x00401061
  4000a4:	00401061 	.word	0x00401061
  4000a8:	00401061 	.word	0x00401061
  4000ac:	00401061 	.word	0x00401061
  4000b0:	00401061 	.word	0x00401061
  4000b4:	00401061 	.word	0x00401061
  4000b8:	00401061 	.word	0x00401061
  4000bc:	00401061 	.word	0x00401061
  4000c0:	00401061 	.word	0x00401061

004000c4 <__do_global_dtors_aux>:
  4000c4:	b510      	push	{r4, lr}
  4000c6:	4c05      	ldr	r4, [pc, #20]	; (4000dc <__do_global_dtors_aux+0x18>)
  4000c8:	7823      	ldrb	r3, [r4, #0]
  4000ca:	b933      	cbnz	r3, 4000da <__do_global_dtors_aux+0x16>
  4000cc:	4b04      	ldr	r3, [pc, #16]	; (4000e0 <__do_global_dtors_aux+0x1c>)
  4000ce:	b113      	cbz	r3, 4000d6 <__do_global_dtors_aux+0x12>
  4000d0:	4804      	ldr	r0, [pc, #16]	; (4000e4 <__do_global_dtors_aux+0x20>)
  4000d2:	f3af 8000 	nop.w
  4000d6:	2301      	movs	r3, #1
  4000d8:	7023      	strb	r3, [r4, #0]
  4000da:	bd10      	pop	{r4, pc}
  4000dc:	2000095c 	.word	0x2000095c
  4000e0:	00000000 	.word	0x00000000
  4000e4:	00406e20 	.word	0x00406e20

004000e8 <frame_dummy>:
  4000e8:	b508      	push	{r3, lr}
  4000ea:	4b06      	ldr	r3, [pc, #24]	; (400104 <frame_dummy+0x1c>)
  4000ec:	b11b      	cbz	r3, 4000f6 <frame_dummy+0xe>
  4000ee:	4806      	ldr	r0, [pc, #24]	; (400108 <frame_dummy+0x20>)
  4000f0:	4906      	ldr	r1, [pc, #24]	; (40010c <frame_dummy+0x24>)
  4000f2:	f3af 8000 	nop.w
  4000f6:	4806      	ldr	r0, [pc, #24]	; (400110 <frame_dummy+0x28>)
  4000f8:	6803      	ldr	r3, [r0, #0]
  4000fa:	b113      	cbz	r3, 400102 <frame_dummy+0x1a>
  4000fc:	4b05      	ldr	r3, [pc, #20]	; (400114 <frame_dummy+0x2c>)
  4000fe:	b103      	cbz	r3, 400102 <frame_dummy+0x1a>
  400100:	4798      	blx	r3
  400102:	bd08      	pop	{r3, pc}
  400104:	00000000 	.word	0x00000000
  400108:	00406e20 	.word	0x00406e20
  40010c:	20000960 	.word	0x20000960
  400110:	00406e20 	.word	0x00406e20
  400114:	00000000 	.word	0x00000000

00400118 <sysclk_init>:
{
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400118:	b510      	push	{r4, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40011a:	480e      	ldr	r0, [pc, #56]	; (400154 <sysclk_init+0x3c>)
  40011c:	4b0e      	ldr	r3, [pc, #56]	; (400158 <sysclk_init+0x40>)
  40011e:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400120:	2000      	movs	r0, #0
  400122:	213e      	movs	r1, #62	; 0x3e
  400124:	4b0d      	ldr	r3, [pc, #52]	; (40015c <sysclk_init+0x44>)
  400126:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400128:	4c0d      	ldr	r4, [pc, #52]	; (400160 <sysclk_init+0x48>)
  40012a:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  40012c:	2800      	cmp	r0, #0
  40012e:	d0fc      	beq.n	40012a <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400130:	4b0c      	ldr	r3, [pc, #48]	; (400164 <sysclk_init+0x4c>)
  400132:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400134:	4a0c      	ldr	r2, [pc, #48]	; (400168 <sysclk_init+0x50>)
  400136:	4b0d      	ldr	r3, [pc, #52]	; (40016c <sysclk_init+0x54>)
  400138:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40013a:	4c0d      	ldr	r4, [pc, #52]	; (400170 <sysclk_init+0x58>)
  40013c:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  40013e:	2800      	cmp	r0, #0
  400140:	d0fc      	beq.n	40013c <sysclk_init+0x24>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400142:	2010      	movs	r0, #16
  400144:	4b0b      	ldr	r3, [pc, #44]	; (400174 <sysclk_init+0x5c>)
  400146:	4798      	blx	r3
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400148:	4b0b      	ldr	r3, [pc, #44]	; (400178 <sysclk_init+0x60>)
  40014a:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  40014c:	4801      	ldr	r0, [pc, #4]	; (400154 <sysclk_init+0x3c>)
  40014e:	4b02      	ldr	r3, [pc, #8]	; (400158 <sysclk_init+0x40>)
  400150:	4798      	blx	r3
  400152:	bd10      	pop	{r4, pc}
  400154:	02dc6c00 	.word	0x02dc6c00
  400158:	200000a1 	.word	0x200000a1
  40015c:	00400e5d 	.word	0x00400e5d
  400160:	00400eb1 	.word	0x00400eb1
  400164:	00400ec1 	.word	0x00400ec1
  400168:	20073f01 	.word	0x20073f01
  40016c:	400e0400 	.word	0x400e0400
  400170:	00400ed1 	.word	0x00400ed1
  400174:	00400df9 	.word	0x00400df9
  400178:	00401115 	.word	0x00401115

0040017c <spi_master_init>:
 *
 * \param p_spi  Base address of the SPI instance.
 *
 */
void spi_master_init(Spi *p_spi)
{
  40017c:	b510      	push	{r4, lr}
  40017e:	4604      	mov	r4, r0
#if SAMG55
	flexcom_enable(BOARD_FLEXCOM_SPI);
	flexcom_set_opmode(BOARD_FLEXCOM_SPI, FLEXCOM_SPI);
#else
	spi_enable_clock(p_spi);
  400180:	4b10      	ldr	r3, [pc, #64]	; (4001c4 <spi_master_init+0x48>)
  400182:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400184:	2380      	movs	r3, #128	; 0x80
  400186:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_master_mode(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MSTR;
  400188:	6863      	ldr	r3, [r4, #4]
  40018a:	f043 0301 	orr.w	r3, r3, #1
  40018e:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_mode_fault_detect(Spi *p_spi)
{
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  400190:	6863      	ldr	r3, [r4, #4]
  400192:	f043 0310 	orr.w	r3, r3, #16
  400196:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400198:	6863      	ldr	r3, [r4, #4]
  40019a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  40019e:	6063      	str	r3, [r4, #4]
#endif
	spi_reset(p_spi);
	spi_set_master_mode(p_spi);
	spi_disable_mode_fault_detect(p_spi);
	spi_disable_loopback(p_spi);
	spi_set_peripheral_chip_select_value(p_spi, DEFAULT_CHIP_ID);
  4001a0:	4620      	mov	r0, r4
  4001a2:	2100      	movs	r1, #0
  4001a4:	4b08      	ldr	r3, [pc, #32]	; (4001c8 <spi_master_init+0x4c>)
  4001a6:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_fixed_peripheral_select(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4001a8:	6863      	ldr	r3, [r4, #4]
  4001aa:	f023 0302 	bic.w	r3, r3, #2
  4001ae:	6063      	str	r3, [r4, #4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_peripheral_select_decode(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_PCSDEC);
  4001b0:	6863      	ldr	r3, [r4, #4]
  4001b2:	f023 0304 	bic.w	r3, r3, #4
  4001b6:	6063      	str	r3, [r4, #4]
	spi_set_fixed_peripheral_select(p_spi);
	spi_disable_peripheral_select_decode(p_spi);
	spi_set_delay_between_chip_select(p_spi, CONFIG_SPI_MASTER_DELAY_BCS);
  4001b8:	4620      	mov	r0, r4
  4001ba:	2100      	movs	r1, #0
  4001bc:	4b03      	ldr	r3, [pc, #12]	; (4001cc <spi_master_init+0x50>)
  4001be:	4798      	blx	r3
  4001c0:	bd10      	pop	{r4, pc}
  4001c2:	bf00      	nop
  4001c4:	00400f0d 	.word	0x00400f0d
  4001c8:	00400f1d 	.word	0x00400f1d
  4001cc:	00400f35 	.word	0x00400f35

004001d0 <spi_master_setup_device>:
 * \param baud_rate Baud rate for communication with slave device in Hz.
 * \param sel_id    Board specific select id.
 */
void spi_master_setup_device(Spi *p_spi, struct spi_device *device,
		spi_flags_t flags, uint32_t baud_rate, board_spi_select_id_t sel_id)
{
  4001d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4001d2:	4605      	mov	r5, r0
  4001d4:	460c      	mov	r4, r1
  4001d6:	4616      	mov	r6, r2
	int16_t baud_div = spi_calc_baudrate_div(baud_rate, sysclk_get_cpu_hz());
  4001d8:	4618      	mov	r0, r3
  4001da:	4914      	ldr	r1, [pc, #80]	; (40022c <spi_master_setup_device+0x5c>)
  4001dc:	4b14      	ldr	r3, [pc, #80]	; (400230 <spi_master_setup_device+0x60>)
  4001de:	4798      	blx	r3
  4001e0:	4607      	mov	r7, r0
	/* avoid Cppcheck Warning */
	UNUSED(sel_id);
	if (-1 == baud_div) {
		Assert(0 == "Failed to find baudrate divider");
	}
	spi_set_transfer_delay(p_spi, device->id, CONFIG_SPI_MASTER_DELAY_BS,
  4001e2:	4628      	mov	r0, r5
  4001e4:	6821      	ldr	r1, [r4, #0]
  4001e6:	2200      	movs	r2, #0
  4001e8:	4613      	mov	r3, r2
  4001ea:	f8df c05c 	ldr.w	ip, [pc, #92]	; 400248 <spi_master_setup_device+0x78>
  4001ee:	47e0      	blx	ip
			CONFIG_SPI_MASTER_DELAY_BCT);
	spi_set_bits_per_transfer(p_spi, device->id,
  4001f0:	4628      	mov	r0, r5
  4001f2:	6821      	ldr	r1, [r4, #0]
  4001f4:	2208      	movs	r2, #8
  4001f6:	4b0f      	ldr	r3, [pc, #60]	; (400234 <spi_master_setup_device+0x64>)
  4001f8:	4798      	blx	r3
			CONFIG_SPI_MASTER_BITS_PER_TRANSFER);
	spi_set_baudrate_div(p_spi, device->id, baud_div);
  4001fa:	4628      	mov	r0, r5
  4001fc:	6821      	ldr	r1, [r4, #0]
  4001fe:	b2fa      	uxtb	r2, r7
  400200:	4b0d      	ldr	r3, [pc, #52]	; (400238 <spi_master_setup_device+0x68>)
  400202:	4798      	blx	r3
	spi_configure_cs_behavior(p_spi, device->id, SPI_CS_KEEP_LOW);
  400204:	4628      	mov	r0, r5
  400206:	6821      	ldr	r1, [r4, #0]
  400208:	2208      	movs	r2, #8
  40020a:	4b0c      	ldr	r3, [pc, #48]	; (40023c <spi_master_setup_device+0x6c>)
  40020c:	4798      	blx	r3
	spi_set_clock_polarity(p_spi, device->id, flags >> 1);
  40020e:	4628      	mov	r0, r5
  400210:	6821      	ldr	r1, [r4, #0]
  400212:	0872      	lsrs	r2, r6, #1
  400214:	4b0a      	ldr	r3, [pc, #40]	; (400240 <spi_master_setup_device+0x70>)
  400216:	4798      	blx	r3
	spi_set_clock_phase(p_spi, device->id, ((flags & 0x1) ^ 0x1));
  400218:	f086 0201 	eor.w	r2, r6, #1
  40021c:	4628      	mov	r0, r5
  40021e:	6821      	ldr	r1, [r4, #0]
  400220:	f002 0201 	and.w	r2, r2, #1
  400224:	4b07      	ldr	r3, [pc, #28]	; (400244 <spi_master_setup_device+0x74>)
  400226:	4798      	blx	r3
  400228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40022a:	bf00      	nop
  40022c:	02dc6c00 	.word	0x02dc6c00
  400230:	00401019 	.word	0x00401019
  400234:	00401005 	.word	0x00401005
  400238:	00401031 	.word	0x00401031
  40023c:	00400fc1 	.word	0x00400fc1
  400240:	00400f81 	.word	0x00400f81
  400244:	00400fa1 	.word	0x00400fa1
  400248:	00401049 	.word	0x00401049

0040024c <spi_select_device>:
 * \param p_spi   Base address of the SPI instance.
 * \param device  SPI device.
 *
 */
void spi_select_device(Spi *p_spi, struct spi_device *device)
{
  40024c:	b508      	push	{r3, lr}
 *
 * \return 1 for decode mode, 0 for direct mode.
 */
static inline uint32_t spi_get_peripheral_select_decode_setting(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PCSDEC) {
  40024e:	6843      	ldr	r3, [r0, #4]
	if (spi_get_peripheral_select_decode_setting(p_spi)) {
  400250:	f013 0f04 	tst.w	r3, #4
  400254:	d005      	beq.n	400262 <spi_select_device+0x16>
		if (device->id < MAX_NUM_WITH_DECODER) {
  400256:	6809      	ldr	r1, [r1, #0]
  400258:	290f      	cmp	r1, #15
  40025a:	d80b      	bhi.n	400274 <spi_select_device+0x28>
			spi_set_peripheral_chip_select_value(p_spi, device->id);
  40025c:	4b06      	ldr	r3, [pc, #24]	; (400278 <spi_select_device+0x2c>)
  40025e:	4798      	blx	r3
  400260:	bd08      	pop	{r3, pc}
		}
	} else {
		if (device->id < MAX_NUM_WITHOUT_DECODER) {
  400262:	680b      	ldr	r3, [r1, #0]
  400264:	2b03      	cmp	r3, #3
  400266:	d805      	bhi.n	400274 <spi_select_device+0x28>
			spi_set_peripheral_chip_select_value(p_spi, (~(1 << device->id)));
  400268:	2201      	movs	r2, #1
  40026a:	fa02 f103 	lsl.w	r1, r2, r3
  40026e:	43c9      	mvns	r1, r1
  400270:	4b01      	ldr	r3, [pc, #4]	; (400278 <spi_select_device+0x2c>)
  400272:	4798      	blx	r3
  400274:	bd08      	pop	{r3, pc}
  400276:	bf00      	nop
  400278:	00400f1d 	.word	0x00400f1d

0040027c <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
  40027c:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  40027e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400282:	4b2e      	ldr	r3, [pc, #184]	; (40033c <board_init+0xc0>)
  400284:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400286:	200b      	movs	r0, #11
  400288:	4c2d      	ldr	r4, [pc, #180]	; (400340 <board_init+0xc4>)
  40028a:	47a0      	blx	r4
  40028c:	200c      	movs	r0, #12
  40028e:	47a0      	blx	r4
  400290:	200d      	movs	r0, #13
  400292:	47a0      	blx	r4
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();

	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
  400294:	2017      	movs	r0, #23
  400296:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40029a:	4c2a      	ldr	r4, [pc, #168]	; (400344 <board_init+0xc8>)
  40029c:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
  40029e:	202e      	movs	r0, #46	; 0x2e
  4002a0:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4002a4:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
  4002a6:	2019      	movs	r0, #25
  4002a8:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  4002ac:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
  4002ae:	200f      	movs	r0, #15
  4002b0:	4925      	ldr	r1, [pc, #148]	; (400348 <board_init+0xcc>)
  4002b2:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
  4002b4:	2010      	movs	r0, #16
  4002b6:	4925      	ldr	r1, [pc, #148]	; (40034c <board_init+0xd0>)
  4002b8:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART0_PIO, PINS_UART0, PINS_UART0_FLAGS);
  4002ba:	4825      	ldr	r0, [pc, #148]	; (400350 <board_init+0xd4>)
  4002bc:	f44f 61c0 	mov.w	r1, #1536	; 0x600
  4002c0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  4002c4:	4b23      	ldr	r3, [pc, #140]	; (400354 <board_init+0xd8>)
  4002c6:	4798      	blx	r3
#endif

	/* Configure ADC example pins */
#ifdef CONF_BOARD_ADC
	/* TC TIOA configuration */
	gpio_configure_pin(PIN_TC0_TIOA0,PIN_TC0_TIOA0_FLAGS);
  4002c8:	2000      	movs	r0, #0
  4002ca:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4002ce:	47a0      	blx	r4

	/* ADC Trigger configuration */
	gpio_configure_pin(PINS_ADC_TRIG, PINS_ADC_TRIG_FLAG);
  4002d0:	2008      	movs	r0, #8
  4002d2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4002d6:	47a0      	blx	r4
		gpio_configure_pin(TWI1_CLK_GPIO, TWI1_CLK_FLAGS);
#endif

	/* Configure SPI pins */
#if (defined CONF_BOARD_SPI) || (defined CONF_BOARD_SD_MMC_SPI)
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  4002d8:	200c      	movs	r0, #12
  4002da:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4002de:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  4002e0:	200d      	movs	r0, #13
  4002e2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4002e6:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  4002e8:	200e      	movs	r0, #14
  4002ea:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4002ee:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS1
		#if defined(CONF_BOARD_SPI_NPCS1_GPIO) && defined(CONF_BOARD_SPI_NPCS1_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS1_GPIO, CONF_BOARD_SPI_NPCS1_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS1_PA31_GPIO, SPI_NPCS1_PA31_FLAGS);
  4002f0:	201f      	movs	r0, #31
  4002f2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4002f6:	47a0      	blx	r4

	#ifdef CONF_BOARD_SPI_NPCS2
		#if defined(CONF_BOARD_SPI_NPCS2_GPIO) && defined(CONF_BOARD_SPI_NPCS2_FLAGS)
			gpio_configure_pin(CONF_BOARD_SPI_NPCS2_GPIO, CONF_BOARD_SPI_NPCS2_FLAGS);
		#else
			gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  4002f8:	201e      	movs	r0, #30
  4002fa:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4002fe:	47a0      	blx	r4
	gpio_set_pin_low(PIN_RE_IDX);
#endif

#ifdef CONF_BOARD_ILI9225
	/* Configure SPI LCD control pin */
	gpio_configure_pin(SPI_MISO_GPIO, SPI_MISO_FLAGS);
  400300:	200c      	movs	r0, #12
  400302:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400306:	47a0      	blx	r4
	gpio_configure_pin(SPI_MOSI_GPIO, SPI_MOSI_FLAGS);
  400308:	200d      	movs	r0, #13
  40030a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  40030e:	47a0      	blx	r4
	gpio_configure_pin(SPI_SPCK_GPIO, SPI_SPCK_FLAGS);
  400310:	200e      	movs	r0, #14
  400312:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400316:	47a0      	blx	r4
	gpio_configure_pin(SPI_NPCS2_PA30_GPIO, SPI_NPCS2_PA30_FLAGS);
  400318:	201e      	movs	r0, #30
  40031a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40031e:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RS_GPIO, BOARD_ILI9225_RS_FLAGS);
  400320:	201c      	movs	r0, #28
  400322:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400326:	47a0      	blx	r4
	gpio_configure_pin(BOARD_ILI9225_RSTN_GPIO, BOARD_ILI9225_RSTN_FLAGS);
  400328:	201d      	movs	r0, #29
  40032a:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  40032e:	47a0      	blx	r4
#endif

#ifdef CONF_BOARD_AAT3193
	/* Configure Backlight control pin */
	gpio_configure_pin(BOARD_AAT31XX_SET_GPIO, BOARD_AAT31XX_SET_FLAGS);
  400330:	204d      	movs	r0, #77	; 0x4d
  400332:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
  400336:	47a0      	blx	r4
  400338:	bd10      	pop	{r4, pc}
  40033a:	bf00      	nop
  40033c:	400e1450 	.word	0x400e1450
  400340:	00400ee1 	.word	0x00400ee1
  400344:	00400b29 	.word	0x00400b29
  400348:	28000079 	.word	0x28000079
  40034c:	28000059 	.word	0x28000059
  400350:	400e0e00 	.word	0x400e0e00
  400354:	00400c4d 	.word	0x00400c4d

00400358 <aat31xx_set_backlight>:
 * \param ul_level backlight level.
 *
 * \note pin BOARD_AAT31XX_SET_GPIO must be configured before calling aat31xx_set_backlight.
 */
void aat31xx_set_backlight(uint32_t ul_level)
{
  400358:	b470      	push	{r4, r5, r6}
  40035a:	b083      	sub	sp, #12
#ifdef CONF_BOARD_AAT3155
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
#endif

#ifdef CONF_BOARD_AAT3193
	ul_level = AAT31XX_MAX_BACKLIGHT_LEVEL - ul_level + 1;
  40035c:	f1c0 0011 	rsb	r0, r0, #17
#endif

	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
  400360:	2810      	cmp	r0, #16
  400362:	bf34      	ite	cc
  400364:	4606      	movcc	r6, r0
  400366:	2610      	movcs	r6, #16
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;
  400368:	2e00      	cmp	r6, #0
  40036a:	bf08      	it	eq
  40036c:	2601      	moveq	r6, #1

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
  40036e:	2100      	movs	r1, #0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400370:	4d0f      	ldr	r5, [pc, #60]	; (4003b0 <aat31xx_set_backlight+0x58>)
  400372:	f44f 5400 	mov.w	r4, #8192	; 0x2000
		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);
		ul_delay = DELAY_PULSE;
  400376:	2018      	movs	r0, #24
  400378:	636c      	str	r4, [r5, #52]	; 0x34
  40037a:	9001      	str	r0, [sp, #4]
		while (ul_delay--) {
  40037c:	9b01      	ldr	r3, [sp, #4]
  40037e:	1e5a      	subs	r2, r3, #1
  400380:	9201      	str	r2, [sp, #4]
  400382:	2b00      	cmp	r3, #0
  400384:	d1fa      	bne.n	40037c <aat31xx_set_backlight+0x24>
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400386:	632c      	str	r4, [r5, #48]	; 0x30
		}

		ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_HIGH);

		ul_delay = DELAY_PULSE;
  400388:	9001      	str	r0, [sp, #4]
		while (ul_delay--) {
  40038a:	9b01      	ldr	r3, [sp, #4]
  40038c:	1e5a      	subs	r2, r3, #1
  40038e:	9201      	str	r2, [sp, #4]
  400390:	2b00      	cmp	r3, #0
  400392:	d1fa      	bne.n	40038a <aat31xx_set_backlight+0x32>
	/* Ensure valid level */
	ul_level = (ul_level > AAT31XX_MAX_BACKLIGHT_LEVEL) ? AAT31XX_MAX_BACKLIGHT_LEVEL : ul_level;
	ul_level = (ul_level < AAT31XX_MIN_BACKLIGHT_LEVEL) ? AAT31XX_MIN_BACKLIGHT_LEVEL : ul_level;

	/* Set new backlight level */
	for (i = 0; i < ul_level; i++) {
  400394:	3101      	adds	r1, #1
  400396:	428e      	cmp	r6, r1
  400398:	d8ee      	bhi.n	400378 <aat31xx_set_backlight+0x20>
		ul_delay = DELAY_PULSE;
		while (ul_delay--) {
		}
	}

	ul_delay = DELAY_ENABLE;
  40039a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  40039e:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  4003a0:	9b01      	ldr	r3, [sp, #4]
  4003a2:	1e5a      	subs	r2, r3, #1
  4003a4:	9201      	str	r2, [sp, #4]
  4003a6:	2b00      	cmp	r3, #0
  4003a8:	d1fa      	bne.n	4003a0 <aat31xx_set_backlight+0x48>
	}
}
  4003aa:	b003      	add	sp, #12
  4003ac:	bc70      	pop	{r4, r5, r6}
  4003ae:	4770      	bx	lr
  4003b0:	400e1200 	.word	0x400e1200

004003b4 <aat31xx_disable_backlight>:

/**
 * \brief Switch off backlight.
 */
void aat31xx_disable_backlight(void)
{
  4003b4:	b082      	sub	sp, #8
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4003b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4003ba:	4b06      	ldr	r3, [pc, #24]	; (4003d4 <aat31xx_disable_backlight+0x20>)
  4003bc:	635a      	str	r2, [r3, #52]	; 0x34
	volatile uint32_t ul_delay;

	ioport_set_pin_level(BOARD_AAT31XX_SET_GPIO, IOPORT_PIN_LEVEL_LOW);

	ul_delay = DELAY_DISABLE;
  4003be:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  4003c2:	9301      	str	r3, [sp, #4]
	while (ul_delay--) {
  4003c4:	9b01      	ldr	r3, [sp, #4]
  4003c6:	1e5a      	subs	r2, r3, #1
  4003c8:	9201      	str	r2, [sp, #4]
  4003ca:	2b00      	cmp	r3, #0
  4003cc:	d1fa      	bne.n	4003c4 <aat31xx_disable_backlight+0x10>
	}
}
  4003ce:	b002      	add	sp, #8
  4003d0:	4770      	bx	lr
  4003d2:	bf00      	nop
  4003d4:	400e1200 	.word	0x400e1200

004003d8 <ili9225_delay>:

/**
 * \brief Delay function.
 */
static void ili9225_delay(uint32_t ul_ms)
{
  4003d8:	b082      	sub	sp, #8
	volatile uint32_t i;

	for(i = 0; i < ul_ms; i++) {
  4003da:	2300      	movs	r3, #0
  4003dc:	9301      	str	r3, [sp, #4]
  4003de:	9b01      	ldr	r3, [sp, #4]
  4003e0:	4298      	cmp	r0, r3
  4003e2:	d911      	bls.n	400408 <ili9225_delay+0x30>
		for(i = 0; i < 100000; i++) {
  4003e4:	2100      	movs	r1, #0
  4003e6:	4a09      	ldr	r2, [pc, #36]	; (40040c <ili9225_delay+0x34>)
  4003e8:	9101      	str	r1, [sp, #4]
  4003ea:	9b01      	ldr	r3, [sp, #4]
  4003ec:	4293      	cmp	r3, r2
  4003ee:	d805      	bhi.n	4003fc <ili9225_delay+0x24>
  4003f0:	9b01      	ldr	r3, [sp, #4]
  4003f2:	3301      	adds	r3, #1
  4003f4:	9301      	str	r3, [sp, #4]
  4003f6:	9b01      	ldr	r3, [sp, #4]
  4003f8:	4293      	cmp	r3, r2
  4003fa:	d9f9      	bls.n	4003f0 <ili9225_delay+0x18>
 */
static void ili9225_delay(uint32_t ul_ms)
{
	volatile uint32_t i;

	for(i = 0; i < ul_ms; i++) {
  4003fc:	9b01      	ldr	r3, [sp, #4]
  4003fe:	3301      	adds	r3, #1
  400400:	9301      	str	r3, [sp, #4]
  400402:	9b01      	ldr	r3, [sp, #4]
  400404:	4283      	cmp	r3, r0
  400406:	d3ef      	bcc.n	4003e8 <ili9225_delay+0x10>
		for(i = 0; i < 100000; i++) {
		}
	}
}
  400408:	b002      	add	sp, #8
  40040a:	4770      	bx	lr
  40040c:	0001869f 	.word	0x0001869f

00400410 <ili9225_check_box_coordinates>:
 * \param p_ul_x2 X coordinate of lower-right corner on LCD.
 * \param p_ul_y2 Y coordinate of lower-right corner on LCD.
 */
static void ili9225_check_box_coordinates(uint32_t *p_ul_x1, uint32_t *p_ul_y1,
		uint32_t *p_ul_x2, uint32_t *p_ul_y2)
{
  400410:	b430      	push	{r4, r5}
	uint32_t ul;

	if (*p_ul_x1 >= ILI9225_LCD_WIDTH) {
  400412:	6804      	ldr	r4, [r0, #0]
  400414:	2caf      	cmp	r4, #175	; 0xaf
		*p_ul_x1 = ILI9225_LCD_WIDTH - 1;
  400416:	bf84      	itt	hi
  400418:	24af      	movhi	r4, #175	; 0xaf
  40041a:	6004      	strhi	r4, [r0, #0]
	}

	if (*p_ul_x2 >= ILI9225_LCD_WIDTH) {
  40041c:	6814      	ldr	r4, [r2, #0]
  40041e:	2caf      	cmp	r4, #175	; 0xaf
		*p_ul_x2 = ILI9225_LCD_WIDTH - 1;
  400420:	bf84      	itt	hi
  400422:	24af      	movhi	r4, #175	; 0xaf
  400424:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 >= ILI9225_LCD_HEIGHT) {
  400426:	680c      	ldr	r4, [r1, #0]
  400428:	2cdb      	cmp	r4, #219	; 0xdb
		*p_ul_y1 = ILI9225_LCD_HEIGHT - 1;
  40042a:	bf84      	itt	hi
  40042c:	24db      	movhi	r4, #219	; 0xdb
  40042e:	600c      	strhi	r4, [r1, #0]
	}

	if (*p_ul_y2 >= ILI9225_LCD_HEIGHT) {
  400430:	681c      	ldr	r4, [r3, #0]
  400432:	2cdb      	cmp	r4, #219	; 0xdb
		*p_ul_y2 = ILI9225_LCD_HEIGHT - 1;
  400434:	bf84      	itt	hi
  400436:	24db      	movhi	r4, #219	; 0xdb
  400438:	601c      	strhi	r4, [r3, #0]
	}

	if (*p_ul_x1 > *p_ul_x2) {
  40043a:	6804      	ldr	r4, [r0, #0]
  40043c:	6815      	ldr	r5, [r2, #0]
  40043e:	42ac      	cmp	r4, r5
		ul = *p_ul_x1;
		*p_ul_x1 = *p_ul_x2;
  400440:	bf84      	itt	hi
  400442:	6005      	strhi	r5, [r0, #0]
		*p_ul_x2 = ul;
  400444:	6014      	strhi	r4, [r2, #0]
	}

	if (*p_ul_y1 > *p_ul_y2) {
  400446:	680a      	ldr	r2, [r1, #0]
  400448:	6818      	ldr	r0, [r3, #0]
  40044a:	4282      	cmp	r2, r0
		ul = *p_ul_y1;
		*p_ul_y1 = *p_ul_y2;
  40044c:	bf84      	itt	hi
  40044e:	6008      	strhi	r0, [r1, #0]
		*p_ul_y2 = ul;
  400450:	601a      	strhi	r2, [r3, #0]
	}
}
  400452:	bc30      	pop	{r4, r5}
  400454:	4770      	bx	lr
  400456:	bf00      	nop

00400458 <ili9225_write_cmd>:
 * \brief Send command to LCD controller.
 *
 * \param uc_cmd command.
 */
static void ili9225_write_cmd(uint8_t uc_cmd)
{
  400458:	b570      	push	{r4, r5, r6, lr}
  40045a:	4606      	mov	r6, r0
	/* Configure SPI Chip Select: SPI Mode 0, 8bits */
	spi_set_bits_per_transfer(BOARD_ILI9225_SPI, BOARD_ILI9225_SPI_NPCS, SPI_CSR_BITS_8_BIT);
  40045c:	4c0b      	ldr	r4, [pc, #44]	; (40048c <ili9225_write_cmd+0x34>)
  40045e:	4620      	mov	r0, r4
  400460:	2102      	movs	r1, #2
  400462:	2200      	movs	r2, #0
  400464:	4d0a      	ldr	r5, [pc, #40]	; (400490 <ili9225_write_cmd+0x38>)
  400466:	47a8      	blx	r5
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400468:	2301      	movs	r3, #1
  40046a:	6023      	str	r3, [r4, #0]
	/* Enable SPI */
	spi_enable(BOARD_ILI9225_SPI);

	/* Transfer cmd */
	gpio_set_pin_low(BOARD_ILI9225_RS_GPIO);
  40046c:	201c      	movs	r0, #28
  40046e:	4b09      	ldr	r3, [pc, #36]	; (400494 <ili9225_write_cmd+0x3c>)
  400470:	4798      	blx	r3
	spi_write(BOARD_ILI9225_SPI, uc_cmd, BOARD_ILI9225_SPI_NPCS, 0);
  400472:	4620      	mov	r0, r4
  400474:	4631      	mov	r1, r6
  400476:	2202      	movs	r2, #2
  400478:	2300      	movs	r3, #0
  40047a:	4e07      	ldr	r6, [pc, #28]	; (400498 <ili9225_write_cmd+0x40>)
  40047c:	47b0      	blx	r6
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40047e:	2102      	movs	r1, #2
  400480:	6021      	str	r1, [r4, #0]

	/* Disable SPI */
	spi_disable(BOARD_ILI9225_SPI);

	/* Back to the default config: SPI Mode 0, 16bits */
	spi_set_bits_per_transfer(BOARD_ILI9225_SPI, BOARD_ILI9225_SPI_NPCS, SPI_CSR_BITS_16_BIT);
  400482:	4620      	mov	r0, r4
  400484:	2280      	movs	r2, #128	; 0x80
  400486:	47a8      	blx	r5
  400488:	bd70      	pop	{r4, r5, r6, pc}
  40048a:	bf00      	nop
  40048c:	40008000 	.word	0x40008000
  400490:	00401005 	.word	0x00401005
  400494:	00400ae9 	.word	0x00400ae9
  400498:	00400f49 	.word	0x00400f49

0040049c <ili9225_write_ram>:
 * \brief Write data to LCD GRAM.
 *
 * \param us_data data.
 */
static void ili9225_write_ram(uint16_t us_data)
{
  40049c:	b538      	push	{r3, r4, r5, lr}
  40049e:	4605      	mov	r5, r0
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4004a0:	4c07      	ldr	r4, [pc, #28]	; (4004c0 <ili9225_write_ram+0x24>)
  4004a2:	2301      	movs	r3, #1
  4004a4:	6023      	str	r3, [r4, #0]
	/* Enable SPI */
	spi_enable(BOARD_ILI9225_SPI);

	/* Transfer data */
	gpio_set_pin_high(BOARD_ILI9225_RS_GPIO);
  4004a6:	201c      	movs	r0, #28
  4004a8:	4b06      	ldr	r3, [pc, #24]	; (4004c4 <ili9225_write_ram+0x28>)
  4004aa:	4798      	blx	r3
	spi_write(BOARD_ILI9225_SPI, us_data, BOARD_ILI9225_SPI_NPCS, 0);
  4004ac:	4620      	mov	r0, r4
  4004ae:	4629      	mov	r1, r5
  4004b0:	2202      	movs	r2, #2
  4004b2:	2300      	movs	r3, #0
  4004b4:	4d04      	ldr	r5, [pc, #16]	; (4004c8 <ili9225_write_ram+0x2c>)
  4004b6:	47a8      	blx	r5
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  4004b8:	2302      	movs	r3, #2
  4004ba:	6023      	str	r3, [r4, #0]
  4004bc:	bd38      	pop	{r3, r4, r5, pc}
  4004be:	bf00      	nop
  4004c0:	40008000 	.word	0x40008000
  4004c4:	00400acd 	.word	0x00400acd
  4004c8:	00400f49 	.word	0x00400f49

004004cc <ili9225_write_register>:
 *
 * \param uc_reg register address.
 * \param us_data data to be written.
 */
static void ili9225_write_register(uint8_t uc_reg, ili9225_color_t us_data)
{
  4004cc:	b510      	push	{r4, lr}
  4004ce:	460c      	mov	r4, r1
	ili9225_write_cmd(uc_reg);
  4004d0:	4b02      	ldr	r3, [pc, #8]	; (4004dc <ili9225_write_register+0x10>)
  4004d2:	4798      	blx	r3
	ili9225_write_ram(us_data);
  4004d4:	4620      	mov	r0, r4
  4004d6:	4b02      	ldr	r3, [pc, #8]	; (4004e0 <ili9225_write_register+0x14>)
  4004d8:	4798      	blx	r3
  4004da:	bd10      	pop	{r4, pc}
  4004dc:	00400459 	.word	0x00400459
  4004e0:	0040049d 	.word	0x0040049d

004004e4 <ili9225_write_ram_buffer>:
 *
 * \param p_us_buf data buffer.
 * \param ul_size size in pixels.
 */
static void ili9225_write_ram_buffer(const ili9225_color_t *p_us_buf, uint32_t ul_size)
{
  4004e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4004e8:	b082      	sub	sp, #8
  4004ea:	4605      	mov	r5, r0
	volatile uint32_t i;
	if (ul_size == 0)
  4004ec:	460c      	mov	r4, r1
  4004ee:	b1f1      	cbz	r1, 40052e <ili9225_write_ram_buffer+0x4a>
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  4004f0:	2201      	movs	r2, #1
  4004f2:	4b10      	ldr	r3, [pc, #64]	; (400534 <ili9225_write_ram_buffer+0x50>)
  4004f4:	601a      	str	r2, [r3, #0]

	/* Enable SPI */
	spi_enable(BOARD_ILI9225_SPI);

	/* Transfer data */
	gpio_set_pin_high(BOARD_ILI9225_RS_GPIO);
  4004f6:	201c      	movs	r0, #28
  4004f8:	4b0f      	ldr	r3, [pc, #60]	; (400538 <ili9225_write_ram_buffer+0x54>)
  4004fa:	4798      	blx	r3
	for(i = 0; i < ul_size; i++){
  4004fc:	2300      	movs	r3, #0
  4004fe:	9301      	str	r3, [sp, #4]
  400500:	9b01      	ldr	r3, [sp, #4]
  400502:	429c      	cmp	r4, r3
  400504:	d910      	bls.n	400528 <ili9225_write_ram_buffer+0x44>
		spi_write(BOARD_ILI9225_SPI, p_us_buf[i], BOARD_ILI9225_SPI_NPCS, 0);
  400506:	f8df 802c 	ldr.w	r8, [pc, #44]	; 400534 <ili9225_write_ram_buffer+0x50>
  40050a:	2702      	movs	r7, #2
  40050c:	4e0b      	ldr	r6, [pc, #44]	; (40053c <ili9225_write_ram_buffer+0x58>)
  40050e:	9b01      	ldr	r3, [sp, #4]
  400510:	4640      	mov	r0, r8
  400512:	f835 1013 	ldrh.w	r1, [r5, r3, lsl #1]
  400516:	463a      	mov	r2, r7
  400518:	2300      	movs	r3, #0
  40051a:	47b0      	blx	r6
	/* Enable SPI */
	spi_enable(BOARD_ILI9225_SPI);

	/* Transfer data */
	gpio_set_pin_high(BOARD_ILI9225_RS_GPIO);
	for(i = 0; i < ul_size; i++){
  40051c:	9b01      	ldr	r3, [sp, #4]
  40051e:	3301      	adds	r3, #1
  400520:	9301      	str	r3, [sp, #4]
  400522:	9b01      	ldr	r3, [sp, #4]
  400524:	429c      	cmp	r4, r3
  400526:	d8f2      	bhi.n	40050e <ili9225_write_ram_buffer+0x2a>
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400528:	2202      	movs	r2, #2
  40052a:	4b02      	ldr	r3, [pc, #8]	; (400534 <ili9225_write_ram_buffer+0x50>)
  40052c:	601a      	str	r2, [r3, #0]
		spi_write(BOARD_ILI9225_SPI, p_us_buf[i], BOARD_ILI9225_SPI_NPCS, 0);
	}

	spi_disable(BOARD_ILI9225_SPI);
}
  40052e:	b002      	add	sp, #8
  400530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400534:	40008000 	.word	0x40008000
  400538:	00400acd 	.word	0x00400acd
  40053c:	00400f49 	.word	0x00400f49

00400540 <ili9225_spi_handler>:
 *
 * \return The interrupt mask value.
 */
static inline uint32_t spi_read_interrupt_mask(Spi *p_spi)
{
	return p_spi->SPI_IMR;
  400540:	4b03      	ldr	r3, [pc, #12]	; (400550 <ili9225_spi_handler+0x10>)
  400542:	69da      	ldr	r2, [r3, #28]
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be disabled.
 */
static inline void spi_disable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IDR = ul_sources;
  400544:	619a      	str	r2, [r3, #24]
	/* Disable interrupts */
	ul_spi_reg = spi_read_interrupt_mask(BOARD_ILI9225_SPI);
	spi_disable_interrupt(BOARD_ILI9225_SPI, ul_spi_reg);

	/* Set the flag to notify the end of transfer */
	g_by_transfend_flag = 1;
  400546:	2201      	movs	r2, #1
  400548:	4b02      	ldr	r3, [pc, #8]	; (400554 <ili9225_spi_handler+0x14>)
  40054a:	701a      	strb	r2, [r3, #0]
  40054c:	4770      	bx	lr
  40054e:	bf00      	nop
  400550:	40008000 	.word	0x40008000
  400554:	20000ad8 	.word	0x20000ad8

00400558 <ili9225_display_on>:

/**
 * \brief Turn on the LCD.
 */
void ili9225_display_on(void)
{
  400558:	b508      	push	{r3, lr}
	ili9225_write_register(ILI9225_DISP_CTRL1,
  40055a:	2007      	movs	r0, #7
  40055c:	f241 0117 	movw	r1, #4119	; 0x1017
  400560:	4b01      	ldr	r3, [pc, #4]	; (400568 <ili9225_display_on+0x10>)
  400562:	4798      	blx	r3
  400564:	bd08      	pop	{r3, pc}
  400566:	bf00      	nop
  400568:	004004cd 	.word	0x004004cd

0040056c <ili9225_display_off>:

/**
 * \brief Turn off the LCD.
 */
void ili9225_display_off(void)
{
  40056c:	b508      	push	{r3, lr}
	ili9225_write_register(ILI9225_DISP_CTRL1, 0x0000);
  40056e:	2007      	movs	r0, #7
  400570:	2100      	movs	r1, #0
  400572:	4b01      	ldr	r3, [pc, #4]	; (400578 <ili9225_display_off+0xc>)
  400574:	4798      	blx	r3
  400576:	bd08      	pop	{r3, pc}
  400578:	004004cd 	.word	0x004004cd

0040057c <ili9225_set_foreground_color>:
	uint32_t i;
	ili9225_color_t w_color;

	/* Convert 24 bit RGB color into 5-6-5 RGB color */
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
			(ul_rgb24bits & 0x00FC00) >> 5 |
  40057c:	f400 417c 	and.w	r1, r0, #64512	; 0xfc00
{
	uint32_t i;
	ili9225_color_t w_color;

	/* Convert 24 bit RGB color into 5-6-5 RGB color */
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
  400580:	f400 0378 	and.w	r3, r0, #16252928	; 0xf80000
  400584:	0a1b      	lsrs	r3, r3, #8
  400586:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
			(ul_rgb24bits & 0x00FC00) >> 5 |
			(ul_rgb24bits & 0x0000F8) >> 3;
  40058a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
{
	uint32_t i;
	ili9225_color_t w_color;

	/* Convert 24 bit RGB color into 5-6-5 RGB color */
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
  40058e:	4301      	orrs	r1, r0
  400590:	4a04      	ldr	r2, [pc, #16]	; (4005a4 <ili9225_set_foreground_color+0x28>)
  400592:	1e93      	subs	r3, r2, #2
  400594:	f502 72af 	add.w	r2, r2, #350	; 0x15e
			(ul_rgb24bits & 0x00FC00) >> 5 |
			(ul_rgb24bits & 0x0000F8) >> 3;

	/* Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
		g_ul_pixel_cache[i] = w_color;
  400598:	f823 1f02 	strh.w	r1, [r3, #2]!
	w_color = (ul_rgb24bits & 0xF80000) >> 8 |
			(ul_rgb24bits & 0x00FC00) >> 5 |
			(ul_rgb24bits & 0x0000F8) >> 3;

	/* Fill the cache with selected color */
	for (i = 0; i < LCD_DATA_CACHE_SIZE; ++i) {
  40059c:	4293      	cmp	r3, r2
  40059e:	d1fb      	bne.n	400598 <ili9225_set_foreground_color+0x1c>
		g_ul_pixel_cache[i] = w_color;
	}
}
  4005a0:	4770      	bx	lr
  4005a2:	bf00      	nop
  4005a4:	20000978 	.word	0x20000978

004005a8 <ili9225_set_window>:
 * \param ul_width The width of the window.
 * \param ul_height The height of the window.
 */
void ili9225_set_window(uint32_t ul_x, uint32_t ul_y, uint32_t ul_width,
		uint32_t ul_height)
{
  4005a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4005aa:	4606      	mov	r6, r0
  4005ac:	460d      	mov	r5, r1
  4005ae:	461f      	mov	r7, r3
	Assert(ul_width <= (0xB0 - ul_x));
	Assert(ul_height <= (0xDC - ul_y));

	/* Set Horizontal Address End Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
			ILI9225_HORIZONTAL_WINDOW_ADDR1_HEA((uint16_t)(ul_x + ul_width - 1)));
  4005b0:	3a01      	subs	r2, #1
  4005b2:	1811      	adds	r1, r2, r0
	Assert(ul_y <= 0xDB);
	Assert(ul_width <= (0xB0 - ul_x));
	Assert(ul_height <= (0xDC - ul_y));

	/* Set Horizontal Address End Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
  4005b4:	2036      	movs	r0, #54	; 0x36
  4005b6:	b2c9      	uxtb	r1, r1
  4005b8:	4c06      	ldr	r4, [pc, #24]	; (4005d4 <ili9225_set_window+0x2c>)
  4005ba:	47a0      	blx	r4
			ILI9225_HORIZONTAL_WINDOW_ADDR1_HEA((uint16_t)(ul_x + ul_width - 1)));

	/* Set Horizontal Address Start Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR2,
  4005bc:	2037      	movs	r0, #55	; 0x37
  4005be:	b2f1      	uxtb	r1, r6
  4005c0:	47a0      	blx	r4
			ILI9225_HORIZONTAL_WINDOW_ADDR2_HSA((uint16_t)ul_x));

	/* Set Vertical Address End Position */
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
			ILI9225_VERTICAL_WINDOW_ADDR1_VEA((uint16_t)(ul_y + ul_height - 1)));
  4005c2:	3f01      	subs	r7, #1
  4005c4:	1979      	adds	r1, r7, r5
	/* Set Horizontal Address Start Position */
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR2,
			ILI9225_HORIZONTAL_WINDOW_ADDR2_HSA((uint16_t)ul_x));

	/* Set Vertical Address End Position */
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
  4005c6:	2038      	movs	r0, #56	; 0x38
  4005c8:	b2c9      	uxtb	r1, r1
  4005ca:	47a0      	blx	r4
			ILI9225_VERTICAL_WINDOW_ADDR1_VEA((uint16_t)(ul_y + ul_height - 1)));

	/* Set Vertical Address Start Position */
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR2,
  4005cc:	2039      	movs	r0, #57	; 0x39
  4005ce:	b2e9      	uxtb	r1, r5
  4005d0:	47a0      	blx	r4
  4005d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4005d4:	004004cd 	.word	0x004004cd

004005d8 <ili9225_set_cursor_position>:
 *
 * \param ul_x X coordinate of upper-left corner on LCD.
 * \param ul_y Y coordinate of upper-left corner on LCD.
 */
void ili9225_set_cursor_position(uint16_t ul_x, uint16_t ul_y)
{
  4005d8:	b538      	push	{r3, r4, r5, lr}
  4005da:	460d      	mov	r5, r1
	/* GRAM Horizontal/Vertical Address Set (R20h, R21h) */
	ili9225_write_register(ILI9225_RAM_ADDR_SET1, ILI9225_RAM_ADDR_SET1_AD(ul_x));  /* column */
  4005dc:	b2c1      	uxtb	r1, r0
  4005de:	2020      	movs	r0, #32
  4005e0:	4c02      	ldr	r4, [pc, #8]	; (4005ec <ili9225_set_cursor_position+0x14>)
  4005e2:	47a0      	blx	r4
	ili9225_write_register(ILI9225_RAM_ADDR_SET2, ILI9225_RAM_ADDR_SET2_AD(ul_y));  /* row */
  4005e4:	2021      	movs	r0, #33	; 0x21
  4005e6:	b2e9      	uxtb	r1, r5
  4005e8:	47a0      	blx	r4
  4005ea:	bd38      	pop	{r3, r4, r5, pc}
  4005ec:	004004cd 	.word	0x004004cd

004005f0 <ili9225_init>:
 * \param p_opt pointer to ILI9225 option structure.
 *
 * \return 0 if initialization succeeds, otherwise fails.
 */
uint32_t ili9225_init(struct ili9225_opt_t *p_opt)
{
  4005f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  4005f4:	b085      	sub	sp, #20
  4005f6:	4681      	mov	r9, r0
	struct spi_device ILI9225_SPI_DEVICE = {
  4005f8:	f04f 0802 	mov.w	r8, #2
  4005fc:	af04      	add	r7, sp, #16
  4005fe:	f847 8d04 	str.w	r8, [r7, #-4]!
		// Board specific chip select configuration
		.id = BOARD_ILI9225_SPI_NPCS
	};

	/* Reset LCD module */
	gpio_set_pin_high(BOARD_ILI9225_RSTN_GPIO);
  400602:	201d      	movs	r0, #29
  400604:	4c5e      	ldr	r4, [pc, #376]	; (400780 <ili9225_init+0x190>)
  400606:	47a0      	blx	r4
	ili9225_delay(2); /* wait for at least 2ms */
  400608:	4640      	mov	r0, r8
  40060a:	4e5e      	ldr	r6, [pc, #376]	; (400784 <ili9225_init+0x194>)
  40060c:	47b0      	blx	r6

	gpio_set_pin_low(BOARD_ILI9225_RSTN_GPIO);
  40060e:	201d      	movs	r0, #29
  400610:	4b5d      	ldr	r3, [pc, #372]	; (400788 <ili9225_init+0x198>)
  400612:	4798      	blx	r3
	ili9225_delay(20); /* wait for at least 20ms */
  400614:	2014      	movs	r0, #20
  400616:	47b0      	blx	r6

	gpio_set_pin_high(BOARD_ILI9225_RSTN_GPIO);
  400618:	201d      	movs	r0, #29
  40061a:	47a0      	blx	r4
	ili9225_delay(50); /* wait for at least 50ms */
  40061c:	2032      	movs	r0, #50	; 0x32
  40061e:	47b0      	blx	r6
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400620:	4c5a      	ldr	r4, [pc, #360]	; (40078c <ili9225_init+0x19c>)
  400622:	f8c4 8000 	str.w	r8, [r4]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_reset(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SWRST;
  400626:	2380      	movs	r3, #128	; 0x80
  400628:	6023      	str	r3, [r4, #0]
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_set_lastxfer(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_LASTXFER;
  40062a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  40062e:	6023      	str	r3, [r4, #0]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  400630:	4b57      	ldr	r3, [pc, #348]	; (400790 <ili9225_init+0x1a0>)
  400632:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400636:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  40063a:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  40063e:	2500      	movs	r5, #0
  400640:	f883 5315 	strb.w	r5, [r3, #789]	; 0x315

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  400644:	601a      	str	r2, [r3, #0]
	NVIC_ClearPendingIRQ(BOARD_ILI9225_SPI_IRQN);
	NVIC_SetPriority(BOARD_ILI9225_SPI_IRQN, 0);
	NVIC_EnableIRQ(BOARD_ILI9225_SPI_IRQN);

	/* Init, select and configure the chip */
	spi_master_init(BOARD_ILI9225_SPI);
  400646:	4620      	mov	r0, r4
  400648:	4b52      	ldr	r3, [pc, #328]	; (400794 <ili9225_init+0x1a4>)
  40064a:	4798      	blx	r3
	spi_master_setup_device(BOARD_ILI9225_SPI, &ILI9225_SPI_DEVICE, SPI_MODE_0, ILI9225_SPI_BAUDRATE, 0);
  40064c:	9500      	str	r5, [sp, #0]
  40064e:	4620      	mov	r0, r4
  400650:	4639      	mov	r1, r7
  400652:	462a      	mov	r2, r5
  400654:	4b50      	ldr	r3, [pc, #320]	; (400798 <ili9225_init+0x1a8>)
  400656:	f8df c15c 	ldr.w	ip, [pc, #348]	; 4007b4 <ili9225_init+0x1c4>
  40065a:	47e0      	blx	ip
	spi_select_device(BOARD_ILI9225_SPI, &ILI9225_SPI_DEVICE);
  40065c:	4620      	mov	r0, r4
  40065e:	4639      	mov	r1, r7
  400660:	4b4e      	ldr	r3, [pc, #312]	; (40079c <ili9225_init+0x1ac>)
  400662:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_enable(Spi *p_spi)
{
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400664:	2701      	movs	r7, #1
  400666:	6027      	str	r7, [r4, #0]
 * \param p_spi Pointer to an SPI instance.
 * \param ul_sources Interrupts to be enabled.
 */
static inline void spi_enable_interrupt(Spi *p_spi, uint32_t ul_sources)
{
	p_spi->SPI_IER = ul_sources;
  400668:	6167      	str	r7, [r4, #20]
	/* Enable the SPI peripheral */
	spi_enable(BOARD_ILI9225_SPI);
	spi_enable_interrupt(BOARD_ILI9225_SPI, SPI_IER_RDRF);

	/* Turn off LCD */
	ili9225_display_off();
  40066a:	4b4d      	ldr	r3, [pc, #308]	; (4007a0 <ili9225_init+0x1b0>)
  40066c:	4798      	blx	r3

	/* Start Initial Sequence */
	/* Set SS bit and direction output from S528 to S1 */
	ili9225_write_register(ILI9225_DRIVER_OUTPUT_CTRL, ILI9225_DRIVER_OUTPUT_CTRL_SS |
  40066e:	4638      	mov	r0, r7
  400670:	f44f 718e 	mov.w	r1, #284	; 0x11c
  400674:	4c4b      	ldr	r4, [pc, #300]	; (4007a4 <ili9225_init+0x1b4>)
  400676:	47a0      	blx	r4
			ILI9225_DRIVER_OUTPUT_CTRL_NL(0x1c));
	/* Set 1 line inversion */
	ili9225_write_register(ILI9225_LCD_AC_DRIVING_CTRL, ILI9225_LCD_AC_DRIVING_CTRL_INV(0x01));
  400678:	4640      	mov	r0, r8
  40067a:	f44f 7180 	mov.w	r1, #256	; 0x100
  40067e:	47a0      	blx	r4
	/* Set GRAM write direction to horizontal */
	ili9225_write_register(ILI9225_ENTRY_MODE, ILI9225_ENTRY_MODE_BGR | ILI9225_ENTRY_MODE_ID(0x03));
  400680:	2003      	movs	r0, #3
  400682:	f241 0130 	movw	r1, #4144	; 0x1030
  400686:	47a0      	blx	r4
	/* Set BP and FP */
	ili9225_write_register(ILI9225_BLANK_PERIOD_CTRL1, ILI9225_BLANK_PERIOD_CTRL1_BP(0x08) |
  400688:	2008      	movs	r0, #8
  40068a:	f640 0108 	movw	r1, #2056	; 0x808
  40068e:	47a0      	blx	r4
			ILI9225_BLANK_PERIOD_CTRL1_FP(0x08));
	/* RGB Input Interface Control:16-bit RGB interface */
	ili9225_write_register(ILI9225_INTERFACE_CTRL, ILI9225_INTERFACE_CTRL_RIM(0x01));
  400690:	200c      	movs	r0, #12
  400692:	4639      	mov	r1, r7
  400694:	47a0      	blx	r4
	/* Set frame rate: 83Hz */
	ili9225_write_register(ILI9225_OSC_CTRL, ILI9225_OSC_CTRL_ON | ILI9225_OSC_CTRL_FOSC(0x0a));
  400696:	200f      	movs	r0, #15
  400698:	f640 2101 	movw	r1, #2561	; 0xa01
  40069c:	47a0      	blx	r4
	/* Set GRAM Address */
	ili9225_write_register(ILI9225_RAM_ADDR_SET1, ILI9225_RAM_ADDR_SET1_AD(ILI9225_LCD_WIDTH));
  40069e:	2020      	movs	r0, #32
  4006a0:	21b0      	movs	r1, #176	; 0xb0
  4006a2:	47a0      	blx	r4
	/* Set GRAM Address */
	ili9225_write_register(ILI9225_RAM_ADDR_SET2, ILI9225_RAM_ADDR_SET2_AD(ILI9225_LCD_HEIGHT));
  4006a4:	2021      	movs	r0, #33	; 0x21
  4006a6:	21dc      	movs	r1, #220	; 0xdc
  4006a8:	47a0      	blx	r4

	/* Power on sequence */
	/* Set the driving capability of source driver and disable standby */
	ili9225_write_register(ILI9225_POWER_CTRL1, ILI9225_POWER_CTRL1_SAP(0x0A));
  4006aa:	2010      	movs	r0, #16
  4006ac:	f44f 6120 	mov.w	r1, #2560	; 0xa00
  4006b0:	47a0      	blx	r4
	/* Control the booster circuit and set VCI1 voltage */
	ili9225_write_register(ILI9225_POWER_CTRL2, ILI9225_POWER_CTRL2_APON | ILI9225_POWER_CTRL2_AON |
  4006b2:	2011      	movs	r0, #17
  4006b4:	f241 0138 	movw	r1, #4152	; 0x1038
  4006b8:	47a0      	blx	r4
			ILI9225_POWER_CTRL2_VCI1 | ILI9225_POWER_CTRL2_VC(0x08));
	ili9225_delay(50); /* Wait for at least 50ms */
  4006ba:	2032      	movs	r0, #50	; 0x32
  4006bc:	47b0      	blx	r6

	/* Select the output factor and operating frequency of step-up circuit */
	ili9225_write_register(ILI9225_POWER_CTRL3, ILI9225_POWER_CTRL3_BT(0x01) |
  4006be:	2012      	movs	r0, #18
  4006c0:	f241 1121 	movw	r1, #4385	; 0x1121
  4006c4:	47a0      	blx	r4
			ILI9225_POWER_CTRL3_DC1(0x01) | ILI9225_POWER_CTRL3_DC2(0x02) |
			ILI9225_POWER_CTRL3_DC3(0x01));
	/* Set the amplifying factor of the GVDD voltage */
	ili9225_write_register(ILI9225_POWER_CTRL4, ILI9225_POWER_CTRL4_GVD(0x4e));
  4006c6:	2013      	movs	r0, #19
  4006c8:	214e      	movs	r1, #78	; 0x4e
  4006ca:	47a0      	blx	r4
	/* Set the VCOMH voltage and the alternating amplitudes of VCOM */
	ili9225_write_register(ILI9225_POWER_CTRL5, ILI9225_POWER_CTRL5_VCM(0x67) |
  4006cc:	2014      	movs	r0, #20
  4006ce:	f246 716f 	movw	r1, #26479	; 0x676f
  4006d2:	47a0      	blx	r4
			ILI9225_POWER_CTRL5_VML(0x6f));

	/* Set GRAM area */
	ili9225_write_register(ILI9225_GATE_SCAN_CTRL, 0x0000);
  4006d4:	2030      	movs	r0, #48	; 0x30
  4006d6:	4629      	mov	r1, r5
  4006d8:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL1,
  4006da:	2031      	movs	r0, #49	; 0x31
  4006dc:	21db      	movs	r1, #219	; 0xdb
  4006de:	47a0      	blx	r4
			ILI9225_VERTICAL_SCROLL_CTRL1_SEA(0xDB));
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL2, 0x0000);
  4006e0:	2032      	movs	r0, #50	; 0x32
  4006e2:	4629      	mov	r1, r5
  4006e4:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_SCROLL_CTRL3, 0x0000);
  4006e6:	2033      	movs	r0, #51	; 0x33
  4006e8:	4629      	mov	r1, r5
  4006ea:	47a0      	blx	r4
	ili9225_write_register(ILI9225_PARTIAL_DRIVING_POS1,
  4006ec:	2034      	movs	r0, #52	; 0x34
  4006ee:	21db      	movs	r1, #219	; 0xdb
  4006f0:	47a0      	blx	r4
			ILI9225_PARTIAL_DRIVING_POS1_SE1(0xDB));
	ili9225_write_register(ILI9225_PARTIAL_DRIVING_POS2, 0x0000);
  4006f2:	2035      	movs	r0, #53	; 0x35
  4006f4:	4629      	mov	r1, r5
  4006f6:	47a0      	blx	r4
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR1,
  4006f8:	2036      	movs	r0, #54	; 0x36
  4006fa:	21b0      	movs	r1, #176	; 0xb0
  4006fc:	47a0      	blx	r4
			ILI9225_HORIZONTAL_WINDOW_ADDR1_HEA(ILI9225_LCD_WIDTH));
	ili9225_write_register(ILI9225_HORIZONTAL_WINDOW_ADDR2, 0x0000);
  4006fe:	2037      	movs	r0, #55	; 0x37
  400700:	4629      	mov	r1, r5
  400702:	47a0      	blx	r4
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR1,
  400704:	2038      	movs	r0, #56	; 0x38
  400706:	21dc      	movs	r1, #220	; 0xdc
  400708:	47a0      	blx	r4
			ILI9225_VERTICAL_WINDOW_ADDR1_VEA(ILI9225_LCD_HEIGHT));
	ili9225_write_register(ILI9225_VERTICAL_WINDOW_ADDR2, 0x0000);
  40070a:	2039      	movs	r0, #57	; 0x39
  40070c:	4629      	mov	r1, r5
  40070e:	47a0      	blx	r4

	/* Set GAMMA curve */
	ili9225_write_register(ILI9225_GAMMA_CTRL1, 0x0000);
  400710:	2050      	movs	r0, #80	; 0x50
  400712:	4629      	mov	r1, r5
  400714:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL2, ILI9225_GAMMA_CTRL2_KP3(0x06) |
  400716:	2051      	movs	r0, #81	; 0x51
  400718:	f240 610a 	movw	r1, #1546	; 0x60a
  40071c:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL2_KP2(0x0A));
	ili9225_write_register(ILI9225_GAMMA_CTRL3, ILI9225_GAMMA_CTRL3_KP5(0x0D) |
  40071e:	2052      	movs	r0, #82	; 0x52
  400720:	f640 510a 	movw	r1, #3338	; 0xd0a
  400724:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL3_KP4(0x0A));
	ili9225_write_register(ILI9225_GAMMA_CTRL4, ILI9225_GAMMA_CTRL4_RP1(0x03) |
  400726:	2053      	movs	r0, #83	; 0x53
  400728:	f240 3103 	movw	r1, #771	; 0x303
  40072c:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL4_RP0(0x03));
	ili9225_write_register(ILI9225_GAMMA_CTRL5, ILI9225_GAMMA_CTRL5_KN1(0x0A) |
  40072e:	2054      	movs	r0, #84	; 0x54
  400730:	f640 210d 	movw	r1, #2573	; 0xa0d
  400734:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL5_KN0(0x0D));
	ili9225_write_register(ILI9225_GAMMA_CTRL6, ILI9225_GAMMA_CTRL6_KN3(0x0A) |
  400736:	2055      	movs	r0, #85	; 0x55
  400738:	f640 2106 	movw	r1, #2566	; 0xa06
  40073c:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL6_KN2(0x06));
	ili9225_write_register(ILI9225_GAMMA_CTRL7, 0x0000);
  40073e:	2056      	movs	r0, #86	; 0x56
  400740:	4629      	mov	r1, r5
  400742:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL8, ILI9225_GAMMA_CTRL8_RN1(0x03) |
  400744:	2057      	movs	r0, #87	; 0x57
  400746:	f240 3103 	movw	r1, #771	; 0x303
  40074a:	47a0      	blx	r4
			ILI9225_GAMMA_CTRL8_RN0(0x03));
	ili9225_write_register(ILI9225_GAMMA_CTRL9, 0x0000);
  40074c:	2058      	movs	r0, #88	; 0x58
  40074e:	4629      	mov	r1, r5
  400750:	47a0      	blx	r4
	ili9225_write_register(ILI9225_GAMMA_CTRL10, 0x0000);
  400752:	2059      	movs	r0, #89	; 0x59
  400754:	4629      	mov	r1, r5
  400756:	47a0      	blx	r4

	/* Initialize display setting */
	ili9225_set_window(0, 0, p_opt->ul_width, p_opt->ul_height);
  400758:	4628      	mov	r0, r5
  40075a:	4629      	mov	r1, r5
  40075c:	f8d9 2000 	ldr.w	r2, [r9]
  400760:	f8d9 3004 	ldr.w	r3, [r9, #4]
  400764:	4c10      	ldr	r4, [pc, #64]	; (4007a8 <ili9225_init+0x1b8>)
  400766:	47a0      	blx	r4
	ili9225_set_foreground_color(p_opt->foreground_color);
  400768:	f8d9 0008 	ldr.w	r0, [r9, #8]
  40076c:	4b0f      	ldr	r3, [pc, #60]	; (4007ac <ili9225_init+0x1bc>)
  40076e:	4798      	blx	r3
	ili9225_set_cursor_position(0, 0);
  400770:	4628      	mov	r0, r5
  400772:	4629      	mov	r1, r5
  400774:	4b0e      	ldr	r3, [pc, #56]	; (4007b0 <ili9225_init+0x1c0>)
  400776:	4798      	blx	r3
	return 0;
}
  400778:	4628      	mov	r0, r5
  40077a:	b005      	add	sp, #20
  40077c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  400780:	00400acd 	.word	0x00400acd
  400784:	004003d9 	.word	0x004003d9
  400788:	00400ae9 	.word	0x00400ae9
  40078c:	40008000 	.word	0x40008000
  400790:	e000e100 	.word	0xe000e100
  400794:	0040017d 	.word	0x0040017d
  400798:	00bebc20 	.word	0x00bebc20
  40079c:	0040024d 	.word	0x0040024d
  4007a0:	0040056d 	.word	0x0040056d
  4007a4:	004004cd 	.word	0x004004cd
  4007a8:	004005a9 	.word	0x004005a9
  4007ac:	0040057d 	.word	0x0040057d
  4007b0:	004005d9 	.word	0x004005d9
  4007b4:	004001d1 	.word	0x004001d1

004007b8 <ili9225_fill>:
 * \brief Fill the LCD buffer with the specified color.
 *
 * \param us_color fill color.
 */
void ili9225_fill(ili9225_color_t us_color)
{
  4007b8:	b570      	push	{r4, r5, r6, lr}
  4007ba:	4606      	mov	r6, r0
	uint32_t i;

	ili9225_set_cursor_position(0, 0);
  4007bc:	2000      	movs	r0, #0
  4007be:	4601      	mov	r1, r0
  4007c0:	4b06      	ldr	r3, [pc, #24]	; (4007dc <ili9225_fill+0x24>)
  4007c2:	4798      	blx	r3
/**
 * \brief Prepare to write GRAM data.
 */
static void ili9225_write_ram_prepare(void)
{
	ili9225_write_cmd(ILI9225_GRAM_DATA_REG);
  4007c4:	2022      	movs	r0, #34	; 0x22
  4007c6:	4b06      	ldr	r3, [pc, #24]	; (4007e0 <ili9225_fill+0x28>)
  4007c8:	4798      	blx	r3
  4007ca:	f249 7440 	movw	r4, #38720	; 0x9740

	ili9225_set_cursor_position(0, 0);
	ili9225_write_ram_prepare();

	for (i = ILI9225_LCD_WIDTH * ILI9225_LCD_HEIGHT; i > 0; i--) {
		ili9225_write_ram(us_color);
  4007ce:	4d05      	ldr	r5, [pc, #20]	; (4007e4 <ili9225_fill+0x2c>)
  4007d0:	4630      	mov	r0, r6
  4007d2:	47a8      	blx	r5
	uint32_t i;

	ili9225_set_cursor_position(0, 0);
	ili9225_write_ram_prepare();

	for (i = ILI9225_LCD_WIDTH * ILI9225_LCD_HEIGHT; i > 0; i--) {
  4007d4:	3c01      	subs	r4, #1
  4007d6:	d1fb      	bne.n	4007d0 <ili9225_fill+0x18>
		ili9225_write_ram(us_color);
	}
}
  4007d8:	bd70      	pop	{r4, r5, r6, pc}
  4007da:	bf00      	nop
  4007dc:	004005d9 	.word	0x004005d9
  4007e0:	00400459 	.word	0x00400459
  4007e4:	0040049d 	.word	0x0040049d

004007e8 <ili9225_draw_pixel>:
 * \param ul_y Y coordinate of pixel.
 *
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili9225_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
  4007e8:	b508      	push	{r3, lr}
	if ((ul_x >= ILI9225_LCD_WIDTH) || (ul_y >= ILI9225_LCD_HEIGHT)) {
  4007ea:	28af      	cmp	r0, #175	; 0xaf
  4007ec:	d80e      	bhi.n	40080c <ili9225_draw_pixel+0x24>
  4007ee:	29db      	cmp	r1, #219	; 0xdb
  4007f0:	d80e      	bhi.n	400810 <ili9225_draw_pixel+0x28>
		return 1;
	}

	/* Set cursor */
	ili9225_set_cursor_position(ul_x, ul_y);
  4007f2:	b280      	uxth	r0, r0
  4007f4:	b289      	uxth	r1, r1
  4007f6:	4b07      	ldr	r3, [pc, #28]	; (400814 <ili9225_draw_pixel+0x2c>)
  4007f8:	4798      	blx	r3
/**
 * \brief Prepare to write GRAM data.
 */
static void ili9225_write_ram_prepare(void)
{
	ili9225_write_cmd(ILI9225_GRAM_DATA_REG);
  4007fa:	2022      	movs	r0, #34	; 0x22
  4007fc:	4b06      	ldr	r3, [pc, #24]	; (400818 <ili9225_draw_pixel+0x30>)
  4007fe:	4798      	blx	r3
	/* Set cursor */
	ili9225_set_cursor_position(ul_x, ul_y);

	/* Prepare to write in GRAM */
	ili9225_write_ram_prepare();
	ili9225_write_ram(*g_ul_pixel_cache);
  400800:	4b06      	ldr	r3, [pc, #24]	; (40081c <ili9225_draw_pixel+0x34>)
  400802:	8818      	ldrh	r0, [r3, #0]
  400804:	4b06      	ldr	r3, [pc, #24]	; (400820 <ili9225_draw_pixel+0x38>)
  400806:	4798      	blx	r3
	return 0;
  400808:	2000      	movs	r0, #0
  40080a:	bd08      	pop	{r3, pc}
 * \return 0 if succeeds, otherwise fails.
 */
uint32_t ili9225_draw_pixel(uint32_t ul_x, uint32_t ul_y)
{
	if ((ul_x >= ILI9225_LCD_WIDTH) || (ul_y >= ILI9225_LCD_HEIGHT)) {
		return 1;
  40080c:	2001      	movs	r0, #1
  40080e:	bd08      	pop	{r3, pc}
  400810:	2001      	movs	r0, #1

	/* Prepare to write in GRAM */
	ili9225_write_ram_prepare();
	ili9225_write_ram(*g_ul_pixel_cache);
	return 0;
}
  400812:	bd08      	pop	{r3, pc}
  400814:	004005d9 	.word	0x004005d9
  400818:	00400459 	.word	0x00400459
  40081c:	20000978 	.word	0x20000978
  400820:	0040049d 	.word	0x0040049d

00400824 <ili9225_draw_filled_rectangle>:
 * \param ul_x2 X coordinate of lower-right corner on LCD.
 * \param ul_y2 Y coordinate of lower-right corner on LCD.
 */
void ili9225_draw_filled_rectangle(uint32_t ul_x1, uint32_t ul_y1,
		uint32_t ul_x2, uint32_t ul_y2)
{
  400824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400828:	b084      	sub	sp, #16
  40082a:	9003      	str	r0, [sp, #12]
  40082c:	9102      	str	r1, [sp, #8]
  40082e:	9201      	str	r2, [sp, #4]
  400830:	9300      	str	r3, [sp, #0]
	uint32_t size, blocks;

	/* Swap coordinates if necessary */
	ili9225_check_box_coordinates(&ul_x1, &ul_y1, &ul_x2, &ul_y2);
  400832:	a803      	add	r0, sp, #12
  400834:	a902      	add	r1, sp, #8
  400836:	aa01      	add	r2, sp, #4
  400838:	466b      	mov	r3, sp
  40083a:	4c21      	ldr	r4, [pc, #132]	; (4008c0 <ili9225_draw_filled_rectangle+0x9c>)
  40083c:	47a0      	blx	r4

	/* Determine the refresh window area */
	ili9225_set_window(ul_x1, ul_y1, (ul_x2 - ul_x1) + 1, (ul_y2 - ul_y1) + 1);
  40083e:	9a03      	ldr	r2, [sp, #12]
  400840:	9b02      	ldr	r3, [sp, #8]
  400842:	9901      	ldr	r1, [sp, #4]
  400844:	1c4d      	adds	r5, r1, #1
  400846:	9900      	ldr	r1, [sp, #0]
  400848:	1c4c      	adds	r4, r1, #1
  40084a:	4610      	mov	r0, r2
  40084c:	4619      	mov	r1, r3
  40084e:	1aaa      	subs	r2, r5, r2
  400850:	1ae3      	subs	r3, r4, r3
  400852:	4c1c      	ldr	r4, [pc, #112]	; (4008c4 <ili9225_draw_filled_rectangle+0xa0>)
  400854:	47a0      	blx	r4

	/* Set cursor */
	ili9225_set_cursor_position(ul_x1, ul_y1);
  400856:	f8bd 000c 	ldrh.w	r0, [sp, #12]
  40085a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
  40085e:	4b1a      	ldr	r3, [pc, #104]	; (4008c8 <ili9225_draw_filled_rectangle+0xa4>)
  400860:	4798      	blx	r3
/**
 * \brief Prepare to write GRAM data.
 */
static void ili9225_write_ram_prepare(void)
{
	ili9225_write_cmd(ILI9225_GRAM_DATA_REG);
  400862:	2022      	movs	r0, #34	; 0x22
  400864:	4b19      	ldr	r3, [pc, #100]	; (4008cc <ili9225_draw_filled_rectangle+0xa8>)
  400866:	4798      	blx	r3
	ili9225_set_cursor_position(ul_x1, ul_y1);

	/* Prepare to write in GRAM */
	ili9225_write_ram_prepare();

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
  400868:	9b02      	ldr	r3, [sp, #8]
  40086a:	9a00      	ldr	r2, [sp, #0]
  40086c:	1ad2      	subs	r2, r2, r3
  40086e:	9b01      	ldr	r3, [sp, #4]
  400870:	f103 0801 	add.w	r8, r3, #1
  400874:	9b03      	ldr	r3, [sp, #12]
  400876:	ebc3 0808 	rsb	r8, r3, r8
  40087a:	fb02 8808 	mla	r8, r2, r8, r8
	/* Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
  40087e:	4c14      	ldr	r4, [pc, #80]	; (4008d0 <ili9225_draw_filled_rectangle+0xac>)
  400880:	fba4 3408 	umull	r3, r4, r4, r8
	while (blocks--) {
  400884:	09e4      	lsrs	r4, r4, #7
  400886:	d007      	beq.n	400898 <ili9225_draw_filled_rectangle+0x74>
		ili9225_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_CACHE_SIZE);
  400888:	4f12      	ldr	r7, [pc, #72]	; (4008d4 <ili9225_draw_filled_rectangle+0xb0>)
  40088a:	26b0      	movs	r6, #176	; 0xb0
  40088c:	4d12      	ldr	r5, [pc, #72]	; (4008d8 <ili9225_draw_filled_rectangle+0xb4>)
  40088e:	4638      	mov	r0, r7
  400890:	4631      	mov	r1, r6
  400892:	47a8      	blx	r5
	ili9225_write_ram_prepare();

	size = (ul_x2 - ul_x1 + 1) * (ul_y2 - ul_y1 + 1);
	/* Send pixels blocks => one SPI IT / block */
	blocks = size / LCD_DATA_CACHE_SIZE;
	while (blocks--) {
  400894:	3c01      	subs	r4, #1
  400896:	d1fa      	bne.n	40088e <ili9225_draw_filled_rectangle+0x6a>
		ili9225_write_ram_buffer(g_ul_pixel_cache, LCD_DATA_CACHE_SIZE);
	}
	/* Send remaining pixels */
	ili9225_write_ram_buffer(g_ul_pixel_cache, size % LCD_DATA_CACHE_SIZE);
  400898:	490d      	ldr	r1, [pc, #52]	; (4008d0 <ili9225_draw_filled_rectangle+0xac>)
  40089a:	fba1 3108 	umull	r3, r1, r1, r8
  40089e:	09c9      	lsrs	r1, r1, #7
  4008a0:	24b0      	movs	r4, #176	; 0xb0
  4008a2:	480c      	ldr	r0, [pc, #48]	; (4008d4 <ili9225_draw_filled_rectangle+0xb0>)
  4008a4:	fb04 8111 	mls	r1, r4, r1, r8
  4008a8:	4b0b      	ldr	r3, [pc, #44]	; (4008d8 <ili9225_draw_filled_rectangle+0xb4>)
  4008aa:	4798      	blx	r3

	/* Reset the refresh window area */
	ili9225_set_window(0, 0, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
  4008ac:	2000      	movs	r0, #0
  4008ae:	4601      	mov	r1, r0
  4008b0:	4622      	mov	r2, r4
  4008b2:	23dc      	movs	r3, #220	; 0xdc
  4008b4:	4c03      	ldr	r4, [pc, #12]	; (4008c4 <ili9225_draw_filled_rectangle+0xa0>)
  4008b6:	47a0      	blx	r4
}
  4008b8:	b004      	add	sp, #16
  4008ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4008be:	bf00      	nop
  4008c0:	00400411 	.word	0x00400411
  4008c4:	004005a9 	.word	0x004005a9
  4008c8:	004005d9 	.word	0x004005d9
  4008cc:	00400459 	.word	0x00400459
  4008d0:	ba2e8ba3 	.word	0xba2e8ba3
  4008d4:	20000978 	.word	0x20000978
  4008d8:	004004e5 	.word	0x004004e5

004008dc <ili9225_draw_string>:
 * \param ul_x X coordinate of string top-left corner.
 * \param ul_y Y coordinate of string top-left corner.
 * \param p_str String to display.
 */
void ili9225_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
  4008dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4008e0:	b087      	sub	sp, #28
  4008e2:	9004      	str	r0, [sp, #16]
  4008e4:	468b      	mov	fp, r1
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  4008e6:	7813      	ldrb	r3, [r2, #0]
  4008e8:	2b00      	cmp	r3, #0
  4008ea:	d04a      	beq.n	400982 <ili9225_draw_string+0xa6>
  4008ec:	9203      	str	r2, [sp, #12]
  4008ee:	9002      	str	r0, [sp, #8]
  4008f0:	4a25      	ldr	r2, [pc, #148]	; (400988 <ili9225_draw_string+0xac>)
  4008f2:	f2a2 226b 	subw	r2, r2, #619	; 0x26b
  4008f6:	9205      	str	r2, [sp, #20]
		offset1 = offset0 + 1;

		/* Draw pixel on screen depending on the corresponding bit value from the charset */
		for (row = 0; row < 8; row++) {
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili9225_draw_pixel(ul_x + col, ul_y + row);
  4008f8:	f8df 9090 	ldr.w	r9, [pc, #144]	; 40098c <ili9225_draw_string+0xb0>
{
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
		/* If newline, jump to the next line (font height + 2) */
		if (*p_str == '\n') {
  4008fc:	2b0a      	cmp	r3, #10
  4008fe:	d104      	bne.n	40090a <ili9225_draw_string+0x2e>
			ul_y += gfont.height + 2;
  400900:	f10b 0b10 	add.w	fp, fp, #16
			ul_x = xorg;
  400904:	9b04      	ldr	r3, [sp, #16]
  400906:	9302      	str	r3, [sp, #8]
  400908:	e035      	b.n	400976 <ili9225_draw_string+0x9a>
	uint32_t row, col;
	uint32_t offset, offset0, offset1;

	/* Compute offset according of the specified ASCII character */
	/* Note: the first 32 characters of the ASCII table are not handled */
	offset = ((uint32_t)uc_c - 0x20) * 20;
  40090a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  40090e:	009b      	lsls	r3, r3, #2
				ili9225_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  400910:	f2a3 267f 	subw	r6, r3, #639	; 0x27f
  400914:	4a1c      	ldr	r2, [pc, #112]	; (400988 <ili9225_draw_string+0xac>)
  400916:	4416      	add	r6, r2
  400918:	9a05      	ldr	r2, [sp, #20]
  40091a:	441a      	add	r2, r3
  40091c:	9201      	str	r2, [sp, #4]
  40091e:	f8dd 8008 	ldr.w	r8, [sp, #8]
  400922:	2407      	movs	r4, #7
  400924:	4637      	mov	r7, r6
  400926:	eb0b 0a04 	add.w	sl, fp, r4
  40092a:	463d      	mov	r5, r7
		offset0 = offset + col * 2;
		offset1 = offset0 + 1;

		/* Draw pixel on screen depending on the corresponding bit value from the charset */
		for (row = 0; row < 8; row++) {
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
  40092c:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  400930:	4123      	asrs	r3, r4
  400932:	f013 0f01 	tst.w	r3, #1
  400936:	d003      	beq.n	400940 <ili9225_draw_string+0x64>
				ili9225_draw_pixel(ul_x + col, ul_y + row);
  400938:	4640      	mov	r0, r8
  40093a:	ebc4 010a 	rsb	r1, r4, sl
  40093e:	47c8      	blx	r9
  400940:	3c01      	subs	r4, #1
		/* Compute the first and second byte offset of a column */
		offset0 = offset + col * 2;
		offset1 = offset0 + 1;

		/* Draw pixel on screen depending on the corresponding bit value from the charset */
		for (row = 0; row < 8; row++) {
  400942:	f1b4 3fff 	cmp.w	r4, #4294967295
  400946:	d1f0      	bne.n	40092a <ili9225_draw_string+0x4e>
  400948:	2407      	movs	r4, #7
  40094a:	f10b 070f 	add.w	r7, fp, #15
				ili9225_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
			if ((p_uc_charset10x14[offset1] >> (7 - row)) & 0x1) {
  40094e:	782b      	ldrb	r3, [r5, #0]
  400950:	4123      	asrs	r3, r4
  400952:	f013 0f01 	tst.w	r3, #1
  400956:	d002      	beq.n	40095e <ili9225_draw_string+0x82>
				ili9225_draw_pixel(ul_x + col, ul_y + row + 8);
  400958:	4640      	mov	r0, r8
  40095a:	1b39      	subs	r1, r7, r4
  40095c:	47c8      	blx	r9
  40095e:	3c01      	subs	r4, #1
			if ((p_uc_charset10x14[offset0] >> (7 - row)) & 0x1) {
				ili9225_draw_pixel(ul_x + col, ul_y + row);
			}
		}

		for (row = 0; row < 6; row++) {
  400960:	2c01      	cmp	r4, #1
  400962:	d1f4      	bne.n	40094e <ili9225_draw_string+0x72>
  400964:	3602      	adds	r6, #2
  400966:	f108 0801 	add.w	r8, r8, #1

	/* Compute offset according of the specified ASCII character */
	/* Note: the first 32 characters of the ASCII table are not handled */
	offset = ((uint32_t)uc_c - 0x20) * 20;

	for (col = 0; col < 10; col++) {
  40096a:	9b01      	ldr	r3, [sp, #4]
  40096c:	429e      	cmp	r6, r3
  40096e:	d1d8      	bne.n	400922 <ili9225_draw_string+0x46>
			ul_y += gfont.height + 2;
			ul_x = xorg;
		} else {
			/* Draw the character and place cursor right after (font width + 2) */
			ili9225_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
  400970:	9a02      	ldr	r2, [sp, #8]
  400972:	320c      	adds	r2, #12
  400974:	9202      	str	r2, [sp, #8]
 */
void ili9225_draw_string(uint32_t ul_x, uint32_t ul_y, const uint8_t *p_str)
{
	uint32_t xorg = ul_x;

	while (*p_str != 0) {
  400976:	9a03      	ldr	r2, [sp, #12]
  400978:	f812 3f01 	ldrb.w	r3, [r2, #1]!
  40097c:	9203      	str	r2, [sp, #12]
  40097e:	2b00      	cmp	r3, #0
  400980:	d1bc      	bne.n	4008fc <ili9225_draw_string+0x20>
			ili9225_draw_char(ul_x, ul_y, *p_str);
			ul_x += gfont.width + 2;
		}
		p_str++;
	}
}
  400982:	b007      	add	sp, #28
  400984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  400988:	004064c4 	.word	0x004064c4
  40098c:	004007e9 	.word	0x004007e9

00400990 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
  400990:	b410      	push	{r4}
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400992:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400994:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400998:	d02e      	beq.n	4009f8 <pio_set_peripheral+0x68>
  40099a:	d808      	bhi.n	4009ae <pio_set_peripheral+0x1e>
  40099c:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  4009a0:	d014      	beq.n	4009cc <pio_set_peripheral+0x3c>
  4009a2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  4009a6:	d01d      	beq.n	4009e4 <pio_set_peripheral+0x54>
  4009a8:	2900      	cmp	r1, #0
  4009aa:	d135      	bne.n	400a18 <pio_set_peripheral+0x88>
  4009ac:	e035      	b.n	400a1a <pio_set_peripheral+0x8a>
  4009ae:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  4009b2:	d032      	beq.n	400a1a <pio_set_peripheral+0x8a>
  4009b4:	d803      	bhi.n	4009be <pio_set_peripheral+0x2e>
  4009b6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  4009ba:	d027      	beq.n	400a0c <pio_set_peripheral+0x7c>
  4009bc:	e02c      	b.n	400a18 <pio_set_peripheral+0x88>
  4009be:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  4009c2:	d02a      	beq.n	400a1a <pio_set_peripheral+0x8a>
  4009c4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  4009c8:	d027      	beq.n	400a1a <pio_set_peripheral+0x8a>
  4009ca:	e025      	b.n	400a18 <pio_set_peripheral+0x88>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4009cc:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4009ce:	6f04      	ldr	r4, [r0, #112]	; 0x70
  4009d0:	43d3      	mvns	r3, r2
  4009d2:	4021      	ands	r1, r4
  4009d4:	4019      	ands	r1, r3
  4009d6:	6701      	str	r1, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4009d8:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4009da:	6f44      	ldr	r4, [r0, #116]	; 0x74
  4009dc:	4021      	ands	r1, r4
  4009de:	400b      	ands	r3, r1
  4009e0:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4009e2:	e019      	b.n	400a18 <pio_set_peripheral+0x88>
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4009e4:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  4009e6:	4313      	orrs	r3, r2
  4009e8:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  4009ea:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  4009ec:	6f41      	ldr	r1, [r0, #116]	; 0x74
  4009ee:	400b      	ands	r3, r1
  4009f0:	ea23 0302 	bic.w	r3, r3, r2
  4009f4:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  4009f6:	e00f      	b.n	400a18 <pio_set_peripheral+0x88>
#if (!SAMG)
	case PIO_PERIPH_C:
		ul_sr = p_pio->PIO_ABCDSR[0];
  4009f8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  4009fa:	6f01      	ldr	r1, [r0, #112]	; 0x70
  4009fc:	400b      	ands	r3, r1
  4009fe:	ea23 0302 	bic.w	r3, r3, r2
  400a02:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400a04:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400a06:	4313      	orrs	r3, r2
  400a08:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400a0a:	e005      	b.n	400a18 <pio_set_peripheral+0x88>
	case PIO_PERIPH_D:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400a0c:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400a0e:	4313      	orrs	r3, r2
  400a10:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400a12:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400a14:	4313      	orrs	r3, r2
  400a16:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400a18:	6042      	str	r2, [r0, #4]
}
  400a1a:	f85d 4b04 	ldr.w	r4, [sp], #4
  400a1e:	4770      	bx	lr

00400a20 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400a20:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400a22:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  400a26:	bf14      	ite	ne
  400a28:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400a2a:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400a2c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  400a30:	bf14      	ite	ne
  400a32:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
  400a34:	6241      	streq	r1, [r0, #36]	; 0x24
	}

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
  400a36:	f012 0f02 	tst.w	r2, #2
  400a3a:	d002      	beq.n	400a42 <pio_set_input+0x22>
		p_pio->PIO_IFSCDR = ul_mask;
  400a3c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
  400a40:	e004      	b.n	400a4c <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
  400a42:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  400a46:	bf18      	it	ne
  400a48:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
  400a4c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400a4e:	6001      	str	r1, [r0, #0]
  400a50:	4770      	bx	lr
  400a52:	bf00      	nop

00400a54 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
  400a54:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400a56:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400a58:	9c01      	ldr	r4, [sp, #4]
  400a5a:	b10c      	cbz	r4, 400a60 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
  400a5c:	6641      	str	r1, [r0, #100]	; 0x64
  400a5e:	e000      	b.n	400a62 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400a60:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
  400a62:	b10b      	cbz	r3, 400a68 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
  400a64:	6501      	str	r1, [r0, #80]	; 0x50
  400a66:	e000      	b.n	400a6a <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
  400a68:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
  400a6a:	b10a      	cbz	r2, 400a70 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
  400a6c:	6301      	str	r1, [r0, #48]	; 0x30
  400a6e:	e000      	b.n	400a72 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
  400a70:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
  400a72:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400a74:	6001      	str	r1, [r0, #0]
}
  400a76:	f85d 4b04 	ldr.w	r4, [sp], #4
  400a7a:	4770      	bx	lr

00400a7c <pio_pull_down>:
 */
void pio_pull_down(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_down_enable)
{
	/* Enable the pull-down if necessary */
	if (ul_pull_down_enable) {
  400a7c:	b112      	cbz	r2, 400a84 <pio_pull_down+0x8>
		p_pio->PIO_PPDER = ul_mask;
  400a7e:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
  400a82:	4770      	bx	lr
	} else {
		p_pio->PIO_PPDDR = ul_mask;
  400a84:	f8c0 1090 	str.w	r1, [r0, #144]	; 0x90
  400a88:	4770      	bx	lr
  400a8a:	bf00      	nop

00400a8c <pio_configure_interrupt>:
 */
void pio_configure_interrupt(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_attr)
{
	/* Configure additional interrupt mode registers. */
	if (ul_attr & PIO_IT_AIME) {
  400a8c:	f012 0f10 	tst.w	r2, #16
  400a90:	d010      	beq.n	400ab4 <pio_configure_interrupt+0x28>
		/* Enable additional interrupt mode. */
		p_pio->PIO_AIMER = ul_mask;
  400a92:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0

		/* If bit field of the selected pin is 1, set as
		   Rising Edge/High level detection event. */
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400a96:	f012 0f20 	tst.w	r2, #32
			/* Rising Edge or High Level */
			p_pio->PIO_REHLSR = ul_mask;
  400a9a:	bf14      	ite	ne
  400a9c:	f8c0 10d4 	strne.w	r1, [r0, #212]	; 0xd4
		} else {
			/* Falling Edge or Low Level */
			p_pio->PIO_FELLSR = ul_mask;
  400aa0:	f8c0 10d0 	streq.w	r1, [r0, #208]	; 0xd0
		}

		/* If bit field of the selected pin is 1, set as
		   edge detection source. */
		if (ul_attr & PIO_IT_EDGE) {
  400aa4:	f012 0f40 	tst.w	r2, #64	; 0x40
			/* Edge select */
			p_pio->PIO_ESR = ul_mask;
  400aa8:	bf14      	ite	ne
  400aaa:	f8c0 10c0 	strne.w	r1, [r0, #192]	; 0xc0
		} else {
			/* Level select */
			p_pio->PIO_LSR = ul_mask;
  400aae:	f8c0 10c4 	streq.w	r1, [r0, #196]	; 0xc4
  400ab2:	4770      	bx	lr
		}
	} else {
		/* Disable additional interrupt mode. */
		p_pio->PIO_AIMDR = ul_mask;
  400ab4:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400ab8:	4770      	bx	lr
  400aba:	bf00      	nop

00400abc <pio_enable_interrupt>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_enable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_ISR;
  400abc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
	p_pio->PIO_IER = ul_mask;
  400abe:	6401      	str	r1, [r0, #64]	; 0x40
  400ac0:	4770      	bx	lr
  400ac2:	bf00      	nop

00400ac4 <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400ac4:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400ac6:	4770      	bx	lr

00400ac8 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400ac8:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400aca:	4770      	bx	lr

00400acc <pio_set_pin_high>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400acc:	0943      	lsrs	r3, r0, #5
  400ace:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400ad2:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400ad6:	025b      	lsls	r3, r3, #9
void pio_set_pin_high(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 1. */
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400ad8:	f000 001f 	and.w	r0, r0, #31
  400adc:	2201      	movs	r2, #1
  400ade:	fa02 f000 	lsl.w	r0, r2, r0
  400ae2:	6318      	str	r0, [r3, #48]	; 0x30
  400ae4:	4770      	bx	lr
  400ae6:	bf00      	nop

00400ae8 <pio_set_pin_low>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400ae8:	0943      	lsrs	r3, r0, #5
  400aea:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400aee:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400af2:	025b      	lsls	r3, r3, #9
void pio_set_pin_low(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 0. */
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400af4:	f000 001f 	and.w	r0, r0, #31
  400af8:	2201      	movs	r2, #1
  400afa:	fa02 f000 	lsl.w	r0, r2, r0
  400afe:	6358      	str	r0, [r3, #52]	; 0x34
  400b00:	4770      	bx	lr
  400b02:	bf00      	nop

00400b04 <pio_toggle_pin>:
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400b04:	0943      	lsrs	r3, r0, #5
  400b06:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  400b0a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  400b0e:	025b      	lsls	r3, r3, #9
 */
void pio_toggle_pin(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	if (p_pio->PIO_ODSR & (1 << (ul_pin & 0x1F))) {
  400b10:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  400b12:	f000 001f 	and.w	r0, r0, #31
  400b16:	2101      	movs	r1, #1
  400b18:	fa01 f000 	lsl.w	r0, r1, r0
  400b1c:	4210      	tst	r0, r2
		/* Value to be driven on the I/O line: 0. */
		p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
  400b1e:	bf14      	ite	ne
  400b20:	6358      	strne	r0, [r3, #52]	; 0x34
	} else {
		/* Value to be driven on the I/O line: 1. */
		p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
  400b22:	6318      	streq	r0, [r3, #48]	; 0x30
  400b24:	4770      	bx	lr
  400b26:	bf00      	nop

00400b28 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  400b28:	b570      	push	{r4, r5, r6, lr}
  400b2a:	b082      	sub	sp, #8
  400b2c:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  400b2e:	0944      	lsrs	r4, r0, #5
  400b30:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
  400b34:	f204 7407 	addw	r4, r4, #1799	; 0x707
  400b38:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  400b3a:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
  400b3e:	f1b4 5f00 	cmp.w	r4, #536870912	; 0x20000000
  400b42:	d047      	beq.n	400bd4 <pio_configure_pin+0xac>
  400b44:	d809      	bhi.n	400b5a <pio_configure_pin+0x32>
  400b46:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
  400b4a:	d021      	beq.n	400b90 <pio_configure_pin+0x68>
  400b4c:	f1b4 5fc0 	cmp.w	r4, #402653184	; 0x18000000
  400b50:	d02f      	beq.n	400bb2 <pio_configure_pin+0x8a>
  400b52:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
  400b56:	d16f      	bne.n	400c38 <pio_configure_pin+0x110>
  400b58:	e009      	b.n	400b6e <pio_configure_pin+0x46>
  400b5a:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
  400b5e:	d055      	beq.n	400c0c <pio_configure_pin+0xe4>
  400b60:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  400b64:	d052      	beq.n	400c0c <pio_configure_pin+0xe4>
  400b66:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
  400b6a:	d044      	beq.n	400bf6 <pio_configure_pin+0xce>
  400b6c:	e064      	b.n	400c38 <pio_configure_pin+0x110>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  400b6e:	f000 001f 	and.w	r0, r0, #31
  400b72:	2401      	movs	r4, #1
  400b74:	4084      	lsls	r4, r0
  400b76:	4630      	mov	r0, r6
  400b78:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400b7c:	4622      	mov	r2, r4
  400b7e:	4b30      	ldr	r3, [pc, #192]	; (400c40 <pio_configure_pin+0x118>)
  400b80:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400b82:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400b86:	bf14      	ite	ne
  400b88:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400b8a:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400b8c:	2001      	movs	r0, #1
  400b8e:	e054      	b.n	400c3a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  400b90:	f000 001f 	and.w	r0, r0, #31
  400b94:	2401      	movs	r4, #1
  400b96:	4084      	lsls	r4, r0
  400b98:	4630      	mov	r0, r6
  400b9a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400b9e:	4622      	mov	r2, r4
  400ba0:	4b27      	ldr	r3, [pc, #156]	; (400c40 <pio_configure_pin+0x118>)
  400ba2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400ba4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400ba8:	bf14      	ite	ne
  400baa:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400bac:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400bae:	2001      	movs	r0, #1
  400bb0:	e043      	b.n	400c3a <pio_configure_pin+0x112>
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  400bb2:	f000 001f 	and.w	r0, r0, #31
  400bb6:	2401      	movs	r4, #1
  400bb8:	4084      	lsls	r4, r0
  400bba:	4630      	mov	r0, r6
  400bbc:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400bc0:	4622      	mov	r2, r4
  400bc2:	4b1f      	ldr	r3, [pc, #124]	; (400c40 <pio_configure_pin+0x118>)
  400bc4:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400bc6:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400bca:	bf14      	ite	ne
  400bcc:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400bce:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400bd0:	2001      	movs	r0, #1
  400bd2:	e032      	b.n	400c3a <pio_configure_pin+0x112>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  400bd4:	f000 001f 	and.w	r0, r0, #31
  400bd8:	2401      	movs	r4, #1
  400bda:	4084      	lsls	r4, r0
  400bdc:	4630      	mov	r0, r6
  400bde:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400be2:	4622      	mov	r2, r4
  400be4:	4b16      	ldr	r3, [pc, #88]	; (400c40 <pio_configure_pin+0x118>)
  400be6:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400be8:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400bec:	bf14      	ite	ne
  400bee:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400bf0:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400bf2:	2001      	movs	r0, #1
  400bf4:	e021      	b.n	400c3a <pio_configure_pin+0x112>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  400bf6:	f000 011f 	and.w	r1, r0, #31
  400bfa:	2401      	movs	r4, #1
  400bfc:	4630      	mov	r0, r6
  400bfe:	fa04 f101 	lsl.w	r1, r4, r1
  400c02:	462a      	mov	r2, r5
  400c04:	4b0f      	ldr	r3, [pc, #60]	; (400c44 <pio_configure_pin+0x11c>)
  400c06:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400c08:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
  400c0a:	e016      	b.n	400c3a <pio_configure_pin+0x112>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400c0c:	f000 011f 	and.w	r1, r0, #31
  400c10:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400c12:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  400c16:	ea05 0304 	and.w	r3, r5, r4
  400c1a:	9300      	str	r3, [sp, #0]
  400c1c:	4630      	mov	r0, r6
  400c1e:	fa04 f101 	lsl.w	r1, r4, r1
  400c22:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400c26:	bf14      	ite	ne
  400c28:	2200      	movne	r2, #0
  400c2a:	2201      	moveq	r2, #1
  400c2c:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400c30:	4d05      	ldr	r5, [pc, #20]	; (400c48 <pio_configure_pin+0x120>)
  400c32:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
  400c34:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400c36:	e000      	b.n	400c3a <pio_configure_pin+0x112>

	default:
		return 0;
  400c38:	2000      	movs	r0, #0
	}

	return 1;
}
  400c3a:	b002      	add	sp, #8
  400c3c:	bd70      	pop	{r4, r5, r6, pc}
  400c3e:	bf00      	nop
  400c40:	00400991 	.word	0x00400991
  400c44:	00400a21 	.word	0x00400a21
  400c48:	00400a55 	.word	0x00400a55

00400c4c <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
  400c4c:	b5f0      	push	{r4, r5, r6, r7, lr}
  400c4e:	b083      	sub	sp, #12
  400c50:	4607      	mov	r7, r0
  400c52:	460e      	mov	r6, r1
  400c54:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
  400c56:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
  400c5a:	f1b4 5f00 	cmp.w	r4, #536870912	; 0x20000000
  400c5e:	d038      	beq.n	400cd2 <pio_configure_pin_group+0x86>
  400c60:	d809      	bhi.n	400c76 <pio_configure_pin_group+0x2a>
  400c62:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
  400c66:	d01c      	beq.n	400ca2 <pio_configure_pin_group+0x56>
  400c68:	f1b4 5fc0 	cmp.w	r4, #402653184	; 0x18000000
  400c6c:	d025      	beq.n	400cba <pio_configure_pin_group+0x6e>
  400c6e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
  400c72:	d150      	bne.n	400d16 <pio_configure_pin_group+0xca>
  400c74:	e009      	b.n	400c8a <pio_configure_pin_group+0x3e>
  400c76:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
  400c7a:	d03a      	beq.n	400cf2 <pio_configure_pin_group+0xa6>
  400c7c:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
  400c80:	d037      	beq.n	400cf2 <pio_configure_pin_group+0xa6>
  400c82:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
  400c86:	d030      	beq.n	400cea <pio_configure_pin_group+0x9e>
  400c88:	e045      	b.n	400d16 <pio_configure_pin_group+0xca>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  400c8a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  400c8e:	4632      	mov	r2, r6
  400c90:	4b22      	ldr	r3, [pc, #136]	; (400d1c <pio_configure_pin_group+0xd0>)
  400c92:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400c94:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400c98:	bf14      	ite	ne
  400c9a:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400c9c:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400c9e:	2001      	movs	r0, #1
  400ca0:	e03a      	b.n	400d18 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  400ca2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400ca6:	4632      	mov	r2, r6
  400ca8:	4b1c      	ldr	r3, [pc, #112]	; (400d1c <pio_configure_pin_group+0xd0>)
  400caa:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400cac:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400cb0:	bf14      	ite	ne
  400cb2:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400cb4:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400cb6:	2001      	movs	r0, #1
  400cb8:	e02e      	b.n	400d18 <pio_configure_pin_group+0xcc>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  400cba:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  400cbe:	4632      	mov	r2, r6
  400cc0:	4b16      	ldr	r3, [pc, #88]	; (400d1c <pio_configure_pin_group+0xd0>)
  400cc2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400cc4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400cc8:	bf14      	ite	ne
  400cca:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400ccc:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400cce:	2001      	movs	r0, #1
  400cd0:	e022      	b.n	400d18 <pio_configure_pin_group+0xcc>
	case PIO_TYPE_PIO_PERIPH_C:
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_D:
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  400cd2:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  400cd6:	4632      	mov	r2, r6
  400cd8:	4b10      	ldr	r3, [pc, #64]	; (400d1c <pio_configure_pin_group+0xd0>)
  400cda:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400cdc:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  400ce0:	bf14      	ite	ne
  400ce2:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400ce4:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
  400ce6:	2001      	movs	r0, #1
  400ce8:	e016      	b.n	400d18 <pio_configure_pin_group+0xcc>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
  400cea:	4b0d      	ldr	r3, [pc, #52]	; (400d20 <pio_configure_pin_group+0xd4>)
  400cec:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
  400cee:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
  400cf0:	e012      	b.n	400d18 <pio_configure_pin_group+0xcc>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  400cf2:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
  400cf6:	f005 0301 	and.w	r3, r5, #1
  400cfa:	9300      	str	r3, [sp, #0]
  400cfc:	4638      	mov	r0, r7
  400cfe:	4631      	mov	r1, r6
  400d00:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  400d04:	bf14      	ite	ne
  400d06:	2200      	movne	r2, #0
  400d08:	2201      	moveq	r2, #1
  400d0a:	f3c5 0380 	ubfx	r3, r5, #2, #1
  400d0e:	4c05      	ldr	r4, [pc, #20]	; (400d24 <pio_configure_pin_group+0xd8>)
  400d10:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
  400d12:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
  400d14:	e000      	b.n	400d18 <pio_configure_pin_group+0xcc>

	default:
		return 0;
  400d16:	2000      	movs	r0, #0
	}

	return 1;
}
  400d18:	b003      	add	sp, #12
  400d1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  400d1c:	00400991 	.word	0x00400991
  400d20:	00400a21 	.word	0x00400a21
  400d24:	00400a55 	.word	0x00400a55

00400d28 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400d2c:	4604      	mov	r4, r0
  400d2e:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400d30:	4b10      	ldr	r3, [pc, #64]	; (400d74 <pio_handler_process+0x4c>)
  400d32:	4798      	blx	r3
  400d34:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400d36:	4620      	mov	r0, r4
  400d38:	4b0f      	ldr	r3, [pc, #60]	; (400d78 <pio_handler_process+0x50>)
  400d3a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400d3c:	4005      	ands	r5, r0
  400d3e:	d017      	beq.n	400d70 <pio_handler_process+0x48>
  400d40:	4f0e      	ldr	r7, [pc, #56]	; (400d7c <pio_handler_process+0x54>)
  400d42:	f107 040c 	add.w	r4, r7, #12
  400d46:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
  400d48:	f854 3c0c 	ldr.w	r3, [r4, #-12]
  400d4c:	42b3      	cmp	r3, r6
  400d4e:	d10a      	bne.n	400d66 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400d50:	f854 1c08 	ldr.w	r1, [r4, #-8]
  400d54:	4229      	tst	r1, r5
  400d56:	d006      	beq.n	400d66 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400d58:	6823      	ldr	r3, [r4, #0]
  400d5a:	4630      	mov	r0, r6
  400d5c:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
  400d5e:	f854 3c08 	ldr.w	r3, [r4, #-8]
  400d62:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400d66:	42bc      	cmp	r4, r7
  400d68:	d002      	beq.n	400d70 <pio_handler_process+0x48>
  400d6a:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
  400d6c:	2d00      	cmp	r5, #0
  400d6e:	d1eb      	bne.n	400d48 <pio_handler_process+0x20>
  400d70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400d74:	00400ac5 	.word	0x00400ac5
  400d78:	00400ac9 	.word	0x00400ac9
  400d7c:	20000ae0 	.word	0x20000ae0

00400d80 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400d80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400d82:	4c0b      	ldr	r4, [pc, #44]	; (400db0 <pio_handler_set+0x30>)
  400d84:	6824      	ldr	r4, [r4, #0]
  400d86:	2c06      	cmp	r4, #6
  400d88:	d810      	bhi.n	400dac <pio_handler_set+0x2c>
		return 1;

	/* Define new source */
	pSource = &(gs_interrupt_sources[gs_ul_nb_sources]);
  400d8a:	4f0a      	ldr	r7, [pc, #40]	; (400db4 <pio_handler_set+0x34>)
  400d8c:	0126      	lsls	r6, r4, #4
  400d8e:	19bd      	adds	r5, r7, r6
	pSource->id = ul_id;
  400d90:	51b9      	str	r1, [r7, r6]
	pSource->mask = ul_mask;
  400d92:	606a      	str	r2, [r5, #4]
	pSource->attr = ul_attr;
  400d94:	60ab      	str	r3, [r5, #8]
	pSource->handler = p_handler;
  400d96:	9906      	ldr	r1, [sp, #24]
  400d98:	60e9      	str	r1, [r5, #12]
	gs_ul_nb_sources++;
  400d9a:	3401      	adds	r4, #1
  400d9c:	4904      	ldr	r1, [pc, #16]	; (400db0 <pio_handler_set+0x30>)
  400d9e:	600c      	str	r4, [r1, #0]

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400da0:	4611      	mov	r1, r2
  400da2:	461a      	mov	r2, r3
  400da4:	4b04      	ldr	r3, [pc, #16]	; (400db8 <pio_handler_set+0x38>)
  400da6:	4798      	blx	r3

	return 0;
  400da8:	2000      	movs	r0, #0
  400daa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
		return 1;
  400dac:	2001      	movs	r0, #1

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);

	return 0;
}
  400dae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400db0:	20000adc 	.word	0x20000adc
  400db4:	20000ae0 	.word	0x20000ae0
  400db8:	00400a8d 	.word	0x00400a8d

00400dbc <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400dbc:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400dbe:	4802      	ldr	r0, [pc, #8]	; (400dc8 <PIOA_Handler+0xc>)
  400dc0:	210b      	movs	r1, #11
  400dc2:	4b02      	ldr	r3, [pc, #8]	; (400dcc <PIOA_Handler+0x10>)
  400dc4:	4798      	blx	r3
  400dc6:	bd08      	pop	{r3, pc}
  400dc8:	400e0e00 	.word	0x400e0e00
  400dcc:	00400d29 	.word	0x00400d29

00400dd0 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400dd0:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400dd2:	4802      	ldr	r0, [pc, #8]	; (400ddc <PIOB_Handler+0xc>)
  400dd4:	210c      	movs	r1, #12
  400dd6:	4b02      	ldr	r3, [pc, #8]	; (400de0 <PIOB_Handler+0x10>)
  400dd8:	4798      	blx	r3
  400dda:	bd08      	pop	{r3, pc}
  400ddc:	400e1000 	.word	0x400e1000
  400de0:	00400d29 	.word	0x00400d29

00400de4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400de4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400de6:	4802      	ldr	r0, [pc, #8]	; (400df0 <PIOC_Handler+0xc>)
  400de8:	210d      	movs	r1, #13
  400dea:	4b02      	ldr	r3, [pc, #8]	; (400df4 <PIOC_Handler+0x10>)
  400dec:	4798      	blx	r3
  400dee:	bd08      	pop	{r3, pc}
  400df0:	400e1200 	.word	0x400e1200
  400df4:	00400d29 	.word	0x00400d29

00400df8 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400df8:	4b17      	ldr	r3, [pc, #92]	; (400e58 <pmc_switch_mck_to_pllack+0x60>)
  400dfa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400dfc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  400e00:	4310      	orrs	r0, r2
  400e02:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e04:	6e9b      	ldr	r3, [r3, #104]	; 0x68
  400e06:	f013 0f08 	tst.w	r3, #8
  400e0a:	d109      	bne.n	400e20 <pmc_switch_mck_to_pllack+0x28>
  400e0c:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400e10:	4911      	ldr	r1, [pc, #68]	; (400e58 <pmc_switch_mck_to_pllack+0x60>)
  400e12:	e001      	b.n	400e18 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e14:	3b01      	subs	r3, #1
  400e16:	d019      	beq.n	400e4c <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e18:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e1a:	f012 0f08 	tst.w	r2, #8
  400e1e:	d0f9      	beq.n	400e14 <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400e20:	4b0d      	ldr	r3, [pc, #52]	; (400e58 <pmc_switch_mck_to_pllack+0x60>)
  400e22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  400e24:	f022 0203 	bic.w	r2, r2, #3
  400e28:	f042 0202 	orr.w	r2, r2, #2
  400e2c:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e2e:	6e98      	ldr	r0, [r3, #104]	; 0x68
  400e30:	f010 0008 	ands.w	r0, r0, #8
  400e34:	d10c      	bne.n	400e50 <pmc_switch_mck_to_pllack+0x58>
  400e36:	f44f 6300 	mov.w	r3, #2048	; 0x800
  400e3a:	4907      	ldr	r1, [pc, #28]	; (400e58 <pmc_switch_mck_to_pllack+0x60>)
  400e3c:	e001      	b.n	400e42 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400e3e:	3b01      	subs	r3, #1
  400e40:	d008      	beq.n	400e54 <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400e42:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400e44:	f012 0f08 	tst.w	r2, #8
  400e48:	d0f9      	beq.n	400e3e <pmc_switch_mck_to_pllack+0x46>
  400e4a:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400e4c:	2001      	movs	r0, #1
  400e4e:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
  400e50:	2000      	movs	r0, #0
  400e52:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
  400e54:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400e56:	4770      	bx	lr
  400e58:	400e0400 	.word	0x400e0400

00400e5c <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400e5c:	b138      	cbz	r0, 400e6e <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400e5e:	4911      	ldr	r1, [pc, #68]	; (400ea4 <pmc_switch_mainck_to_xtal+0x48>)
  400e60:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400e62:	4a11      	ldr	r2, [pc, #68]	; (400ea8 <pmc_switch_mainck_to_xtal+0x4c>)
  400e64:	401a      	ands	r2, r3
  400e66:	4b11      	ldr	r3, [pc, #68]	; (400eac <pmc_switch_mainck_to_xtal+0x50>)
  400e68:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400e6a:	620b      	str	r3, [r1, #32]
  400e6c:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e6e:	4a0d      	ldr	r2, [pc, #52]	; (400ea4 <pmc_switch_mainck_to_xtal+0x48>)
  400e70:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400e72:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
  400e76:	f023 0303 	bic.w	r3, r3, #3
  400e7a:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400e7e:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400e82:	0209      	lsls	r1, r1, #8
  400e84:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400e86:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e88:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400e8a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e8c:	f013 0f01 	tst.w	r3, #1
  400e90:	d0fb      	beq.n	400e8a <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400e92:	4a04      	ldr	r2, [pc, #16]	; (400ea4 <pmc_switch_mainck_to_xtal+0x48>)
  400e94:	6a13      	ldr	r3, [r2, #32]
  400e96:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  400e9a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  400e9e:	6213      	str	r3, [r2, #32]
  400ea0:	4770      	bx	lr
  400ea2:	bf00      	nop
  400ea4:	400e0400 	.word	0x400e0400
  400ea8:	fec8fffc 	.word	0xfec8fffc
  400eac:	01370002 	.word	0x01370002

00400eb0 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400eb0:	4b02      	ldr	r3, [pc, #8]	; (400ebc <pmc_osc_is_ready_mainck+0xc>)
  400eb2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400eb4:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400eb8:	4770      	bx	lr
  400eba:	bf00      	nop
  400ebc:	400e0400 	.word	0x400e0400

00400ec0 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400ec0:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400ec4:	4b01      	ldr	r3, [pc, #4]	; (400ecc <pmc_disable_pllack+0xc>)
  400ec6:	629a      	str	r2, [r3, #40]	; 0x28
  400ec8:	4770      	bx	lr
  400eca:	bf00      	nop
  400ecc:	400e0400 	.word	0x400e0400

00400ed0 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400ed0:	4b02      	ldr	r3, [pc, #8]	; (400edc <pmc_is_locked_pllack+0xc>)
  400ed2:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400ed4:	f000 0002 	and.w	r0, r0, #2
  400ed8:	4770      	bx	lr
  400eda:	bf00      	nop
  400edc:	400e0400 	.word	0x400e0400

00400ee0 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400ee0:	281f      	cmp	r0, #31
  400ee2:	d80d      	bhi.n	400f00 <pmc_enable_periph_clk+0x20>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400ee4:	4b08      	ldr	r3, [pc, #32]	; (400f08 <pmc_enable_periph_clk+0x28>)
  400ee6:	699a      	ldr	r2, [r3, #24]
  400ee8:	2301      	movs	r3, #1
  400eea:	4083      	lsls	r3, r0
  400eec:	401a      	ands	r2, r3
  400eee:	4293      	cmp	r3, r2
  400ef0:	d008      	beq.n	400f04 <pmc_enable_periph_clk+0x24>
			PMC->PMC_PCER0 = 1 << ul_id;
  400ef2:	2301      	movs	r3, #1
  400ef4:	fa03 f000 	lsl.w	r0, r3, r0
  400ef8:	4b03      	ldr	r3, [pc, #12]	; (400f08 <pmc_enable_periph_clk+0x28>)
  400efa:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400efc:	2000      	movs	r0, #0
  400efe:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
  400f00:	2001      	movs	r0, #1
  400f02:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400f04:	2000      	movs	r0, #0
}
  400f06:	4770      	bx	lr
  400f08:	400e0400 	.word	0x400e0400

00400f0c <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400f0c:	b508      	push	{r3, lr}
  400f0e:	2015      	movs	r0, #21
  400f10:	4b01      	ldr	r3, [pc, #4]	; (400f18 <spi_enable_clock+0xc>)
  400f12:	4798      	blx	r3
  400f14:	bd08      	pop	{r3, pc}
  400f16:	bf00      	nop
  400f18:	00400ee1 	.word	0x00400ee1

00400f1c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  400f1c:	6843      	ldr	r3, [r0, #4]
  400f1e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  400f22:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  400f24:	6843      	ldr	r3, [r0, #4]
  400f26:	0409      	lsls	r1, r1, #16
  400f28:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  400f2c:	430b      	orrs	r3, r1
  400f2e:	6043      	str	r3, [r0, #4]
  400f30:	4770      	bx	lr
  400f32:	bf00      	nop

00400f34 <spi_set_delay_between_chip_select>:
 * \param p_spi Pointer to an SPI instance.
 * \param ul_delay Delay between chip selects (in number of MCK clocks).
 */
void spi_set_delay_between_chip_select(Spi *p_spi, uint32_t ul_delay)
{
	p_spi->SPI_MR &= (~SPI_MR_DLYBCS_Msk);
  400f34:	6843      	ldr	r3, [r0, #4]
  400f36:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
  400f3a:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_DLYBCS(ul_delay);
  400f3c:	6843      	ldr	r3, [r0, #4]
  400f3e:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
  400f42:	6041      	str	r1, [r0, #4]
  400f44:	4770      	bx	lr
  400f46:	bf00      	nop

00400f48 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  400f48:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400f4a:	f643 2499 	movw	r4, #15001	; 0x3a99
  400f4e:	e001      	b.n	400f54 <spi_write+0xc>
		if (!timeout--) {
  400f50:	3c01      	subs	r4, #1
  400f52:	d011      	beq.n	400f78 <spi_write+0x30>
		uint8_t uc_pcs, uint8_t uc_last)
{
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  400f54:	6905      	ldr	r5, [r0, #16]
  400f56:	f015 0f02 	tst.w	r5, #2
  400f5a:	d0f9      	beq.n	400f50 <spi_write+0x8>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400f5c:	6844      	ldr	r4, [r0, #4]
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400f5e:	f014 0f02 	tst.w	r4, #2
  400f62:	d006      	beq.n	400f72 <spi_write+0x2a>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  400f64:	0412      	lsls	r2, r2, #16
  400f66:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400f6a:	4311      	orrs	r1, r2
		if (uc_last) {
  400f6c:	b10b      	cbz	r3, 400f72 <spi_write+0x2a>
			value |= SPI_TDR_LASTXFER;
  400f6e:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  400f72:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  400f74:	2000      	movs	r0, #0
  400f76:	e000      	b.n	400f7a <spi_write+0x32>
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
		if (!timeout--) {
			return SPI_ERROR_TIMEOUT;
  400f78:	2001      	movs	r0, #1
	}

	p_spi->SPI_TDR = value;

	return SPI_OK;
}
  400f7a:	bc30      	pop	{r4, r5}
  400f7c:	4770      	bx	lr
  400f7e:	bf00      	nop

00400f80 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400f80:	b132      	cbz	r2, 400f90 <spi_set_clock_polarity+0x10>
  400f82:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400f86:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400f88:	f043 0301 	orr.w	r3, r3, #1
  400f8c:	6303      	str	r3, [r0, #48]	; 0x30
  400f8e:	4770      	bx	lr
  400f90:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400f94:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400f96:	f023 0301 	bic.w	r3, r3, #1
  400f9a:	6303      	str	r3, [r0, #48]	; 0x30
  400f9c:	4770      	bx	lr
  400f9e:	bf00      	nop

00400fa0 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400fa0:	b132      	cbz	r2, 400fb0 <spi_set_clock_phase+0x10>
  400fa2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400fa6:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fa8:	f043 0302 	orr.w	r3, r3, #2
  400fac:	6303      	str	r3, [r0, #48]	; 0x30
  400fae:	4770      	bx	lr
  400fb0:	eb00 0081 	add.w	r0, r0, r1, lsl #2
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400fb4:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fb6:	f023 0302 	bic.w	r3, r3, #2
  400fba:	6303      	str	r3, [r0, #48]	; 0x30
  400fbc:	4770      	bx	lr
  400fbe:	bf00      	nop

00400fc0 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400fc0:	2a04      	cmp	r2, #4
  400fc2:	d10a      	bne.n	400fda <spi_configure_cs_behavior+0x1a>
  400fc4:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400fc8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fca:	f023 0308 	bic.w	r3, r3, #8
  400fce:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400fd0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fd2:	f043 0304 	orr.w	r3, r3, #4
  400fd6:	6303      	str	r3, [r0, #48]	; 0x30
  400fd8:	4770      	bx	lr
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400fda:	b952      	cbnz	r2, 400ff2 <spi_configure_cs_behavior+0x32>
  400fdc:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400fe0:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fe2:	f023 0308 	bic.w	r3, r3, #8
  400fe6:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400fe8:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400fea:	f023 0304 	bic.w	r3, r3, #4
  400fee:	6303      	str	r3, [r0, #48]	; 0x30
  400ff0:	4770      	bx	lr
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400ff2:	2a08      	cmp	r2, #8
  400ff4:	d105      	bne.n	401002 <spi_configure_cs_behavior+0x42>
  400ff6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  400ffa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400ffc:	f043 0308 	orr.w	r3, r3, #8
  401000:	6303      	str	r3, [r0, #48]	; 0x30
  401002:	4770      	bx	lr

00401004 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  401004:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  401008:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40100a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  40100e:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  401010:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401012:	431a      	orrs	r2, r3
  401014:	630a      	str	r2, [r1, #48]	; 0x30
  401016:	4770      	bx	lr

00401018 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  401018:	1e43      	subs	r3, r0, #1
  40101a:	4419      	add	r1, r3
  40101c:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  401020:	1e43      	subs	r3, r0, #1
  401022:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  401024:	bf94      	ite	ls
  401026:	b280      	uxthls	r0, r0
{
	int baud_div = div_ceil(mck, baudrate);

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
		return -1;
  401028:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
	}

	return baud_div;
}
  40102c:	b200      	sxth	r0, r0
  40102e:	4770      	bx	lr

00401030 <spi_set_baudrate_div>:
 * \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 * \param uc_baudrate_divider Baudrate divider from MCK.
 */
void spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
  401030:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  401034:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  401036:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  40103a:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  40103c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40103e:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
  401042:	630a      	str	r2, [r1, #48]	; 0x30
  401044:	4770      	bx	lr
  401046:	bf00      	nop

00401048 <spi_set_transfer_delay>:
 * \param uc_dlybs Delay before SPCK (in number of MCK clocks).
 * \param uc_dlybct Delay between consecutive transfers (in number of MCK clocks).
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
  401048:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
  40104c:	6b08      	ldr	r0, [r1, #48]	; 0x30
  40104e:	b280      	uxth	r0, r0
  401050:	6308      	str	r0, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  401052:	6b08      	ldr	r0, [r1, #48]	; 0x30
			| SPI_CSR_DLYBCT(uc_dlybct);
  401054:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
 */
void spi_set_transfer_delay(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_dlybs, uint8_t uc_dlybct)
{
	p_spi->SPI_CSR[ul_pcs_ch] &= ~(SPI_CSR_DLYBS_Msk | SPI_CSR_DLYBCT_Msk);
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_DLYBS(uc_dlybs)
  401058:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  40105c:	630a      	str	r2, [r1, #48]	; 0x30
  40105e:	4770      	bx	lr

00401060 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401060:	e7fe      	b.n	401060 <Dummy_Handler>
  401062:	bf00      	nop

00401064 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
  401064:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
  401066:	4b1e      	ldr	r3, [pc, #120]	; (4010e0 <Reset_Handler+0x7c>)
  401068:	4a1e      	ldr	r2, [pc, #120]	; (4010e4 <Reset_Handler+0x80>)
  40106a:	429a      	cmp	r2, r3
  40106c:	d003      	beq.n	401076 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
  40106e:	4b1e      	ldr	r3, [pc, #120]	; (4010e8 <Reset_Handler+0x84>)
  401070:	4a1b      	ldr	r2, [pc, #108]	; (4010e0 <Reset_Handler+0x7c>)
  401072:	429a      	cmp	r2, r3
  401074:	d304      	bcc.n	401080 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  401076:	4b1d      	ldr	r3, [pc, #116]	; (4010ec <Reset_Handler+0x88>)
  401078:	4a1d      	ldr	r2, [pc, #116]	; (4010f0 <Reset_Handler+0x8c>)
  40107a:	429a      	cmp	r2, r3
  40107c:	d30f      	bcc.n	40109e <Reset_Handler+0x3a>
  40107e:	e01a      	b.n	4010b6 <Reset_Handler+0x52>
  401080:	4b1c      	ldr	r3, [pc, #112]	; (4010f4 <Reset_Handler+0x90>)
  401082:	4c1d      	ldr	r4, [pc, #116]	; (4010f8 <Reset_Handler+0x94>)
  401084:	1ae4      	subs	r4, r4, r3
  401086:	f024 0403 	bic.w	r4, r4, #3
  40108a:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  40108c:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
  40108e:	4814      	ldr	r0, [pc, #80]	; (4010e0 <Reset_Handler+0x7c>)
  401090:	4914      	ldr	r1, [pc, #80]	; (4010e4 <Reset_Handler+0x80>)
  401092:	585a      	ldr	r2, [r3, r1]
  401094:	501a      	str	r2, [r3, r0]
  401096:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
  401098:	42a3      	cmp	r3, r4
  40109a:	d1fa      	bne.n	401092 <Reset_Handler+0x2e>
  40109c:	e7eb      	b.n	401076 <Reset_Handler+0x12>
  40109e:	4b17      	ldr	r3, [pc, #92]	; (4010fc <Reset_Handler+0x98>)
  4010a0:	4917      	ldr	r1, [pc, #92]	; (401100 <Reset_Handler+0x9c>)
  4010a2:	1ac9      	subs	r1, r1, r3
  4010a4:	f021 0103 	bic.w	r1, r1, #3
  4010a8:	1d1a      	adds	r2, r3, #4
  4010aa:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
  4010ac:	2200      	movs	r2, #0
  4010ae:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
  4010b2:	428b      	cmp	r3, r1
  4010b4:	d1fb      	bne.n	4010ae <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4010b6:	4a13      	ldr	r2, [pc, #76]	; (401104 <Reset_Handler+0xa0>)
  4010b8:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
  4010bc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4010c0:	4911      	ldr	r1, [pc, #68]	; (401108 <Reset_Handler+0xa4>)
  4010c2:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM_ADDR) && ((uint32_t) pSrc < IRAM_ADDR + IRAM_SIZE)) {
  4010c4:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
  4010c8:	f5b2 4fc0 	cmp.w	r2, #24576	; 0x6000
  4010cc:	d203      	bcs.n	4010d6 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
  4010ce:	688a      	ldr	r2, [r1, #8]
  4010d0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
  4010d4:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
  4010d6:	4b0d      	ldr	r3, [pc, #52]	; (40110c <Reset_Handler+0xa8>)
  4010d8:	4798      	blx	r3

	/* Branch to main function */
	main();
  4010da:	4b0d      	ldr	r3, [pc, #52]	; (401110 <Reset_Handler+0xac>)
  4010dc:	4798      	blx	r3
  4010de:	e7fe      	b.n	4010de <Reset_Handler+0x7a>
  4010e0:	20000000 	.word	0x20000000
  4010e4:	00406e20 	.word	0x00406e20
  4010e8:	2000095c 	.word	0x2000095c
  4010ec:	20000c14 	.word	0x20000c14
  4010f0:	2000095c 	.word	0x2000095c
  4010f4:	20000004 	.word	0x20000004
  4010f8:	2000095f 	.word	0x2000095f
  4010fc:	20000958 	.word	0x20000958
  401100:	20000c0f 	.word	0x20000c0f
  401104:	00400000 	.word	0x00400000
  401108:	e000ed00 	.word	0xe000ed00
  40110c:	00401d21 	.word	0x00401d21
  401110:	00401335 	.word	0x00401335

00401114 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
  401114:	4b39      	ldr	r3, [pc, #228]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  401116:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401118:	f003 0303 	and.w	r3, r3, #3
  40111c:	2b01      	cmp	r3, #1
  40111e:	d00f      	beq.n	401140 <SystemCoreClockUpdate+0x2c>
  401120:	b113      	cbz	r3, 401128 <SystemCoreClockUpdate+0x14>
  401122:	2b02      	cmp	r3, #2
  401124:	d029      	beq.n	40117a <SystemCoreClockUpdate+0x66>
  401126:	e051      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
  401128:	4b35      	ldr	r3, [pc, #212]	; (401200 <SystemCoreClockUpdate+0xec>)
  40112a:	695b      	ldr	r3, [r3, #20]
  40112c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
  401130:	bf14      	ite	ne
  401132:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401136:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  40113a:	4b32      	ldr	r3, [pc, #200]	; (401204 <SystemCoreClockUpdate+0xf0>)
  40113c:	601a      	str	r2, [r3, #0]
  40113e:	e045      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  401140:	4b2e      	ldr	r3, [pc, #184]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  401142:	6a1b      	ldr	r3, [r3, #32]
  401144:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401148:	d003      	beq.n	401152 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  40114a:	4a2f      	ldr	r2, [pc, #188]	; (401208 <SystemCoreClockUpdate+0xf4>)
  40114c:	4b2d      	ldr	r3, [pc, #180]	; (401204 <SystemCoreClockUpdate+0xf0>)
  40114e:	601a      	str	r2, [r3, #0]
  401150:	e03c      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401152:	4a2e      	ldr	r2, [pc, #184]	; (40120c <SystemCoreClockUpdate+0xf8>)
  401154:	4b2b      	ldr	r3, [pc, #172]	; (401204 <SystemCoreClockUpdate+0xf0>)
  401156:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  401158:	4b28      	ldr	r3, [pc, #160]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  40115a:	6a1b      	ldr	r3, [r3, #32]
  40115c:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401160:	2b10      	cmp	r3, #16
  401162:	d002      	beq.n	40116a <SystemCoreClockUpdate+0x56>
  401164:	2b20      	cmp	r3, #32
  401166:	d004      	beq.n	401172 <SystemCoreClockUpdate+0x5e>
  401168:	e030      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  40116a:	4a29      	ldr	r2, [pc, #164]	; (401210 <SystemCoreClockUpdate+0xfc>)
  40116c:	4b25      	ldr	r3, [pc, #148]	; (401204 <SystemCoreClockUpdate+0xf0>)
  40116e:	601a      	str	r2, [r3, #0]
				break;
  401170:	e02c      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  401172:	4a25      	ldr	r2, [pc, #148]	; (401208 <SystemCoreClockUpdate+0xf4>)
  401174:	4b23      	ldr	r3, [pc, #140]	; (401204 <SystemCoreClockUpdate+0xf0>)
  401176:	601a      	str	r2, [r3, #0]
				break;
  401178:	e028      	b.n	4011cc <SystemCoreClockUpdate+0xb8>
				break;
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
  40117a:	4b20      	ldr	r3, [pc, #128]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  40117c:	6a1b      	ldr	r3, [r3, #32]
  40117e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401182:	d003      	beq.n	40118c <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401184:	4a20      	ldr	r2, [pc, #128]	; (401208 <SystemCoreClockUpdate+0xf4>)
  401186:	4b1f      	ldr	r3, [pc, #124]	; (401204 <SystemCoreClockUpdate+0xf0>)
  401188:	601a      	str	r2, [r3, #0]
  40118a:	e012      	b.n	4011b2 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40118c:	4a1f      	ldr	r2, [pc, #124]	; (40120c <SystemCoreClockUpdate+0xf8>)
  40118e:	4b1d      	ldr	r3, [pc, #116]	; (401204 <SystemCoreClockUpdate+0xf0>)
  401190:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
  401192:	4b1a      	ldr	r3, [pc, #104]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  401194:	6a1b      	ldr	r3, [r3, #32]
  401196:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40119a:	2b10      	cmp	r3, #16
  40119c:	d002      	beq.n	4011a4 <SystemCoreClockUpdate+0x90>
  40119e:	2b20      	cmp	r3, #32
  4011a0:	d004      	beq.n	4011ac <SystemCoreClockUpdate+0x98>
  4011a2:	e006      	b.n	4011b2 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
  4011a4:	4a1a      	ldr	r2, [pc, #104]	; (401210 <SystemCoreClockUpdate+0xfc>)
  4011a6:	4b17      	ldr	r3, [pc, #92]	; (401204 <SystemCoreClockUpdate+0xf0>)
  4011a8:	601a      	str	r2, [r3, #0]
				break;
  4011aa:	e002      	b.n	4011b2 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
  4011ac:	4a16      	ldr	r2, [pc, #88]	; (401208 <SystemCoreClockUpdate+0xf4>)
  4011ae:	4b15      	ldr	r3, [pc, #84]	; (401204 <SystemCoreClockUpdate+0xf0>)
  4011b0:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  4011b2:	4b12      	ldr	r3, [pc, #72]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  4011b4:	6a98      	ldr	r0, [r3, #40]	; 0x28
			                         CKGR_PLLAR_MULA_Pos) + 1U);
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  4011b6:	6a99      	ldr	r1, [r3, #40]	; 0x28
  4011b8:	4b12      	ldr	r3, [pc, #72]	; (401204 <SystemCoreClockUpdate+0xf0>)
				break;
			default:
				break;
			}
		}
		SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
  4011ba:	f3c0 400a 	ubfx	r0, r0, #16, #11
  4011be:	681a      	ldr	r2, [r3, #0]
  4011c0:	fb00 2202 	mla	r2, r0, r2, r2
			                         CKGR_PLLAR_MULA_Pos) + 1U);
		SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
  4011c4:	b2c9      	uxtb	r1, r1
  4011c6:	fbb2 f2f1 	udiv	r2, r2, r1
  4011ca:	601a      	str	r2, [r3, #0]
			                         CKGR_PLLAR_DIVA_Pos));
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
  4011cc:	4b0b      	ldr	r3, [pc, #44]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  4011ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4011d0:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4011d4:	2b70      	cmp	r3, #112	; 0x70
  4011d6:	d107      	bne.n	4011e8 <SystemCoreClockUpdate+0xd4>
		SystemCoreClock /= 3U;
  4011d8:	4b0a      	ldr	r3, [pc, #40]	; (401204 <SystemCoreClockUpdate+0xf0>)
  4011da:	681a      	ldr	r2, [r3, #0]
  4011dc:	490d      	ldr	r1, [pc, #52]	; (401214 <SystemCoreClockUpdate+0x100>)
  4011de:	fba1 0202 	umull	r0, r2, r1, r2
  4011e2:	0852      	lsrs	r2, r2, #1
  4011e4:	601a      	str	r2, [r3, #0]
  4011e6:	4770      	bx	lr
	} else { 
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
  4011e8:	4b04      	ldr	r3, [pc, #16]	; (4011fc <SystemCoreClockUpdate+0xe8>)
  4011ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
  4011ec:	4b05      	ldr	r3, [pc, #20]	; (401204 <SystemCoreClockUpdate+0xf0>)
  4011ee:	f3c1 1102 	ubfx	r1, r1, #4, #3
  4011f2:	681a      	ldr	r2, [r3, #0]
  4011f4:	40ca      	lsrs	r2, r1
  4011f6:	601a      	str	r2, [r3, #0]
  4011f8:	4770      	bx	lr
  4011fa:	bf00      	nop
  4011fc:	400e0400 	.word	0x400e0400
  401200:	400e1410 	.word	0x400e1410
  401204:	200000e4 	.word	0x200000e4
  401208:	00b71b00 	.word	0x00b71b00
  40120c:	003d0900 	.word	0x003d0900
  401210:	007a1200 	.word	0x007a1200
  401214:	aaaaaaab 	.word	0xaaaaaaab

00401218 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401218:	4b09      	ldr	r3, [pc, #36]	; (401240 <_sbrk+0x28>)
  40121a:	681b      	ldr	r3, [r3, #0]
  40121c:	b913      	cbnz	r3, 401224 <_sbrk+0xc>
		heap = (unsigned char *)&_end;
  40121e:	4a09      	ldr	r2, [pc, #36]	; (401244 <_sbrk+0x2c>)
  401220:	4b07      	ldr	r3, [pc, #28]	; (401240 <_sbrk+0x28>)
  401222:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
  401224:	4b06      	ldr	r3, [pc, #24]	; (401240 <_sbrk+0x28>)
  401226:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401228:	181a      	adds	r2, r3, r0
  40122a:	4907      	ldr	r1, [pc, #28]	; (401248 <_sbrk+0x30>)
  40122c:	4291      	cmp	r1, r2
  40122e:	db04      	blt.n	40123a <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
  401230:	4610      	mov	r0, r2
  401232:	4a03      	ldr	r2, [pc, #12]	; (401240 <_sbrk+0x28>)
  401234:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401236:	4618      	mov	r0, r3
  401238:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
  40123a:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
  40123e:	4770      	bx	lr
  401240:	20000b50 	.word	0x20000b50
  401244:	20001418 	.word	0x20001418
  401248:	20005ffc 	.word	0x20005ffc

0040124c <pin_handler>:
	//ili9225_set_foreground_color(COLOR_WHITE);
	ili9225_fill(COLOR_WHITE);
	//ili9225_draw_filled_rectangle(0, 0, ILI9225_LCD_WIDTH, ILI9225_LCD_HEIGHT);
}

void pin_handler(uint32_t id, uint32_t mask){
  40124c:	b508      	push	{r3, lr}
	if (id == ID_ENC){
  40124e:	280b      	cmp	r0, #11
  401250:	d131      	bne.n	4012b6 <pin_handler+0x6a>
			switch (mask){
  401252:	2904      	cmp	r1, #4
  401254:	d015      	beq.n	401282 <pin_handler+0x36>
  401256:	2910      	cmp	r1, #16
  401258:	d025      	beq.n	4012a6 <pin_handler+0x5a>
  40125a:	2902      	cmp	r1, #2
  40125c:	d12b      	bne.n	4012b6 <pin_handler+0x6a>
				case GPIO_A:
				if (bFlag){
  40125e:	4b16      	ldr	r3, [pc, #88]	; (4012b8 <pin_handler+0x6c>)
  401260:	681b      	ldr	r3, [r3, #0]
  401262:	b153      	cbz	r3, 40127a <pin_handler+0x2e>
					gpio_toggle_pin(LED0_GPIO);
  401264:	2017      	movs	r0, #23
  401266:	4b15      	ldr	r3, [pc, #84]	; (4012bc <pin_handler+0x70>)
  401268:	4798      	blx	r3
					gpio_set_pin_high(LED1_GPIO);
  40126a:	202e      	movs	r0, #46	; 0x2e
  40126c:	4b14      	ldr	r3, [pc, #80]	; (4012c0 <pin_handler+0x74>)
  40126e:	4798      	blx	r3
					round++;
  401270:	4b14      	ldr	r3, [pc, #80]	; (4012c4 <pin_handler+0x78>)
  401272:	681a      	ldr	r2, [r3, #0]
  401274:	3201      	adds	r2, #1
  401276:	601a      	str	r2, [r3, #0]
  401278:	bd08      	pop	{r3, pc}
				} else {
					aFlag = 1;
  40127a:	2201      	movs	r2, #1
  40127c:	4b12      	ldr	r3, [pc, #72]	; (4012c8 <pin_handler+0x7c>)
  40127e:	601a      	str	r2, [r3, #0]
  401280:	bd08      	pop	{r3, pc}
				}
				break;
				case GPIO_B:
				if (aFlag){
  401282:	4b11      	ldr	r3, [pc, #68]	; (4012c8 <pin_handler+0x7c>)
  401284:	681b      	ldr	r3, [r3, #0]
  401286:	b153      	cbz	r3, 40129e <pin_handler+0x52>
					gpio_toggle_pin(LED1_GPIO);
  401288:	202e      	movs	r0, #46	; 0x2e
  40128a:	4b0c      	ldr	r3, [pc, #48]	; (4012bc <pin_handler+0x70>)
  40128c:	4798      	blx	r3
					gpio_set_pin_high(LED0_GPIO);
  40128e:	2017      	movs	r0, #23
  401290:	4b0b      	ldr	r3, [pc, #44]	; (4012c0 <pin_handler+0x74>)
  401292:	4798      	blx	r3
					round--;
  401294:	4b0b      	ldr	r3, [pc, #44]	; (4012c4 <pin_handler+0x78>)
  401296:	681a      	ldr	r2, [r3, #0]
  401298:	3a01      	subs	r2, #1
  40129a:	601a      	str	r2, [r3, #0]
  40129c:	bd08      	pop	{r3, pc}
				} else {
					bFlag = 1;
  40129e:	2201      	movs	r2, #1
  4012a0:	4b05      	ldr	r3, [pc, #20]	; (4012b8 <pin_handler+0x6c>)
  4012a2:	601a      	str	r2, [r3, #0]
  4012a4:	bd08      	pop	{r3, pc}
				}
				break;
				case GPIO_C:
					gpio_toggle_pin(LED2_GPIO);
  4012a6:	2019      	movs	r0, #25
  4012a8:	4b04      	ldr	r3, [pc, #16]	; (4012bc <pin_handler+0x70>)
  4012aa:	4798      	blx	r3
					bFlag = 0;
  4012ac:	2300      	movs	r3, #0
  4012ae:	4a02      	ldr	r2, [pc, #8]	; (4012b8 <pin_handler+0x6c>)
  4012b0:	6013      	str	r3, [r2, #0]
					aFlag = 0;
  4012b2:	4a05      	ldr	r2, [pc, #20]	; (4012c8 <pin_handler+0x7c>)
  4012b4:	6013      	str	r3, [r2, #0]
  4012b6:	bd08      	pop	{r3, pc}
  4012b8:	20000b58 	.word	0x20000b58
  4012bc:	00400b05 	.word	0x00400b05
  4012c0:	00400acd 	.word	0x00400acd
  4012c4:	20000b5c 	.word	0x20000b5c
  4012c8:	20000bc8 	.word	0x20000bc8

004012cc <SysTick_Handler>:
float graus = 0;

uint8_t buf[100] = {0};

void SysTick_Handler(void){
	g_ul_ms_ticks++;
  4012cc:	4b02      	ldr	r3, [pc, #8]	; (4012d8 <SysTick_Handler+0xc>)
  4012ce:	681a      	ldr	r2, [r3, #0]
  4012d0:	3201      	adds	r2, #1
  4012d2:	601a      	str	r2, [r3, #0]
  4012d4:	4770      	bx	lr
  4012d6:	bf00      	nop
  4012d8:	20000b60 	.word	0x20000b60

004012dc <SPI_Handler>:

/**
 * \brief Override SPI handler.
 */
void SPI_Handler(void)
{
  4012dc:	b508      	push	{r3, lr}
	ili9225_spi_handler();
  4012de:	4b01      	ldr	r3, [pc, #4]	; (4012e4 <SPI_Handler+0x8>)
  4012e0:	4798      	blx	r3
  4012e2:	bd08      	pop	{r3, pc}
  4012e4:	00400541 	.word	0x00400541

004012e8 <config_lcd>:
}

void config_lcd(void){
  4012e8:	b510      	push	{r4, lr}
	
	/* Initialize display parameter */
	g_ili9225_display_opt.ul_width = ILI9225_LCD_WIDTH;
  4012ea:	4c0c      	ldr	r4, [pc, #48]	; (40131c <config_lcd+0x34>)
  4012ec:	23b0      	movs	r3, #176	; 0xb0
  4012ee:	6023      	str	r3, [r4, #0]
	g_ili9225_display_opt.ul_height = ILI9225_LCD_HEIGHT;
  4012f0:	23dc      	movs	r3, #220	; 0xdc
  4012f2:	6063      	str	r3, [r4, #4]
	g_ili9225_display_opt.foreground_color = COLOR_BLACK;
  4012f4:	2300      	movs	r3, #0
  4012f6:	60a3      	str	r3, [r4, #8]
	g_ili9225_display_opt.background_color = COLOR_WHITE;
  4012f8:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
  4012fc:	60e3      	str	r3, [r4, #12]

	/* Switch off backlight */
	aat31xx_disable_backlight();
  4012fe:	4b08      	ldr	r3, [pc, #32]	; (401320 <config_lcd+0x38>)
  401300:	4798      	blx	r3

	/* Initialize LCD */
	ili9225_init(&g_ili9225_display_opt);
  401302:	4620      	mov	r0, r4
  401304:	4b07      	ldr	r3, [pc, #28]	; (401324 <config_lcd+0x3c>)
  401306:	4798      	blx	r3

	/* Set backlight level */
	aat31xx_set_backlight(AAT31XX_AVG_BACKLIGHT_LEVEL);
  401308:	2008      	movs	r0, #8
  40130a:	4b07      	ldr	r3, [pc, #28]	; (401328 <config_lcd+0x40>)
  40130c:	4798      	blx	r3

	/* Turn on LCD */
	ili9225_display_on();
  40130e:	4b07      	ldr	r3, [pc, #28]	; (40132c <config_lcd+0x44>)
  401310:	4798      	blx	r3
	
	/* Draw filled rectangle with white color */
	//ili9225_set_foreground_color(COLOR_WHITE);
	ili9225_fill(COLOR_WHITE);
  401312:	f64f 70ff 	movw	r0, #65535	; 0xffff
  401316:	4b06      	ldr	r3, [pc, #24]	; (401330 <config_lcd+0x48>)
  401318:	4798      	blx	r3
  40131a:	bd10      	pop	{r4, pc}
  40131c:	20000c00 	.word	0x20000c00
  401320:	004003b5 	.word	0x004003b5
  401324:	004005f1 	.word	0x004005f1
  401328:	00400359 	.word	0x00400359
  40132c:	00400559 	.word	0x00400559
  401330:	004007b9 	.word	0x004007b9

00401334 <main>:
			}
	}
}

int main (void)
{
  401334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401338:	b083      	sub	sp, #12
	/* Insert system clock initialization code here (sysclk_init()). */

	sysclk_init();
  40133a:	4b52      	ldr	r3, [pc, #328]	; (401484 <main+0x150>)
  40133c:	4798      	blx	r3
	board_init();
  40133e:	4b52      	ldr	r3, [pc, #328]	; (401488 <main+0x154>)
  401340:	4798      	blx	r3
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  401342:	4b52      	ldr	r3, [pc, #328]	; (40148c <main+0x158>)
  401344:	f64b 327f 	movw	r2, #47999	; 0xbb7f
  401348:	605a      	str	r2, [r3, #4]
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  40134a:	21f0      	movs	r1, #240	; 0xf0
  40134c:	4a50      	ldr	r2, [pc, #320]	; (401490 <main+0x15c>)
  40134e:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  401352:	2500      	movs	r5, #0
  401354:	609d      	str	r5, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  401356:	2207      	movs	r2, #7
  401358:	601a      	str	r2, [r3, #0]
			/* Capture error */
			gpio_set_pin_low(LED2_GPIO);
		}
	}
	
	config_lcd();
  40135a:	4b4e      	ldr	r3, [pc, #312]	; (401494 <main+0x160>)
  40135c:	4798      	blx	r3
	
	pmc_enable_periph_clk(ID_ENC);
  40135e:	200b      	movs	r0, #11
  401360:	4b4d      	ldr	r3, [pc, #308]	; (401498 <main+0x164>)
  401362:	4798      	blx	r3
	
	//Interrupt for A:
	pio_set_input(PIOA, GPIO_A, PIO_DEFAULT);
  401364:	4c4d      	ldr	r4, [pc, #308]	; (40149c <main+0x168>)
  401366:	4620      	mov	r0, r4
  401368:	2102      	movs	r1, #2
  40136a:	462a      	mov	r2, r5
  40136c:	f8df a170 	ldr.w	sl, [pc, #368]	; 4014e0 <main+0x1ac>
  401370:	47d0      	blx	sl
	pio_pull_down(PIOA, GPIO_A, ENABLE);
  401372:	4620      	mov	r0, r4
  401374:	2102      	movs	r1, #2
  401376:	2201      	movs	r2, #1
  401378:	f8df 9168 	ldr.w	r9, [pc, #360]	; 4014e4 <main+0x1b0>
  40137c:	47c8      	blx	r9
	pio_handler_set(PIOA, ID_ENC, GPIO_A, PIO_IT_RISE_EDGE, pin_handler);
  40137e:	f8df 8168 	ldr.w	r8, [pc, #360]	; 4014e8 <main+0x1b4>
  401382:	f8cd 8000 	str.w	r8, [sp]
  401386:	4620      	mov	r0, r4
  401388:	210b      	movs	r1, #11
  40138a:	2202      	movs	r2, #2
  40138c:	2370      	movs	r3, #112	; 0x70
  40138e:	4f44      	ldr	r7, [pc, #272]	; (4014a0 <main+0x16c>)
  401390:	47b8      	blx	r7
	pio_enable_interrupt(PIOA, GPIO_A);
  401392:	4620      	mov	r0, r4
  401394:	2102      	movs	r1, #2
  401396:	4e43      	ldr	r6, [pc, #268]	; (4014a4 <main+0x170>)
  401398:	47b0      	blx	r6
	
	//Interrupt for B:
	pio_set_input(PIOA, GPIO_B, PIO_DEFAULT);
  40139a:	4620      	mov	r0, r4
  40139c:	2104      	movs	r1, #4
  40139e:	462a      	mov	r2, r5
  4013a0:	47d0      	blx	sl
	pio_pull_down(PIOA, GPIO_B, ENABLE);
  4013a2:	4620      	mov	r0, r4
  4013a4:	2104      	movs	r1, #4
  4013a6:	2201      	movs	r2, #1
  4013a8:	47c8      	blx	r9
	pio_handler_set(PIOA, ID_ENC, GPIO_B, PIO_IT_RISE_EDGE, pin_handler);
  4013aa:	f8cd 8000 	str.w	r8, [sp]
  4013ae:	4620      	mov	r0, r4
  4013b0:	210b      	movs	r1, #11
  4013b2:	2204      	movs	r2, #4
  4013b4:	2370      	movs	r3, #112	; 0x70
  4013b6:	47b8      	blx	r7
	pio_enable_interrupt(PIOA, GPIO_B);
  4013b8:	4620      	mov	r0, r4
  4013ba:	2104      	movs	r1, #4
  4013bc:	47b0      	blx	r6
	
	//Interrupt for C:
	pio_set_input(PIOA, GPIO_C, PIO_DEFAULT);
  4013be:	4620      	mov	r0, r4
  4013c0:	2110      	movs	r1, #16
  4013c2:	462a      	mov	r2, r5
  4013c4:	47d0      	blx	sl
	pio_pull_down(PIOA, GPIO_C, ENABLE);
  4013c6:	4620      	mov	r0, r4
  4013c8:	2110      	movs	r1, #16
  4013ca:	2201      	movs	r2, #1
  4013cc:	47c8      	blx	r9
	//pio_handler_set(PIOA, ID_ENC, GPIO_C, PIO_IT_RISE_EDGE, pin_handler);
	pio_handler_set(PIOA, ID_ENC, GPIO_C, PIO_IT_FALL_EDGE, pin_handler);
  4013ce:	f8cd 8000 	str.w	r8, [sp]
  4013d2:	4620      	mov	r0, r4
  4013d4:	210b      	movs	r1, #11
  4013d6:	2210      	movs	r2, #16
  4013d8:	2350      	movs	r3, #80	; 0x50
  4013da:	47b8      	blx	r7
	pio_enable_interrupt(PIOA, GPIO_C);
  4013dc:	4620      	mov	r0, r4
  4013de:	2110      	movs	r1, #16
  4013e0:	47b0      	blx	r6

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  4013e2:	4b31      	ldr	r3, [pc, #196]	; (4014a8 <main+0x174>)
  4013e4:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4013e8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  4013ec:	f8c3 2180 	str.w	r2, [r3, #384]	; 0x180
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
  4013f0:	f883 530b 	strb.w	r5, [r3, #779]	; 0x30b

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
  4013f4:	601a      	str	r2, [r3, #0]
	NVIC_DisableIRQ(PIOA_IRQn);
	NVIC_ClearPendingIRQ(PIOA_IRQn);
	NVIC_SetPriority(PIOA_IRQn, 0);
	NVIC_EnableIRQ(PIOA_IRQn);
	
	ili9225_set_foreground_color(COLOR_BLACK);
  4013f6:	4628      	mov	r0, r5
  4013f8:	4b2c      	ldr	r3, [pc, #176]	; (4014ac <main+0x178>)
  4013fa:	4798      	blx	r3
	ili9225_draw_string(10,10, (uint8_t *)"Encoder Test");
  4013fc:	200a      	movs	r0, #10
  4013fe:	4601      	mov	r1, r0
  401400:	4a2b      	ldr	r2, [pc, #172]	; (4014b0 <main+0x17c>)
  401402:	4b2c      	ldr	r3, [pc, #176]	; (4014b4 <main+0x180>)
  401404:	4798      	blx	r3
	
	while (1){
		ili9225_set_foreground_color(COLOR_WHITE);
  401406:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 4014ac <main+0x178>
		ili9225_draw_filled_rectangle(0,30,ILI9225_LCD_WIDTH,ILI9225_LCD_HEIGHT);
		ili9225_set_foreground_color(COLOR_BLACK);
		graus = ((float)round/ENC_RES)*VOLTA_COMP;
  40140a:	f04f 5a6a 	mov.w	sl, #981467136	; 0x3a800000
  40140e:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 4014ec <main+0x1b8>

static void mdelay(uint32_t ul_dly_ticks)
{
	uint32_t ul_cur_ticks;

	ul_cur_ticks = g_ul_ms_ticks;
  401412:	4c29      	ldr	r4, [pc, #164]	; (4014b8 <main+0x184>)
	
	ili9225_set_foreground_color(COLOR_BLACK);
	ili9225_draw_string(10,10, (uint8_t *)"Encoder Test");
	
	while (1){
		ili9225_set_foreground_color(COLOR_WHITE);
  401414:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  401418:	47c8      	blx	r9
		ili9225_draw_filled_rectangle(0,30,ILI9225_LCD_WIDTH,ILI9225_LCD_HEIGHT);
  40141a:	2000      	movs	r0, #0
  40141c:	211e      	movs	r1, #30
  40141e:	22b0      	movs	r2, #176	; 0xb0
  401420:	23dc      	movs	r3, #220	; 0xdc
  401422:	4d26      	ldr	r5, [pc, #152]	; (4014bc <main+0x188>)
  401424:	47a8      	blx	r5
		ili9225_set_foreground_color(COLOR_BLACK);
  401426:	2000      	movs	r0, #0
  401428:	47c8      	blx	r9
		graus = ((float)round/ENC_RES)*VOLTA_COMP;
  40142a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 4014f0 <main+0x1bc>
  40142e:	f8d8 0000 	ldr.w	r0, [r8]
  401432:	4b23      	ldr	r3, [pc, #140]	; (4014c0 <main+0x18c>)
  401434:	4798      	blx	r3
  401436:	4d23      	ldr	r5, [pc, #140]	; (4014c4 <main+0x190>)
  401438:	4651      	mov	r1, sl
  40143a:	47a8      	blx	r5
  40143c:	4659      	mov	r1, fp
  40143e:	47a8      	blx	r5
  401440:	4b21      	ldr	r3, [pc, #132]	; (4014c8 <main+0x194>)
  401442:	6018      	str	r0, [r3, #0]
		snprintf(buf, sizeof(buf), "Graus:%.3f", graus );
  401444:	4d21      	ldr	r5, [pc, #132]	; (4014cc <main+0x198>)
  401446:	4b22      	ldr	r3, [pc, #136]	; (4014d0 <main+0x19c>)
  401448:	4798      	blx	r3
  40144a:	e9cd 0100 	strd	r0, r1, [sp]
  40144e:	4628      	mov	r0, r5
  401450:	2164      	movs	r1, #100	; 0x64
  401452:	4a20      	ldr	r2, [pc, #128]	; (4014d4 <main+0x1a0>)
  401454:	4f20      	ldr	r7, [pc, #128]	; (4014d8 <main+0x1a4>)
  401456:	47b8      	blx	r7
		ili9225_draw_string(10,50, buf);
  401458:	200a      	movs	r0, #10
  40145a:	2132      	movs	r1, #50	; 0x32
  40145c:	462a      	mov	r2, r5
  40145e:	4e15      	ldr	r6, [pc, #84]	; (4014b4 <main+0x180>)
  401460:	47b0      	blx	r6
		snprintf(buf, sizeof(buf), "Round:%d", round );
  401462:	4628      	mov	r0, r5
  401464:	2164      	movs	r1, #100	; 0x64
  401466:	4a1d      	ldr	r2, [pc, #116]	; (4014dc <main+0x1a8>)
  401468:	f8d8 3000 	ldr.w	r3, [r8]
  40146c:	47b8      	blx	r7
		ili9225_draw_string(10,80, buf);
  40146e:	200a      	movs	r0, #10
  401470:	2150      	movs	r1, #80	; 0x50
  401472:	462a      	mov	r2, r5
  401474:	47b0      	blx	r6

static void mdelay(uint32_t ul_dly_ticks)
{
	uint32_t ul_cur_ticks;

	ul_cur_ticks = g_ul_ms_ticks;
  401476:	6822      	ldr	r2, [r4, #0]
	while ((g_ul_ms_ticks - ul_cur_ticks) < ul_dly_ticks);
  401478:	6823      	ldr	r3, [r4, #0]
  40147a:	1a9b      	subs	r3, r3, r2
  40147c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
  401480:	d3fa      	bcc.n	401478 <main+0x144>
  401482:	e7c7      	b.n	401414 <main+0xe0>
  401484:	00400119 	.word	0x00400119
  401488:	0040027d 	.word	0x0040027d
  40148c:	e000e010 	.word	0xe000e010
  401490:	e000ed00 	.word	0xe000ed00
  401494:	004012e9 	.word	0x004012e9
  401498:	00400ee1 	.word	0x00400ee1
  40149c:	400e0e00 	.word	0x400e0e00
  4014a0:	00400d81 	.word	0x00400d81
  4014a4:	00400abd 	.word	0x00400abd
  4014a8:	e000e100 	.word	0xe000e100
  4014ac:	0040057d 	.word	0x0040057d
  4014b0:	00406c44 	.word	0x00406c44
  4014b4:	004008dd 	.word	0x004008dd
  4014b8:	20000b60 	.word	0x20000b60
  4014bc:	00400825 	.word	0x00400825
  4014c0:	004019d9 	.word	0x004019d9
  4014c4:	00401a81 	.word	0x00401a81
  4014c8:	20000b54 	.word	0x20000b54
  4014cc:	20000b64 	.word	0x20000b64
  4014d0:	004017bd 	.word	0x004017bd
  4014d4:	00406c54 	.word	0x00406c54
  4014d8:	00401e05 	.word	0x00401e05
  4014dc:	00406c60 	.word	0x00406c60
  4014e0:	00400a21 	.word	0x00400a21
  4014e4:	00400a7d 	.word	0x00400a7d
  4014e8:	0040124d 	.word	0x0040124d
  4014ec:	43b40000 	.word	0x43b40000
  4014f0:	20000b5c 	.word	0x20000b5c

004014f4 <__aeabi_drsub>:
  4014f4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4014f8:	e002      	b.n	401500 <__adddf3>
  4014fa:	bf00      	nop

004014fc <__aeabi_dsub>:
  4014fc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00401500 <__adddf3>:
  401500:	b530      	push	{r4, r5, lr}
  401502:	ea4f 0441 	mov.w	r4, r1, lsl #1
  401506:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40150a:	ea94 0f05 	teq	r4, r5
  40150e:	bf08      	it	eq
  401510:	ea90 0f02 	teqeq	r0, r2
  401514:	bf1f      	itttt	ne
  401516:	ea54 0c00 	orrsne.w	ip, r4, r0
  40151a:	ea55 0c02 	orrsne.w	ip, r5, r2
  40151e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  401522:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  401526:	f000 80e2 	beq.w	4016ee <__adddf3+0x1ee>
  40152a:	ea4f 5454 	mov.w	r4, r4, lsr #21
  40152e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  401532:	bfb8      	it	lt
  401534:	426d      	neglt	r5, r5
  401536:	dd0c      	ble.n	401552 <__adddf3+0x52>
  401538:	442c      	add	r4, r5
  40153a:	ea80 0202 	eor.w	r2, r0, r2
  40153e:	ea81 0303 	eor.w	r3, r1, r3
  401542:	ea82 0000 	eor.w	r0, r2, r0
  401546:	ea83 0101 	eor.w	r1, r3, r1
  40154a:	ea80 0202 	eor.w	r2, r0, r2
  40154e:	ea81 0303 	eor.w	r3, r1, r3
  401552:	2d36      	cmp	r5, #54	; 0x36
  401554:	bf88      	it	hi
  401556:	bd30      	pophi	{r4, r5, pc}
  401558:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40155c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  401560:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  401564:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  401568:	d002      	beq.n	401570 <__adddf3+0x70>
  40156a:	4240      	negs	r0, r0
  40156c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401570:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  401574:	ea4f 3303 	mov.w	r3, r3, lsl #12
  401578:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40157c:	d002      	beq.n	401584 <__adddf3+0x84>
  40157e:	4252      	negs	r2, r2
  401580:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  401584:	ea94 0f05 	teq	r4, r5
  401588:	f000 80a7 	beq.w	4016da <__adddf3+0x1da>
  40158c:	f1a4 0401 	sub.w	r4, r4, #1
  401590:	f1d5 0e20 	rsbs	lr, r5, #32
  401594:	db0d      	blt.n	4015b2 <__adddf3+0xb2>
  401596:	fa02 fc0e 	lsl.w	ip, r2, lr
  40159a:	fa22 f205 	lsr.w	r2, r2, r5
  40159e:	1880      	adds	r0, r0, r2
  4015a0:	f141 0100 	adc.w	r1, r1, #0
  4015a4:	fa03 f20e 	lsl.w	r2, r3, lr
  4015a8:	1880      	adds	r0, r0, r2
  4015aa:	fa43 f305 	asr.w	r3, r3, r5
  4015ae:	4159      	adcs	r1, r3
  4015b0:	e00e      	b.n	4015d0 <__adddf3+0xd0>
  4015b2:	f1a5 0520 	sub.w	r5, r5, #32
  4015b6:	f10e 0e20 	add.w	lr, lr, #32
  4015ba:	2a01      	cmp	r2, #1
  4015bc:	fa03 fc0e 	lsl.w	ip, r3, lr
  4015c0:	bf28      	it	cs
  4015c2:	f04c 0c02 	orrcs.w	ip, ip, #2
  4015c6:	fa43 f305 	asr.w	r3, r3, r5
  4015ca:	18c0      	adds	r0, r0, r3
  4015cc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4015d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4015d4:	d507      	bpl.n	4015e6 <__adddf3+0xe6>
  4015d6:	f04f 0e00 	mov.w	lr, #0
  4015da:	f1dc 0c00 	rsbs	ip, ip, #0
  4015de:	eb7e 0000 	sbcs.w	r0, lr, r0
  4015e2:	eb6e 0101 	sbc.w	r1, lr, r1
  4015e6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4015ea:	d31b      	bcc.n	401624 <__adddf3+0x124>
  4015ec:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4015f0:	d30c      	bcc.n	40160c <__adddf3+0x10c>
  4015f2:	0849      	lsrs	r1, r1, #1
  4015f4:	ea5f 0030 	movs.w	r0, r0, rrx
  4015f8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4015fc:	f104 0401 	add.w	r4, r4, #1
  401600:	ea4f 5244 	mov.w	r2, r4, lsl #21
  401604:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  401608:	f080 809a 	bcs.w	401740 <__adddf3+0x240>
  40160c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401610:	bf08      	it	eq
  401612:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  401616:	f150 0000 	adcs.w	r0, r0, #0
  40161a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  40161e:	ea41 0105 	orr.w	r1, r1, r5
  401622:	bd30      	pop	{r4, r5, pc}
  401624:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  401628:	4140      	adcs	r0, r0
  40162a:	eb41 0101 	adc.w	r1, r1, r1
  40162e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  401632:	f1a4 0401 	sub.w	r4, r4, #1
  401636:	d1e9      	bne.n	40160c <__adddf3+0x10c>
  401638:	f091 0f00 	teq	r1, #0
  40163c:	bf04      	itt	eq
  40163e:	4601      	moveq	r1, r0
  401640:	2000      	moveq	r0, #0
  401642:	fab1 f381 	clz	r3, r1
  401646:	bf08      	it	eq
  401648:	3320      	addeq	r3, #32
  40164a:	f1a3 030b 	sub.w	r3, r3, #11
  40164e:	f1b3 0220 	subs.w	r2, r3, #32
  401652:	da0c      	bge.n	40166e <__adddf3+0x16e>
  401654:	320c      	adds	r2, #12
  401656:	dd08      	ble.n	40166a <__adddf3+0x16a>
  401658:	f102 0c14 	add.w	ip, r2, #20
  40165c:	f1c2 020c 	rsb	r2, r2, #12
  401660:	fa01 f00c 	lsl.w	r0, r1, ip
  401664:	fa21 f102 	lsr.w	r1, r1, r2
  401668:	e00c      	b.n	401684 <__adddf3+0x184>
  40166a:	f102 0214 	add.w	r2, r2, #20
  40166e:	bfd8      	it	le
  401670:	f1c2 0c20 	rsble	ip, r2, #32
  401674:	fa01 f102 	lsl.w	r1, r1, r2
  401678:	fa20 fc0c 	lsr.w	ip, r0, ip
  40167c:	bfdc      	itt	le
  40167e:	ea41 010c 	orrle.w	r1, r1, ip
  401682:	4090      	lslle	r0, r2
  401684:	1ae4      	subs	r4, r4, r3
  401686:	bfa2      	ittt	ge
  401688:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40168c:	4329      	orrge	r1, r5
  40168e:	bd30      	popge	{r4, r5, pc}
  401690:	ea6f 0404 	mvn.w	r4, r4
  401694:	3c1f      	subs	r4, #31
  401696:	da1c      	bge.n	4016d2 <__adddf3+0x1d2>
  401698:	340c      	adds	r4, #12
  40169a:	dc0e      	bgt.n	4016ba <__adddf3+0x1ba>
  40169c:	f104 0414 	add.w	r4, r4, #20
  4016a0:	f1c4 0220 	rsb	r2, r4, #32
  4016a4:	fa20 f004 	lsr.w	r0, r0, r4
  4016a8:	fa01 f302 	lsl.w	r3, r1, r2
  4016ac:	ea40 0003 	orr.w	r0, r0, r3
  4016b0:	fa21 f304 	lsr.w	r3, r1, r4
  4016b4:	ea45 0103 	orr.w	r1, r5, r3
  4016b8:	bd30      	pop	{r4, r5, pc}
  4016ba:	f1c4 040c 	rsb	r4, r4, #12
  4016be:	f1c4 0220 	rsb	r2, r4, #32
  4016c2:	fa20 f002 	lsr.w	r0, r0, r2
  4016c6:	fa01 f304 	lsl.w	r3, r1, r4
  4016ca:	ea40 0003 	orr.w	r0, r0, r3
  4016ce:	4629      	mov	r1, r5
  4016d0:	bd30      	pop	{r4, r5, pc}
  4016d2:	fa21 f004 	lsr.w	r0, r1, r4
  4016d6:	4629      	mov	r1, r5
  4016d8:	bd30      	pop	{r4, r5, pc}
  4016da:	f094 0f00 	teq	r4, #0
  4016de:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4016e2:	bf06      	itte	eq
  4016e4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4016e8:	3401      	addeq	r4, #1
  4016ea:	3d01      	subne	r5, #1
  4016ec:	e74e      	b.n	40158c <__adddf3+0x8c>
  4016ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4016f2:	bf18      	it	ne
  4016f4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4016f8:	d029      	beq.n	40174e <__adddf3+0x24e>
  4016fa:	ea94 0f05 	teq	r4, r5
  4016fe:	bf08      	it	eq
  401700:	ea90 0f02 	teqeq	r0, r2
  401704:	d005      	beq.n	401712 <__adddf3+0x212>
  401706:	ea54 0c00 	orrs.w	ip, r4, r0
  40170a:	bf04      	itt	eq
  40170c:	4619      	moveq	r1, r3
  40170e:	4610      	moveq	r0, r2
  401710:	bd30      	pop	{r4, r5, pc}
  401712:	ea91 0f03 	teq	r1, r3
  401716:	bf1e      	ittt	ne
  401718:	2100      	movne	r1, #0
  40171a:	2000      	movne	r0, #0
  40171c:	bd30      	popne	{r4, r5, pc}
  40171e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  401722:	d105      	bne.n	401730 <__adddf3+0x230>
  401724:	0040      	lsls	r0, r0, #1
  401726:	4149      	adcs	r1, r1
  401728:	bf28      	it	cs
  40172a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  40172e:	bd30      	pop	{r4, r5, pc}
  401730:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  401734:	bf3c      	itt	cc
  401736:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  40173a:	bd30      	popcc	{r4, r5, pc}
  40173c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  401740:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  401744:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  401748:	f04f 0000 	mov.w	r0, #0
  40174c:	bd30      	pop	{r4, r5, pc}
  40174e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  401752:	bf1a      	itte	ne
  401754:	4619      	movne	r1, r3
  401756:	4610      	movne	r0, r2
  401758:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  40175c:	bf1c      	itt	ne
  40175e:	460b      	movne	r3, r1
  401760:	4602      	movne	r2, r0
  401762:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  401766:	bf06      	itte	eq
  401768:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  40176c:	ea91 0f03 	teqeq	r1, r3
  401770:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  401774:	bd30      	pop	{r4, r5, pc}
  401776:	bf00      	nop

00401778 <__aeabi_ui2d>:
  401778:	f090 0f00 	teq	r0, #0
  40177c:	bf04      	itt	eq
  40177e:	2100      	moveq	r1, #0
  401780:	4770      	bxeq	lr
  401782:	b530      	push	{r4, r5, lr}
  401784:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401788:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40178c:	f04f 0500 	mov.w	r5, #0
  401790:	f04f 0100 	mov.w	r1, #0
  401794:	e750      	b.n	401638 <__adddf3+0x138>
  401796:	bf00      	nop

00401798 <__aeabi_i2d>:
  401798:	f090 0f00 	teq	r0, #0
  40179c:	bf04      	itt	eq
  40179e:	2100      	moveq	r1, #0
  4017a0:	4770      	bxeq	lr
  4017a2:	b530      	push	{r4, r5, lr}
  4017a4:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4017a8:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4017ac:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  4017b0:	bf48      	it	mi
  4017b2:	4240      	negmi	r0, r0
  4017b4:	f04f 0100 	mov.w	r1, #0
  4017b8:	e73e      	b.n	401638 <__adddf3+0x138>
  4017ba:	bf00      	nop

004017bc <__aeabi_f2d>:
  4017bc:	0042      	lsls	r2, r0, #1
  4017be:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4017c2:	ea4f 0131 	mov.w	r1, r1, rrx
  4017c6:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4017ca:	bf1f      	itttt	ne
  4017cc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4017d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4017d4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4017d8:	4770      	bxne	lr
  4017da:	f092 0f00 	teq	r2, #0
  4017de:	bf14      	ite	ne
  4017e0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4017e4:	4770      	bxeq	lr
  4017e6:	b530      	push	{r4, r5, lr}
  4017e8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4017ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4017f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4017f4:	e720      	b.n	401638 <__adddf3+0x138>
  4017f6:	bf00      	nop

004017f8 <__aeabi_ul2d>:
  4017f8:	ea50 0201 	orrs.w	r2, r0, r1
  4017fc:	bf08      	it	eq
  4017fe:	4770      	bxeq	lr
  401800:	b530      	push	{r4, r5, lr}
  401802:	f04f 0500 	mov.w	r5, #0
  401806:	e00a      	b.n	40181e <__aeabi_l2d+0x16>

00401808 <__aeabi_l2d>:
  401808:	ea50 0201 	orrs.w	r2, r0, r1
  40180c:	bf08      	it	eq
  40180e:	4770      	bxeq	lr
  401810:	b530      	push	{r4, r5, lr}
  401812:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  401816:	d502      	bpl.n	40181e <__aeabi_l2d+0x16>
  401818:	4240      	negs	r0, r0
  40181a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40181e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  401822:	f104 0432 	add.w	r4, r4, #50	; 0x32
  401826:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40182a:	f43f aedc 	beq.w	4015e6 <__adddf3+0xe6>
  40182e:	f04f 0203 	mov.w	r2, #3
  401832:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  401836:	bf18      	it	ne
  401838:	3203      	addne	r2, #3
  40183a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40183e:	bf18      	it	ne
  401840:	3203      	addne	r2, #3
  401842:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  401846:	f1c2 0320 	rsb	r3, r2, #32
  40184a:	fa00 fc03 	lsl.w	ip, r0, r3
  40184e:	fa20 f002 	lsr.w	r0, r0, r2
  401852:	fa01 fe03 	lsl.w	lr, r1, r3
  401856:	ea40 000e 	orr.w	r0, r0, lr
  40185a:	fa21 f102 	lsr.w	r1, r1, r2
  40185e:	4414      	add	r4, r2
  401860:	e6c1      	b.n	4015e6 <__adddf3+0xe6>
  401862:	bf00      	nop

00401864 <__aeabi_frsub>:
  401864:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  401868:	e002      	b.n	401870 <__addsf3>
  40186a:	bf00      	nop

0040186c <__aeabi_fsub>:
  40186c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00401870 <__addsf3>:
  401870:	0042      	lsls	r2, r0, #1
  401872:	bf1f      	itttt	ne
  401874:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  401878:	ea92 0f03 	teqne	r2, r3
  40187c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  401880:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  401884:	d06a      	beq.n	40195c <__addsf3+0xec>
  401886:	ea4f 6212 	mov.w	r2, r2, lsr #24
  40188a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  40188e:	bfc1      	itttt	gt
  401890:	18d2      	addgt	r2, r2, r3
  401892:	4041      	eorgt	r1, r0
  401894:	4048      	eorgt	r0, r1
  401896:	4041      	eorgt	r1, r0
  401898:	bfb8      	it	lt
  40189a:	425b      	neglt	r3, r3
  40189c:	2b19      	cmp	r3, #25
  40189e:	bf88      	it	hi
  4018a0:	4770      	bxhi	lr
  4018a2:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  4018a6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4018aa:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  4018ae:	bf18      	it	ne
  4018b0:	4240      	negne	r0, r0
  4018b2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4018b6:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  4018ba:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  4018be:	bf18      	it	ne
  4018c0:	4249      	negne	r1, r1
  4018c2:	ea92 0f03 	teq	r2, r3
  4018c6:	d03f      	beq.n	401948 <__addsf3+0xd8>
  4018c8:	f1a2 0201 	sub.w	r2, r2, #1
  4018cc:	fa41 fc03 	asr.w	ip, r1, r3
  4018d0:	eb10 000c 	adds.w	r0, r0, ip
  4018d4:	f1c3 0320 	rsb	r3, r3, #32
  4018d8:	fa01 f103 	lsl.w	r1, r1, r3
  4018dc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4018e0:	d502      	bpl.n	4018e8 <__addsf3+0x78>
  4018e2:	4249      	negs	r1, r1
  4018e4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  4018e8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  4018ec:	d313      	bcc.n	401916 <__addsf3+0xa6>
  4018ee:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  4018f2:	d306      	bcc.n	401902 <__addsf3+0x92>
  4018f4:	0840      	lsrs	r0, r0, #1
  4018f6:	ea4f 0131 	mov.w	r1, r1, rrx
  4018fa:	f102 0201 	add.w	r2, r2, #1
  4018fe:	2afe      	cmp	r2, #254	; 0xfe
  401900:	d251      	bcs.n	4019a6 <__addsf3+0x136>
  401902:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  401906:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  40190a:	bf08      	it	eq
  40190c:	f020 0001 	biceq.w	r0, r0, #1
  401910:	ea40 0003 	orr.w	r0, r0, r3
  401914:	4770      	bx	lr
  401916:	0049      	lsls	r1, r1, #1
  401918:	eb40 0000 	adc.w	r0, r0, r0
  40191c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  401920:	f1a2 0201 	sub.w	r2, r2, #1
  401924:	d1ed      	bne.n	401902 <__addsf3+0x92>
  401926:	fab0 fc80 	clz	ip, r0
  40192a:	f1ac 0c08 	sub.w	ip, ip, #8
  40192e:	ebb2 020c 	subs.w	r2, r2, ip
  401932:	fa00 f00c 	lsl.w	r0, r0, ip
  401936:	bfaa      	itet	ge
  401938:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  40193c:	4252      	neglt	r2, r2
  40193e:	4318      	orrge	r0, r3
  401940:	bfbc      	itt	lt
  401942:	40d0      	lsrlt	r0, r2
  401944:	4318      	orrlt	r0, r3
  401946:	4770      	bx	lr
  401948:	f092 0f00 	teq	r2, #0
  40194c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  401950:	bf06      	itte	eq
  401952:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  401956:	3201      	addeq	r2, #1
  401958:	3b01      	subne	r3, #1
  40195a:	e7b5      	b.n	4018c8 <__addsf3+0x58>
  40195c:	ea4f 0341 	mov.w	r3, r1, lsl #1
  401960:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  401964:	bf18      	it	ne
  401966:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  40196a:	d021      	beq.n	4019b0 <__addsf3+0x140>
  40196c:	ea92 0f03 	teq	r2, r3
  401970:	d004      	beq.n	40197c <__addsf3+0x10c>
  401972:	f092 0f00 	teq	r2, #0
  401976:	bf08      	it	eq
  401978:	4608      	moveq	r0, r1
  40197a:	4770      	bx	lr
  40197c:	ea90 0f01 	teq	r0, r1
  401980:	bf1c      	itt	ne
  401982:	2000      	movne	r0, #0
  401984:	4770      	bxne	lr
  401986:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  40198a:	d104      	bne.n	401996 <__addsf3+0x126>
  40198c:	0040      	lsls	r0, r0, #1
  40198e:	bf28      	it	cs
  401990:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  401994:	4770      	bx	lr
  401996:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  40199a:	bf3c      	itt	cc
  40199c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  4019a0:	4770      	bxcc	lr
  4019a2:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  4019a6:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  4019aa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4019ae:	4770      	bx	lr
  4019b0:	ea7f 6222 	mvns.w	r2, r2, asr #24
  4019b4:	bf16      	itet	ne
  4019b6:	4608      	movne	r0, r1
  4019b8:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  4019bc:	4601      	movne	r1, r0
  4019be:	0242      	lsls	r2, r0, #9
  4019c0:	bf06      	itte	eq
  4019c2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  4019c6:	ea90 0f01 	teqeq	r0, r1
  4019ca:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  4019ce:	4770      	bx	lr

004019d0 <__aeabi_ui2f>:
  4019d0:	f04f 0300 	mov.w	r3, #0
  4019d4:	e004      	b.n	4019e0 <__aeabi_i2f+0x8>
  4019d6:	bf00      	nop

004019d8 <__aeabi_i2f>:
  4019d8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  4019dc:	bf48      	it	mi
  4019de:	4240      	negmi	r0, r0
  4019e0:	ea5f 0c00 	movs.w	ip, r0
  4019e4:	bf08      	it	eq
  4019e6:	4770      	bxeq	lr
  4019e8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  4019ec:	4601      	mov	r1, r0
  4019ee:	f04f 0000 	mov.w	r0, #0
  4019f2:	e01c      	b.n	401a2e <__aeabi_l2f+0x2a>

004019f4 <__aeabi_ul2f>:
  4019f4:	ea50 0201 	orrs.w	r2, r0, r1
  4019f8:	bf08      	it	eq
  4019fa:	4770      	bxeq	lr
  4019fc:	f04f 0300 	mov.w	r3, #0
  401a00:	e00a      	b.n	401a18 <__aeabi_l2f+0x14>
  401a02:	bf00      	nop

00401a04 <__aeabi_l2f>:
  401a04:	ea50 0201 	orrs.w	r2, r0, r1
  401a08:	bf08      	it	eq
  401a0a:	4770      	bxeq	lr
  401a0c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  401a10:	d502      	bpl.n	401a18 <__aeabi_l2f+0x14>
  401a12:	4240      	negs	r0, r0
  401a14:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  401a18:	ea5f 0c01 	movs.w	ip, r1
  401a1c:	bf02      	ittt	eq
  401a1e:	4684      	moveq	ip, r0
  401a20:	4601      	moveq	r1, r0
  401a22:	2000      	moveq	r0, #0
  401a24:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  401a28:	bf08      	it	eq
  401a2a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  401a2e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  401a32:	fabc f28c 	clz	r2, ip
  401a36:	3a08      	subs	r2, #8
  401a38:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  401a3c:	db10      	blt.n	401a60 <__aeabi_l2f+0x5c>
  401a3e:	fa01 fc02 	lsl.w	ip, r1, r2
  401a42:	4463      	add	r3, ip
  401a44:	fa00 fc02 	lsl.w	ip, r0, r2
  401a48:	f1c2 0220 	rsb	r2, r2, #32
  401a4c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  401a50:	fa20 f202 	lsr.w	r2, r0, r2
  401a54:	eb43 0002 	adc.w	r0, r3, r2
  401a58:	bf08      	it	eq
  401a5a:	f020 0001 	biceq.w	r0, r0, #1
  401a5e:	4770      	bx	lr
  401a60:	f102 0220 	add.w	r2, r2, #32
  401a64:	fa01 fc02 	lsl.w	ip, r1, r2
  401a68:	f1c2 0220 	rsb	r2, r2, #32
  401a6c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  401a70:	fa21 f202 	lsr.w	r2, r1, r2
  401a74:	eb43 0002 	adc.w	r0, r3, r2
  401a78:	bf08      	it	eq
  401a7a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  401a7e:	4770      	bx	lr

00401a80 <__aeabi_fmul>:
  401a80:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401a84:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  401a88:	bf1e      	ittt	ne
  401a8a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  401a8e:	ea92 0f0c 	teqne	r2, ip
  401a92:	ea93 0f0c 	teqne	r3, ip
  401a96:	d06f      	beq.n	401b78 <__aeabi_fmul+0xf8>
  401a98:	441a      	add	r2, r3
  401a9a:	ea80 0c01 	eor.w	ip, r0, r1
  401a9e:	0240      	lsls	r0, r0, #9
  401aa0:	bf18      	it	ne
  401aa2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  401aa6:	d01e      	beq.n	401ae6 <__aeabi_fmul+0x66>
  401aa8:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  401aac:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  401ab0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  401ab4:	fba0 3101 	umull	r3, r1, r0, r1
  401ab8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  401abc:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  401ac0:	bf3e      	ittt	cc
  401ac2:	0049      	lslcc	r1, r1, #1
  401ac4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  401ac8:	005b      	lslcc	r3, r3, #1
  401aca:	ea40 0001 	orr.w	r0, r0, r1
  401ace:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  401ad2:	2afd      	cmp	r2, #253	; 0xfd
  401ad4:	d81d      	bhi.n	401b12 <__aeabi_fmul+0x92>
  401ad6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  401ada:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  401ade:	bf08      	it	eq
  401ae0:	f020 0001 	biceq.w	r0, r0, #1
  401ae4:	4770      	bx	lr
  401ae6:	f090 0f00 	teq	r0, #0
  401aea:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  401aee:	bf08      	it	eq
  401af0:	0249      	lsleq	r1, r1, #9
  401af2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  401af6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  401afa:	3a7f      	subs	r2, #127	; 0x7f
  401afc:	bfc2      	ittt	gt
  401afe:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  401b02:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  401b06:	4770      	bxgt	lr
  401b08:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401b0c:	f04f 0300 	mov.w	r3, #0
  401b10:	3a01      	subs	r2, #1
  401b12:	dc5d      	bgt.n	401bd0 <__aeabi_fmul+0x150>
  401b14:	f112 0f19 	cmn.w	r2, #25
  401b18:	bfdc      	itt	le
  401b1a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  401b1e:	4770      	bxle	lr
  401b20:	f1c2 0200 	rsb	r2, r2, #0
  401b24:	0041      	lsls	r1, r0, #1
  401b26:	fa21 f102 	lsr.w	r1, r1, r2
  401b2a:	f1c2 0220 	rsb	r2, r2, #32
  401b2e:	fa00 fc02 	lsl.w	ip, r0, r2
  401b32:	ea5f 0031 	movs.w	r0, r1, rrx
  401b36:	f140 0000 	adc.w	r0, r0, #0
  401b3a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  401b3e:	bf08      	it	eq
  401b40:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  401b44:	4770      	bx	lr
  401b46:	f092 0f00 	teq	r2, #0
  401b4a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  401b4e:	bf02      	ittt	eq
  401b50:	0040      	lsleq	r0, r0, #1
  401b52:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  401b56:	3a01      	subeq	r2, #1
  401b58:	d0f9      	beq.n	401b4e <__aeabi_fmul+0xce>
  401b5a:	ea40 000c 	orr.w	r0, r0, ip
  401b5e:	f093 0f00 	teq	r3, #0
  401b62:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  401b66:	bf02      	ittt	eq
  401b68:	0049      	lsleq	r1, r1, #1
  401b6a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  401b6e:	3b01      	subeq	r3, #1
  401b70:	d0f9      	beq.n	401b66 <__aeabi_fmul+0xe6>
  401b72:	ea41 010c 	orr.w	r1, r1, ip
  401b76:	e78f      	b.n	401a98 <__aeabi_fmul+0x18>
  401b78:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  401b7c:	ea92 0f0c 	teq	r2, ip
  401b80:	bf18      	it	ne
  401b82:	ea93 0f0c 	teqne	r3, ip
  401b86:	d00a      	beq.n	401b9e <__aeabi_fmul+0x11e>
  401b88:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  401b8c:	bf18      	it	ne
  401b8e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  401b92:	d1d8      	bne.n	401b46 <__aeabi_fmul+0xc6>
  401b94:	ea80 0001 	eor.w	r0, r0, r1
  401b98:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  401b9c:	4770      	bx	lr
  401b9e:	f090 0f00 	teq	r0, #0
  401ba2:	bf17      	itett	ne
  401ba4:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  401ba8:	4608      	moveq	r0, r1
  401baa:	f091 0f00 	teqne	r1, #0
  401bae:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  401bb2:	d014      	beq.n	401bde <__aeabi_fmul+0x15e>
  401bb4:	ea92 0f0c 	teq	r2, ip
  401bb8:	d101      	bne.n	401bbe <__aeabi_fmul+0x13e>
  401bba:	0242      	lsls	r2, r0, #9
  401bbc:	d10f      	bne.n	401bde <__aeabi_fmul+0x15e>
  401bbe:	ea93 0f0c 	teq	r3, ip
  401bc2:	d103      	bne.n	401bcc <__aeabi_fmul+0x14c>
  401bc4:	024b      	lsls	r3, r1, #9
  401bc6:	bf18      	it	ne
  401bc8:	4608      	movne	r0, r1
  401bca:	d108      	bne.n	401bde <__aeabi_fmul+0x15e>
  401bcc:	ea80 0001 	eor.w	r0, r0, r1
  401bd0:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  401bd4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  401bd8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401bdc:	4770      	bx	lr
  401bde:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  401be2:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  401be6:	4770      	bx	lr

00401be8 <__aeabi_fdiv>:
  401be8:	f04f 0cff 	mov.w	ip, #255	; 0xff
  401bec:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  401bf0:	bf1e      	ittt	ne
  401bf2:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  401bf6:	ea92 0f0c 	teqne	r2, ip
  401bfa:	ea93 0f0c 	teqne	r3, ip
  401bfe:	d069      	beq.n	401cd4 <__aeabi_fdiv+0xec>
  401c00:	eba2 0203 	sub.w	r2, r2, r3
  401c04:	ea80 0c01 	eor.w	ip, r0, r1
  401c08:	0249      	lsls	r1, r1, #9
  401c0a:	ea4f 2040 	mov.w	r0, r0, lsl #9
  401c0e:	d037      	beq.n	401c80 <__aeabi_fdiv+0x98>
  401c10:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  401c14:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  401c18:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  401c1c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  401c20:	428b      	cmp	r3, r1
  401c22:	bf38      	it	cc
  401c24:	005b      	lslcc	r3, r3, #1
  401c26:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  401c2a:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  401c2e:	428b      	cmp	r3, r1
  401c30:	bf24      	itt	cs
  401c32:	1a5b      	subcs	r3, r3, r1
  401c34:	ea40 000c 	orrcs.w	r0, r0, ip
  401c38:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  401c3c:	bf24      	itt	cs
  401c3e:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  401c42:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  401c46:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  401c4a:	bf24      	itt	cs
  401c4c:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  401c50:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  401c54:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  401c58:	bf24      	itt	cs
  401c5a:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  401c5e:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  401c62:	011b      	lsls	r3, r3, #4
  401c64:	bf18      	it	ne
  401c66:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  401c6a:	d1e0      	bne.n	401c2e <__aeabi_fdiv+0x46>
  401c6c:	2afd      	cmp	r2, #253	; 0xfd
  401c6e:	f63f af50 	bhi.w	401b12 <__aeabi_fmul+0x92>
  401c72:	428b      	cmp	r3, r1
  401c74:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  401c78:	bf08      	it	eq
  401c7a:	f020 0001 	biceq.w	r0, r0, #1
  401c7e:	4770      	bx	lr
  401c80:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  401c84:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  401c88:	327f      	adds	r2, #127	; 0x7f
  401c8a:	bfc2      	ittt	gt
  401c8c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  401c90:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  401c94:	4770      	bxgt	lr
  401c96:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  401c9a:	f04f 0300 	mov.w	r3, #0
  401c9e:	3a01      	subs	r2, #1
  401ca0:	e737      	b.n	401b12 <__aeabi_fmul+0x92>
  401ca2:	f092 0f00 	teq	r2, #0
  401ca6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  401caa:	bf02      	ittt	eq
  401cac:	0040      	lsleq	r0, r0, #1
  401cae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  401cb2:	3a01      	subeq	r2, #1
  401cb4:	d0f9      	beq.n	401caa <__aeabi_fdiv+0xc2>
  401cb6:	ea40 000c 	orr.w	r0, r0, ip
  401cba:	f093 0f00 	teq	r3, #0
  401cbe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  401cc2:	bf02      	ittt	eq
  401cc4:	0049      	lsleq	r1, r1, #1
  401cc6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  401cca:	3b01      	subeq	r3, #1
  401ccc:	d0f9      	beq.n	401cc2 <__aeabi_fdiv+0xda>
  401cce:	ea41 010c 	orr.w	r1, r1, ip
  401cd2:	e795      	b.n	401c00 <__aeabi_fdiv+0x18>
  401cd4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  401cd8:	ea92 0f0c 	teq	r2, ip
  401cdc:	d108      	bne.n	401cf0 <__aeabi_fdiv+0x108>
  401cde:	0242      	lsls	r2, r0, #9
  401ce0:	f47f af7d 	bne.w	401bde <__aeabi_fmul+0x15e>
  401ce4:	ea93 0f0c 	teq	r3, ip
  401ce8:	f47f af70 	bne.w	401bcc <__aeabi_fmul+0x14c>
  401cec:	4608      	mov	r0, r1
  401cee:	e776      	b.n	401bde <__aeabi_fmul+0x15e>
  401cf0:	ea93 0f0c 	teq	r3, ip
  401cf4:	d104      	bne.n	401d00 <__aeabi_fdiv+0x118>
  401cf6:	024b      	lsls	r3, r1, #9
  401cf8:	f43f af4c 	beq.w	401b94 <__aeabi_fmul+0x114>
  401cfc:	4608      	mov	r0, r1
  401cfe:	e76e      	b.n	401bde <__aeabi_fmul+0x15e>
  401d00:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  401d04:	bf18      	it	ne
  401d06:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  401d0a:	d1ca      	bne.n	401ca2 <__aeabi_fdiv+0xba>
  401d0c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  401d10:	f47f af5c 	bne.w	401bcc <__aeabi_fmul+0x14c>
  401d14:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  401d18:	f47f af3c 	bne.w	401b94 <__aeabi_fmul+0x114>
  401d1c:	e75f      	b.n	401bde <__aeabi_fmul+0x15e>
  401d1e:	bf00      	nop

00401d20 <__libc_init_array>:
  401d20:	b570      	push	{r4, r5, r6, lr}
  401d22:	4e0f      	ldr	r6, [pc, #60]	; (401d60 <__libc_init_array+0x40>)
  401d24:	4d0f      	ldr	r5, [pc, #60]	; (401d64 <__libc_init_array+0x44>)
  401d26:	1b76      	subs	r6, r6, r5
  401d28:	10b6      	asrs	r6, r6, #2
  401d2a:	d007      	beq.n	401d3c <__libc_init_array+0x1c>
  401d2c:	3d04      	subs	r5, #4
  401d2e:	2400      	movs	r4, #0
  401d30:	3401      	adds	r4, #1
  401d32:	f855 3f04 	ldr.w	r3, [r5, #4]!
  401d36:	4798      	blx	r3
  401d38:	42a6      	cmp	r6, r4
  401d3a:	d1f9      	bne.n	401d30 <__libc_init_array+0x10>
  401d3c:	4e0a      	ldr	r6, [pc, #40]	; (401d68 <__libc_init_array+0x48>)
  401d3e:	4d0b      	ldr	r5, [pc, #44]	; (401d6c <__libc_init_array+0x4c>)
  401d40:	f005 f858 	bl	406df4 <_init>
  401d44:	1b76      	subs	r6, r6, r5
  401d46:	10b6      	asrs	r6, r6, #2
  401d48:	d008      	beq.n	401d5c <__libc_init_array+0x3c>
  401d4a:	3d04      	subs	r5, #4
  401d4c:	2400      	movs	r4, #0
  401d4e:	3401      	adds	r4, #1
  401d50:	f855 3f04 	ldr.w	r3, [r5, #4]!
  401d54:	4798      	blx	r3
  401d56:	42a6      	cmp	r6, r4
  401d58:	d1f9      	bne.n	401d4e <__libc_init_array+0x2e>
  401d5a:	bd70      	pop	{r4, r5, r6, pc}
  401d5c:	bd70      	pop	{r4, r5, r6, pc}
  401d5e:	bf00      	nop
  401d60:	00406e00 	.word	0x00406e00
  401d64:	00406e00 	.word	0x00406e00
  401d68:	00406e08 	.word	0x00406e08
  401d6c:	00406e00 	.word	0x00406e00

00401d70 <memset>:
  401d70:	b4f0      	push	{r4, r5, r6, r7}
  401d72:	0784      	lsls	r4, r0, #30
  401d74:	d043      	beq.n	401dfe <memset+0x8e>
  401d76:	1e54      	subs	r4, r2, #1
  401d78:	2a00      	cmp	r2, #0
  401d7a:	d03e      	beq.n	401dfa <memset+0x8a>
  401d7c:	b2cd      	uxtb	r5, r1
  401d7e:	4603      	mov	r3, r0
  401d80:	e003      	b.n	401d8a <memset+0x1a>
  401d82:	1e62      	subs	r2, r4, #1
  401d84:	2c00      	cmp	r4, #0
  401d86:	d038      	beq.n	401dfa <memset+0x8a>
  401d88:	4614      	mov	r4, r2
  401d8a:	f803 5b01 	strb.w	r5, [r3], #1
  401d8e:	079a      	lsls	r2, r3, #30
  401d90:	d1f7      	bne.n	401d82 <memset+0x12>
  401d92:	2c03      	cmp	r4, #3
  401d94:	d92a      	bls.n	401dec <memset+0x7c>
  401d96:	b2cd      	uxtb	r5, r1
  401d98:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401d9c:	2c0f      	cmp	r4, #15
  401d9e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401da2:	d915      	bls.n	401dd0 <memset+0x60>
  401da4:	f1a4 0710 	sub.w	r7, r4, #16
  401da8:	093f      	lsrs	r7, r7, #4
  401daa:	f103 0610 	add.w	r6, r3, #16
  401dae:	eb06 1607 	add.w	r6, r6, r7, lsl #4
  401db2:	461a      	mov	r2, r3
  401db4:	6015      	str	r5, [r2, #0]
  401db6:	6055      	str	r5, [r2, #4]
  401db8:	6095      	str	r5, [r2, #8]
  401dba:	60d5      	str	r5, [r2, #12]
  401dbc:	3210      	adds	r2, #16
  401dbe:	42b2      	cmp	r2, r6
  401dc0:	d1f8      	bne.n	401db4 <memset+0x44>
  401dc2:	f004 040f 	and.w	r4, r4, #15
  401dc6:	3701      	adds	r7, #1
  401dc8:	2c03      	cmp	r4, #3
  401dca:	eb03 1307 	add.w	r3, r3, r7, lsl #4
  401dce:	d90d      	bls.n	401dec <memset+0x7c>
  401dd0:	461e      	mov	r6, r3
  401dd2:	4622      	mov	r2, r4
  401dd4:	3a04      	subs	r2, #4
  401dd6:	2a03      	cmp	r2, #3
  401dd8:	f846 5b04 	str.w	r5, [r6], #4
  401ddc:	d8fa      	bhi.n	401dd4 <memset+0x64>
  401dde:	1f22      	subs	r2, r4, #4
  401de0:	f022 0203 	bic.w	r2, r2, #3
  401de4:	3204      	adds	r2, #4
  401de6:	4413      	add	r3, r2
  401de8:	f004 0403 	and.w	r4, r4, #3
  401dec:	b12c      	cbz	r4, 401dfa <memset+0x8a>
  401dee:	b2c9      	uxtb	r1, r1
  401df0:	441c      	add	r4, r3
  401df2:	f803 1b01 	strb.w	r1, [r3], #1
  401df6:	42a3      	cmp	r3, r4
  401df8:	d1fb      	bne.n	401df2 <memset+0x82>
  401dfa:	bcf0      	pop	{r4, r5, r6, r7}
  401dfc:	4770      	bx	lr
  401dfe:	4614      	mov	r4, r2
  401e00:	4603      	mov	r3, r0
  401e02:	e7c6      	b.n	401d92 <memset+0x22>

00401e04 <snprintf>:
  401e04:	b40c      	push	{r2, r3}
  401e06:	b5f0      	push	{r4, r5, r6, r7, lr}
  401e08:	4b17      	ldr	r3, [pc, #92]	; (401e68 <snprintf+0x64>)
  401e0a:	1e0c      	subs	r4, r1, #0
  401e0c:	b09d      	sub	sp, #116	; 0x74
  401e0e:	681f      	ldr	r7, [r3, #0]
  401e10:	db24      	blt.n	401e5c <snprintf+0x58>
  401e12:	f44f 7302 	mov.w	r3, #520	; 0x208
  401e16:	ad23      	add	r5, sp, #140	; 0x8c
  401e18:	bf14      	ite	ne
  401e1a:	f104 36ff 	addne.w	r6, r4, #4294967295
  401e1e:	4626      	moveq	r6, r4
  401e20:	9002      	str	r0, [sp, #8]
  401e22:	9006      	str	r0, [sp, #24]
  401e24:	f8ad 3014 	strh.w	r3, [sp, #20]
  401e28:	f64f 7eff 	movw	lr, #65535	; 0xffff
  401e2c:	462b      	mov	r3, r5
  401e2e:	4638      	mov	r0, r7
  401e30:	a902      	add	r1, sp, #8
  401e32:	9a22      	ldr	r2, [sp, #136]	; 0x88
  401e34:	9604      	str	r6, [sp, #16]
  401e36:	9607      	str	r6, [sp, #28]
  401e38:	9501      	str	r5, [sp, #4]
  401e3a:	f8ad e016 	strh.w	lr, [sp, #22]
  401e3e:	f000 f815 	bl	401e6c <_svfprintf_r>
  401e42:	1c43      	adds	r3, r0, #1
  401e44:	bfbc      	itt	lt
  401e46:	238b      	movlt	r3, #139	; 0x8b
  401e48:	603b      	strlt	r3, [r7, #0]
  401e4a:	b114      	cbz	r4, 401e52 <snprintf+0x4e>
  401e4c:	9b02      	ldr	r3, [sp, #8]
  401e4e:	2200      	movs	r2, #0
  401e50:	701a      	strb	r2, [r3, #0]
  401e52:	b01d      	add	sp, #116	; 0x74
  401e54:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401e58:	b002      	add	sp, #8
  401e5a:	4770      	bx	lr
  401e5c:	238b      	movs	r3, #139	; 0x8b
  401e5e:	603b      	str	r3, [r7, #0]
  401e60:	f04f 30ff 	mov.w	r0, #4294967295
  401e64:	e7f5      	b.n	401e52 <snprintf+0x4e>
  401e66:	bf00      	nop
  401e68:	20000510 	.word	0x20000510

00401e6c <_svfprintf_r>:
  401e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401e70:	b0c9      	sub	sp, #292	; 0x124
  401e72:	9310      	str	r3, [sp, #64]	; 0x40
  401e74:	910c      	str	r1, [sp, #48]	; 0x30
  401e76:	4691      	mov	r9, r2
  401e78:	900d      	str	r0, [sp, #52]	; 0x34
  401e7a:	f002 fb5f 	bl	40453c <_localeconv_r>
  401e7e:	6800      	ldr	r0, [r0, #0]
  401e80:	9015      	str	r0, [sp, #84]	; 0x54
  401e82:	f003 fc49 	bl	405718 <strlen>
  401e86:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401e88:	9018      	str	r0, [sp, #96]	; 0x60
  401e8a:	89a3      	ldrh	r3, [r4, #12]
  401e8c:	061e      	lsls	r6, r3, #24
  401e8e:	d503      	bpl.n	401e98 <_svfprintf_r+0x2c>
  401e90:	6923      	ldr	r3, [r4, #16]
  401e92:	2b00      	cmp	r3, #0
  401e94:	f001 8081 	beq.w	402f9a <_svfprintf_r+0x112e>
  401e98:	ac38      	add	r4, sp, #224	; 0xe0
  401e9a:	46a4      	mov	ip, r4
  401e9c:	9408      	str	r4, [sp, #32]
  401e9e:	942b      	str	r4, [sp, #172]	; 0xac
  401ea0:	2500      	movs	r5, #0
  401ea2:	2400      	movs	r4, #0
  401ea4:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
  401ea8:	2300      	movs	r3, #0
  401eaa:	9311      	str	r3, [sp, #68]	; 0x44
  401eac:	932d      	str	r3, [sp, #180]	; 0xb4
  401eae:	932c      	str	r3, [sp, #176]	; 0xb0
  401eb0:	931a      	str	r3, [sp, #104]	; 0x68
  401eb2:	9319      	str	r3, [sp, #100]	; 0x64
  401eb4:	930e      	str	r3, [sp, #56]	; 0x38
  401eb6:	4666      	mov	r6, ip
  401eb8:	f899 3000 	ldrb.w	r3, [r9]
  401ebc:	2b00      	cmp	r3, #0
  401ebe:	f000 80f8 	beq.w	4020b2 <_svfprintf_r+0x246>
  401ec2:	2b25      	cmp	r3, #37	; 0x25
  401ec4:	f000 80f5 	beq.w	4020b2 <_svfprintf_r+0x246>
  401ec8:	f109 0201 	add.w	r2, r9, #1
  401ecc:	e001      	b.n	401ed2 <_svfprintf_r+0x66>
  401ece:	2b25      	cmp	r3, #37	; 0x25
  401ed0:	d004      	beq.n	401edc <_svfprintf_r+0x70>
  401ed2:	7813      	ldrb	r3, [r2, #0]
  401ed4:	4614      	mov	r4, r2
  401ed6:	3201      	adds	r2, #1
  401ed8:	2b00      	cmp	r3, #0
  401eda:	d1f8      	bne.n	401ece <_svfprintf_r+0x62>
  401edc:	ebc9 0504 	rsb	r5, r9, r4
  401ee0:	b17d      	cbz	r5, 401f02 <_svfprintf_r+0x96>
  401ee2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  401ee4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
  401ee6:	3301      	adds	r3, #1
  401ee8:	442a      	add	r2, r5
  401eea:	2b07      	cmp	r3, #7
  401eec:	f8c6 9000 	str.w	r9, [r6]
  401ef0:	6075      	str	r5, [r6, #4]
  401ef2:	922d      	str	r2, [sp, #180]	; 0xb4
  401ef4:	932c      	str	r3, [sp, #176]	; 0xb0
  401ef6:	f300 80c2 	bgt.w	40207e <_svfprintf_r+0x212>
  401efa:	3608      	adds	r6, #8
  401efc:	980e      	ldr	r0, [sp, #56]	; 0x38
  401efe:	4428      	add	r0, r5
  401f00:	900e      	str	r0, [sp, #56]	; 0x38
  401f02:	7823      	ldrb	r3, [r4, #0]
  401f04:	2b00      	cmp	r3, #0
  401f06:	f000 80c2 	beq.w	40208e <_svfprintf_r+0x222>
  401f0a:	2300      	movs	r3, #0
  401f0c:	f894 8001 	ldrb.w	r8, [r4, #1]
  401f10:	461a      	mov	r2, r3
  401f12:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
  401f16:	930f      	str	r3, [sp, #60]	; 0x3c
  401f18:	9309      	str	r3, [sp, #36]	; 0x24
  401f1a:	f104 0901 	add.w	r9, r4, #1
  401f1e:	f04f 34ff 	mov.w	r4, #4294967295
  401f22:	940a      	str	r4, [sp, #40]	; 0x28
  401f24:	f109 0901 	add.w	r9, r9, #1
  401f28:	f1a8 0320 	sub.w	r3, r8, #32
  401f2c:	2b58      	cmp	r3, #88	; 0x58
  401f2e:	f200 83c5 	bhi.w	4026bc <_svfprintf_r+0x850>
  401f32:	e8df f013 	tbh	[pc, r3, lsl #1]
  401f36:	026a      	.short	0x026a
  401f38:	03c303c3 	.word	0x03c303c3
  401f3c:	03c30271 	.word	0x03c30271
  401f40:	03c303c3 	.word	0x03c303c3
  401f44:	03c303c3 	.word	0x03c303c3
  401f48:	031403c3 	.word	0x031403c3
  401f4c:	03c30366 	.word	0x03c30366
  401f50:	00c0009d 	.word	0x00c0009d
  401f54:	027803c3 	.word	0x027803c3
  401f58:	027f027f 	.word	0x027f027f
  401f5c:	027f027f 	.word	0x027f027f
  401f60:	027f027f 	.word	0x027f027f
  401f64:	027f027f 	.word	0x027f027f
  401f68:	03c3027f 	.word	0x03c3027f
  401f6c:	03c303c3 	.word	0x03c303c3
  401f70:	03c303c3 	.word	0x03c303c3
  401f74:	03c303c3 	.word	0x03c303c3
  401f78:	03c303c3 	.word	0x03c303c3
  401f7c:	029003c3 	.word	0x029003c3
  401f80:	03c30371 	.word	0x03c30371
  401f84:	03c30371 	.word	0x03c30371
  401f88:	03c303c3 	.word	0x03c303c3
  401f8c:	036a03c3 	.word	0x036a03c3
  401f90:	03c303c3 	.word	0x03c303c3
  401f94:	03c30078 	.word	0x03c30078
  401f98:	03c303c3 	.word	0x03c303c3
  401f9c:	03c303c3 	.word	0x03c303c3
  401fa0:	03c30059 	.word	0x03c30059
  401fa4:	02af03c3 	.word	0x02af03c3
  401fa8:	03c303c3 	.word	0x03c303c3
  401fac:	03c303c3 	.word	0x03c303c3
  401fb0:	03c303c3 	.word	0x03c303c3
  401fb4:	03c303c3 	.word	0x03c303c3
  401fb8:	03c303c3 	.word	0x03c303c3
  401fbc:	03480337 	.word	0x03480337
  401fc0:	03710371 	.word	0x03710371
  401fc4:	02ff0371 	.word	0x02ff0371
  401fc8:	03c30348 	.word	0x03c30348
  401fcc:	030803c3 	.word	0x030803c3
  401fd0:	02c503c3 	.word	0x02c503c3
  401fd4:	0320007c 	.word	0x0320007c
  401fd8:	03c303a3 	.word	0x03c303a3
  401fdc:	03c302d9 	.word	0x03c302d9
  401fe0:	03c3005f 	.word	0x03c3005f
  401fe4:	00de03c3 	.word	0x00de03c3
  401fe8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  401fec:	f04c 0c10 	orr.w	ip, ip, #16
  401ff0:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  401ff4:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401ff6:	06a2      	lsls	r2, r4, #26
  401ff8:	f100 8354 	bmi.w	4026a4 <_svfprintf_r+0x838>
  401ffc:	9c09      	ldr	r4, [sp, #36]	; 0x24
  401ffe:	06e3      	lsls	r3, r4, #27
  402000:	f100 85bd 	bmi.w	402b7e <_svfprintf_r+0xd12>
  402004:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402008:	f01c 0f40 	tst.w	ip, #64	; 0x40
  40200c:	f000 85b7 	beq.w	402b7e <_svfprintf_r+0xd12>
  402010:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  402014:	2500      	movs	r5, #0
  402016:	f8bc 4000 	ldrh.w	r4, [ip]
  40201a:	f10c 0c04 	add.w	ip, ip, #4
  40201e:	2301      	movs	r3, #1
  402020:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  402024:	e08c      	b.n	402140 <_svfprintf_r+0x2d4>
  402026:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402028:	f045 0510 	orr.w	r5, r5, #16
  40202c:	9509      	str	r5, [sp, #36]	; 0x24
  40202e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402032:	f01c 0320 	ands.w	r3, ip, #32
  402036:	f040 832a 	bne.w	40268e <_svfprintf_r+0x822>
  40203a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  40203e:	f01c 0210 	ands.w	r2, ip, #16
  402042:	f040 85a4 	bne.w	402b8e <_svfprintf_r+0xd22>
  402046:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  40204a:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
  40204e:	f000 859e 	beq.w	402b8e <_svfprintf_r+0xd22>
  402052:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  402056:	4613      	mov	r3, r2
  402058:	f8bc 4000 	ldrh.w	r4, [ip]
  40205c:	f10c 0c04 	add.w	ip, ip, #4
  402060:	2500      	movs	r5, #0
  402062:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  402066:	e06b      	b.n	402140 <_svfprintf_r+0x2d4>
  402068:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  40206a:	9310      	str	r3, [sp, #64]	; 0x40
  40206c:	4264      	negs	r4, r4
  40206e:	940f      	str	r4, [sp, #60]	; 0x3c
  402070:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402072:	f045 0504 	orr.w	r5, r5, #4
  402076:	9509      	str	r5, [sp, #36]	; 0x24
  402078:	f899 8000 	ldrb.w	r8, [r9]
  40207c:	e752      	b.n	401f24 <_svfprintf_r+0xb8>
  40207e:	980d      	ldr	r0, [sp, #52]	; 0x34
  402080:	990c      	ldr	r1, [sp, #48]	; 0x30
  402082:	aa2b      	add	r2, sp, #172	; 0xac
  402084:	f003 fb78 	bl	405778 <__ssprint_r>
  402088:	b940      	cbnz	r0, 40209c <_svfprintf_r+0x230>
  40208a:	ae38      	add	r6, sp, #224	; 0xe0
  40208c:	e736      	b.n	401efc <_svfprintf_r+0x90>
  40208e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
  402090:	b123      	cbz	r3, 40209c <_svfprintf_r+0x230>
  402092:	980d      	ldr	r0, [sp, #52]	; 0x34
  402094:	990c      	ldr	r1, [sp, #48]	; 0x30
  402096:	aa2b      	add	r2, sp, #172	; 0xac
  402098:	f003 fb6e 	bl	405778 <__ssprint_r>
  40209c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40209e:	980e      	ldr	r0, [sp, #56]	; 0x38
  4020a0:	89a3      	ldrh	r3, [r4, #12]
  4020a2:	f013 0f40 	tst.w	r3, #64	; 0x40
  4020a6:	bf18      	it	ne
  4020a8:	f04f 30ff 	movne.w	r0, #4294967295
  4020ac:	b049      	add	sp, #292	; 0x124
  4020ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4020b2:	464c      	mov	r4, r9
  4020b4:	e725      	b.n	401f02 <_svfprintf_r+0x96>
  4020b6:	f899 8000 	ldrb.w	r8, [r9]
  4020ba:	f109 0001 	add.w	r0, r9, #1
  4020be:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
  4020c2:	f001 810c 	beq.w	4032de <_svfprintf_r+0x1472>
  4020c6:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  4020ca:	2b09      	cmp	r3, #9
  4020cc:	bf98      	it	ls
  4020ce:	2100      	movls	r1, #0
  4020d0:	f201 806b 	bhi.w	4031aa <_svfprintf_r+0x133e>
  4020d4:	f810 8b01 	ldrb.w	r8, [r0], #1
  4020d8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4020dc:	eb03 0141 	add.w	r1, r3, r1, lsl #1
  4020e0:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  4020e4:	2b09      	cmp	r3, #9
  4020e6:	d9f5      	bls.n	4020d4 <_svfprintf_r+0x268>
  4020e8:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
  4020ec:	910a      	str	r1, [sp, #40]	; 0x28
  4020ee:	4681      	mov	r9, r0
  4020f0:	e71a      	b.n	401f28 <_svfprintf_r+0xbc>
  4020f2:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4020f4:	4ca1      	ldr	r4, [pc, #644]	; (40237c <_svfprintf_r+0x510>)
  4020f6:	06af      	lsls	r7, r5, #26
  4020f8:	941a      	str	r4, [sp, #104]	; 0x68
  4020fa:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  4020fe:	f140 81d1 	bpl.w	4024a4 <_svfprintf_r+0x638>
  402102:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  402106:	f10c 0307 	add.w	r3, ip, #7
  40210a:	f023 0307 	bic.w	r3, r3, #7
  40210e:	f103 0408 	add.w	r4, r3, #8
  402112:	9410      	str	r4, [sp, #64]	; 0x40
  402114:	e9d3 4500 	ldrd	r4, r5, [r3]
  402118:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  40211c:	f01c 0f01 	tst.w	ip, #1
  402120:	f000 8462 	beq.w	4029e8 <_svfprintf_r+0xb7c>
  402124:	ea54 0005 	orrs.w	r0, r4, r5
  402128:	f000 845e 	beq.w	4029e8 <_svfprintf_r+0xb7c>
  40212c:	2330      	movs	r3, #48	; 0x30
  40212e:	f04c 0c02 	orr.w	ip, ip, #2
  402132:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
  402136:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
  40213a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  40213e:	2302      	movs	r3, #2
  402140:	f04f 0a00 	mov.w	sl, #0
  402144:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
  402148:	990a      	ldr	r1, [sp, #40]	; 0x28
  40214a:	2900      	cmp	r1, #0
  40214c:	db05      	blt.n	40215a <_svfprintf_r+0x2ee>
  40214e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402152:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
  402156:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  40215a:	ea54 0005 	orrs.w	r0, r4, r5
  40215e:	f040 82c5 	bne.w	4026ec <_svfprintf_r+0x880>
  402162:	990a      	ldr	r1, [sp, #40]	; 0x28
  402164:	2900      	cmp	r1, #0
  402166:	f040 82c1 	bne.w	4026ec <_svfprintf_r+0x880>
  40216a:	2b00      	cmp	r3, #0
  40216c:	f040 8438 	bne.w	4029e0 <_svfprintf_r+0xb74>
  402170:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402174:	f01c 0f01 	tst.w	ip, #1
  402178:	f000 8432 	beq.w	4029e0 <_svfprintf_r+0xb74>
  40217c:	af48      	add	r7, sp, #288	; 0x120
  40217e:	2330      	movs	r3, #48	; 0x30
  402180:	9d08      	ldr	r5, [sp, #32]
  402182:	f807 3d41 	strb.w	r3, [r7, #-65]!
  402186:	1bec      	subs	r4, r5, r7
  402188:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
  40218c:	2500      	movs	r5, #0
  40218e:	4564      	cmp	r4, ip
  402190:	bfa8      	it	ge
  402192:	46a4      	movge	ip, r4
  402194:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  402198:	9514      	str	r5, [sp, #80]	; 0x50
  40219a:	f1ba 0f00 	cmp.w	sl, #0
  40219e:	d002      	beq.n	4021a6 <_svfprintf_r+0x33a>
  4021a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4021a2:	3501      	adds	r5, #1
  4021a4:	950b      	str	r5, [sp, #44]	; 0x2c
  4021a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4021a8:	f013 0302 	ands.w	r3, r3, #2
  4021ac:	9312      	str	r3, [sp, #72]	; 0x48
  4021ae:	d002      	beq.n	4021b6 <_svfprintf_r+0x34a>
  4021b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4021b2:	3502      	adds	r5, #2
  4021b4:	950b      	str	r5, [sp, #44]	; 0x2c
  4021b6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  4021ba:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
  4021be:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
  4021c2:	f040 8290 	bne.w	4026e6 <_svfprintf_r+0x87a>
  4021c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021c8:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
  4021cc:	ebcc 0b05 	rsb	fp, ip, r5
  4021d0:	f1bb 0f00 	cmp.w	fp, #0
  4021d4:	f340 8287 	ble.w	4026e6 <_svfprintf_r+0x87a>
  4021d8:	f1bb 0f10 	cmp.w	fp, #16
  4021dc:	992d      	ldr	r1, [sp, #180]	; 0xb4
  4021de:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
  4021e0:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 402384 <_svfprintf_r+0x518>
  4021e4:	dd2c      	ble.n	402240 <_svfprintf_r+0x3d4>
  4021e6:	971b      	str	r7, [sp, #108]	; 0x6c
  4021e8:	4630      	mov	r0, r6
  4021ea:	4657      	mov	r7, sl
  4021ec:	2510      	movs	r5, #16
  4021ee:	46ca      	mov	sl, r9
  4021f0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  4021f2:	46a1      	mov	r9, r4
  4021f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  4021f6:	e006      	b.n	402206 <_svfprintf_r+0x39a>
  4021f8:	f1ab 0b10 	sub.w	fp, fp, #16
  4021fc:	f1bb 0f10 	cmp.w	fp, #16
  402200:	f100 0008 	add.w	r0, r0, #8
  402204:	dd17      	ble.n	402236 <_svfprintf_r+0x3ca>
  402206:	3201      	adds	r2, #1
  402208:	3110      	adds	r1, #16
  40220a:	2a07      	cmp	r2, #7
  40220c:	912d      	str	r1, [sp, #180]	; 0xb4
  40220e:	922c      	str	r2, [sp, #176]	; 0xb0
  402210:	6007      	str	r7, [r0, #0]
  402212:	6045      	str	r5, [r0, #4]
  402214:	ddf0      	ble.n	4021f8 <_svfprintf_r+0x38c>
  402216:	4620      	mov	r0, r4
  402218:	4631      	mov	r1, r6
  40221a:	aa2b      	add	r2, sp, #172	; 0xac
  40221c:	f003 faac 	bl	405778 <__ssprint_r>
  402220:	2800      	cmp	r0, #0
  402222:	f47f af3b 	bne.w	40209c <_svfprintf_r+0x230>
  402226:	f1ab 0b10 	sub.w	fp, fp, #16
  40222a:	f1bb 0f10 	cmp.w	fp, #16
  40222e:	992d      	ldr	r1, [sp, #180]	; 0xb4
  402230:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
  402232:	a838      	add	r0, sp, #224	; 0xe0
  402234:	dce7      	bgt.n	402206 <_svfprintf_r+0x39a>
  402236:	464c      	mov	r4, r9
  402238:	46d1      	mov	r9, sl
  40223a:	46ba      	mov	sl, r7
  40223c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
  40223e:	4606      	mov	r6, r0
  402240:	3201      	adds	r2, #1
  402242:	eb0b 0c01 	add.w	ip, fp, r1
  402246:	2a07      	cmp	r2, #7
  402248:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  40224c:	922c      	str	r2, [sp, #176]	; 0xb0
  40224e:	e886 0c00 	stmia.w	r6, {sl, fp}
  402252:	f300 841a 	bgt.w	402a8a <_svfprintf_r+0xc1e>
  402256:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  40225a:	3608      	adds	r6, #8
  40225c:	f1ba 0f00 	cmp.w	sl, #0
  402260:	d00f      	beq.n	402282 <_svfprintf_r+0x416>
  402262:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402264:	f10c 0c01 	add.w	ip, ip, #1
  402268:	3301      	adds	r3, #1
  40226a:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
  40226e:	2201      	movs	r2, #1
  402270:	2b07      	cmp	r3, #7
  402272:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402276:	932c      	str	r3, [sp, #176]	; 0xb0
  402278:	e886 0006 	stmia.w	r6, {r1, r2}
  40227c:	f300 83a4 	bgt.w	4029c8 <_svfprintf_r+0xb5c>
  402280:	3608      	adds	r6, #8
  402282:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402284:	b173      	cbz	r3, 4022a4 <_svfprintf_r+0x438>
  402286:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402288:	f10c 0c02 	add.w	ip, ip, #2
  40228c:	3301      	adds	r3, #1
  40228e:	a924      	add	r1, sp, #144	; 0x90
  402290:	2202      	movs	r2, #2
  402292:	2b07      	cmp	r3, #7
  402294:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402298:	932c      	str	r3, [sp, #176]	; 0xb0
  40229a:	e886 0006 	stmia.w	r6, {r1, r2}
  40229e:	f300 8387 	bgt.w	4029b0 <_svfprintf_r+0xb44>
  4022a2:	3608      	adds	r6, #8
  4022a4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
  4022a6:	2d80      	cmp	r5, #128	; 0x80
  4022a8:	f000 82ca 	beq.w	402840 <_svfprintf_r+0x9d4>
  4022ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4022ae:	ebc4 0a05 	rsb	sl, r4, r5
  4022b2:	f1ba 0f00 	cmp.w	sl, #0
  4022b6:	dd3b      	ble.n	402330 <_svfprintf_r+0x4c4>
  4022b8:	f1ba 0f10 	cmp.w	sl, #16
  4022bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4022be:	4d30      	ldr	r5, [pc, #192]	; (402380 <_svfprintf_r+0x514>)
  4022c0:	dd2b      	ble.n	40231a <_svfprintf_r+0x4ae>
  4022c2:	940a      	str	r4, [sp, #40]	; 0x28
  4022c4:	4632      	mov	r2, r6
  4022c6:	f04f 0b10 	mov.w	fp, #16
  4022ca:	462e      	mov	r6, r5
  4022cc:	4661      	mov	r1, ip
  4022ce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  4022d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  4022d2:	e006      	b.n	4022e2 <_svfprintf_r+0x476>
  4022d4:	f1aa 0a10 	sub.w	sl, sl, #16
  4022d8:	f1ba 0f10 	cmp.w	sl, #16
  4022dc:	f102 0208 	add.w	r2, r2, #8
  4022e0:	dd17      	ble.n	402312 <_svfprintf_r+0x4a6>
  4022e2:	3301      	adds	r3, #1
  4022e4:	3110      	adds	r1, #16
  4022e6:	2b07      	cmp	r3, #7
  4022e8:	912d      	str	r1, [sp, #180]	; 0xb4
  4022ea:	932c      	str	r3, [sp, #176]	; 0xb0
  4022ec:	e882 0840 	stmia.w	r2, {r6, fp}
  4022f0:	ddf0      	ble.n	4022d4 <_svfprintf_r+0x468>
  4022f2:	4620      	mov	r0, r4
  4022f4:	4629      	mov	r1, r5
  4022f6:	aa2b      	add	r2, sp, #172	; 0xac
  4022f8:	f003 fa3e 	bl	405778 <__ssprint_r>
  4022fc:	2800      	cmp	r0, #0
  4022fe:	f47f aecd 	bne.w	40209c <_svfprintf_r+0x230>
  402302:	f1aa 0a10 	sub.w	sl, sl, #16
  402306:	f1ba 0f10 	cmp.w	sl, #16
  40230a:	992d      	ldr	r1, [sp, #180]	; 0xb4
  40230c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  40230e:	aa38      	add	r2, sp, #224	; 0xe0
  402310:	dce7      	bgt.n	4022e2 <_svfprintf_r+0x476>
  402312:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402314:	4635      	mov	r5, r6
  402316:	468c      	mov	ip, r1
  402318:	4616      	mov	r6, r2
  40231a:	3301      	adds	r3, #1
  40231c:	44d4      	add	ip, sl
  40231e:	2b07      	cmp	r3, #7
  402320:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402324:	932c      	str	r3, [sp, #176]	; 0xb0
  402326:	e886 0420 	stmia.w	r6, {r5, sl}
  40232a:	f300 8335 	bgt.w	402998 <_svfprintf_r+0xb2c>
  40232e:	3608      	adds	r6, #8
  402330:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402332:	05ed      	lsls	r5, r5, #23
  402334:	f100 8224 	bmi.w	402780 <_svfprintf_r+0x914>
  402338:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  40233a:	44a4      	add	ip, r4
  40233c:	3301      	adds	r3, #1
  40233e:	2b07      	cmp	r3, #7
  402340:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402344:	6037      	str	r7, [r6, #0]
  402346:	6074      	str	r4, [r6, #4]
  402348:	932c      	str	r3, [sp, #176]	; 0xb0
  40234a:	f300 830f 	bgt.w	40296c <_svfprintf_r+0xb00>
  40234e:	3608      	adds	r6, #8
  402350:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402352:	0763      	lsls	r3, r4, #29
  402354:	d549      	bpl.n	4023ea <_svfprintf_r+0x57e>
  402356:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402358:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40235a:	1a2c      	subs	r4, r5, r0
  40235c:	2c00      	cmp	r4, #0
  40235e:	dd44      	ble.n	4023ea <_svfprintf_r+0x57e>
  402360:	2c10      	cmp	r4, #16
  402362:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402364:	f8df a01c 	ldr.w	sl, [pc, #28]	; 402384 <_svfprintf_r+0x518>
  402368:	dd2b      	ble.n	4023c2 <_svfprintf_r+0x556>
  40236a:	4657      	mov	r7, sl
  40236c:	2510      	movs	r5, #16
  40236e:	4662      	mov	r2, ip
  402370:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
  402374:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
  402378:	e00b      	b.n	402392 <_svfprintf_r+0x526>
  40237a:	bf00      	nop
  40237c:	00406ca8 	.word	0x00406ca8
  402380:	00406c74 	.word	0x00406c74
  402384:	00406cc8 	.word	0x00406cc8
  402388:	3c10      	subs	r4, #16
  40238a:	2c10      	cmp	r4, #16
  40238c:	f106 0608 	add.w	r6, r6, #8
  402390:	dd15      	ble.n	4023be <_svfprintf_r+0x552>
  402392:	3301      	adds	r3, #1
  402394:	3210      	adds	r2, #16
  402396:	2b07      	cmp	r3, #7
  402398:	922d      	str	r2, [sp, #180]	; 0xb4
  40239a:	932c      	str	r3, [sp, #176]	; 0xb0
  40239c:	6037      	str	r7, [r6, #0]
  40239e:	6075      	str	r5, [r6, #4]
  4023a0:	ddf2      	ble.n	402388 <_svfprintf_r+0x51c>
  4023a2:	4650      	mov	r0, sl
  4023a4:	4641      	mov	r1, r8
  4023a6:	aa2b      	add	r2, sp, #172	; 0xac
  4023a8:	f003 f9e6 	bl	405778 <__ssprint_r>
  4023ac:	2800      	cmp	r0, #0
  4023ae:	f47f ae75 	bne.w	40209c <_svfprintf_r+0x230>
  4023b2:	3c10      	subs	r4, #16
  4023b4:	2c10      	cmp	r4, #16
  4023b6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
  4023b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4023ba:	ae38      	add	r6, sp, #224	; 0xe0
  4023bc:	dce9      	bgt.n	402392 <_svfprintf_r+0x526>
  4023be:	4694      	mov	ip, r2
  4023c0:	46ba      	mov	sl, r7
  4023c2:	3301      	adds	r3, #1
  4023c4:	44a4      	add	ip, r4
  4023c6:	2b07      	cmp	r3, #7
  4023c8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  4023cc:	932c      	str	r3, [sp, #176]	; 0xb0
  4023ce:	f8c6 a000 	str.w	sl, [r6]
  4023d2:	6074      	str	r4, [r6, #4]
  4023d4:	dd09      	ble.n	4023ea <_svfprintf_r+0x57e>
  4023d6:	980d      	ldr	r0, [sp, #52]	; 0x34
  4023d8:	990c      	ldr	r1, [sp, #48]	; 0x30
  4023da:	aa2b      	add	r2, sp, #172	; 0xac
  4023dc:	f003 f9cc 	bl	405778 <__ssprint_r>
  4023e0:	2800      	cmp	r0, #0
  4023e2:	f47f ae5b 	bne.w	40209c <_svfprintf_r+0x230>
  4023e6:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4023ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4023ec:	980b      	ldr	r0, [sp, #44]	; 0x2c
  4023ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4023f0:	42a8      	cmp	r0, r5
  4023f2:	bfac      	ite	ge
  4023f4:	1824      	addge	r4, r4, r0
  4023f6:	1964      	addlt	r4, r4, r5
  4023f8:	940e      	str	r4, [sp, #56]	; 0x38
  4023fa:	f1bc 0f00 	cmp.w	ip, #0
  4023fe:	f040 82c1 	bne.w	402984 <_svfprintf_r+0xb18>
  402402:	2300      	movs	r3, #0
  402404:	932c      	str	r3, [sp, #176]	; 0xb0
  402406:	ae38      	add	r6, sp, #224	; 0xe0
  402408:	e556      	b.n	401eb8 <_svfprintf_r+0x4c>
  40240a:	f899 8000 	ldrb.w	r8, [r9]
  40240e:	2a00      	cmp	r2, #0
  402410:	f47f ad88 	bne.w	401f24 <_svfprintf_r+0xb8>
  402414:	2220      	movs	r2, #32
  402416:	e585      	b.n	401f24 <_svfprintf_r+0xb8>
  402418:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40241a:	f045 0501 	orr.w	r5, r5, #1
  40241e:	9509      	str	r5, [sp, #36]	; 0x24
  402420:	f899 8000 	ldrb.w	r8, [r9]
  402424:	e57e      	b.n	401f24 <_svfprintf_r+0xb8>
  402426:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402428:	f045 0580 	orr.w	r5, r5, #128	; 0x80
  40242c:	9509      	str	r5, [sp, #36]	; 0x24
  40242e:	f899 8000 	ldrb.w	r8, [r9]
  402432:	e577      	b.n	401f24 <_svfprintf_r+0xb8>
  402434:	2400      	movs	r4, #0
  402436:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  40243a:	940f      	str	r4, [sp, #60]	; 0x3c
  40243c:	4621      	mov	r1, r4
  40243e:	f819 8b01 	ldrb.w	r8, [r9], #1
  402442:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  402446:	eb03 0141 	add.w	r1, r3, r1, lsl #1
  40244a:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
  40244e:	2b09      	cmp	r3, #9
  402450:	d9f5      	bls.n	40243e <_svfprintf_r+0x5d2>
  402452:	910f      	str	r1, [sp, #60]	; 0x3c
  402454:	e568      	b.n	401f28 <_svfprintf_r+0xbc>
  402456:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  40245a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  40245e:	f04c 0c10 	orr.w	ip, ip, #16
  402462:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  402466:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402468:	06a5      	lsls	r5, r4, #26
  40246a:	f140 80b2 	bpl.w	4025d2 <_svfprintf_r+0x766>
  40246e:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402470:	1de9      	adds	r1, r5, #7
  402472:	f021 0107 	bic.w	r1, r1, #7
  402476:	e9d1 2300 	ldrd	r2, r3, [r1]
  40247a:	3108      	adds	r1, #8
  40247c:	9110      	str	r1, [sp, #64]	; 0x40
  40247e:	4614      	mov	r4, r2
  402480:	461d      	mov	r5, r3
  402482:	2a00      	cmp	r2, #0
  402484:	f173 0c00 	sbcs.w	ip, r3, #0
  402488:	f2c0 8394 	blt.w	402bb4 <_svfprintf_r+0xd48>
  40248c:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402490:	2301      	movs	r3, #1
  402492:	e659      	b.n	402148 <_svfprintf_r+0x2dc>
  402494:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402496:	4cb6      	ldr	r4, [pc, #728]	; (402770 <_svfprintf_r+0x904>)
  402498:	06af      	lsls	r7, r5, #26
  40249a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  40249e:	941a      	str	r4, [sp, #104]	; 0x68
  4024a0:	f53f ae2f 	bmi.w	402102 <_svfprintf_r+0x296>
  4024a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4024a6:	06ed      	lsls	r5, r5, #27
  4024a8:	f140 8443 	bpl.w	402d32 <_svfprintf_r+0xec6>
  4024ac:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  4024b0:	2500      	movs	r5, #0
  4024b2:	f8dc 4000 	ldr.w	r4, [ip]
  4024b6:	f10c 0c04 	add.w	ip, ip, #4
  4024ba:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  4024be:	e62b      	b.n	402118 <_svfprintf_r+0x2ac>
  4024c0:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  4024c4:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  4024c8:	f01c 0f20 	tst.w	ip, #32
  4024cc:	f000 8440 	beq.w	402d50 <_svfprintf_r+0xee4>
  4024d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
  4024d2:	6821      	ldr	r1, [r4, #0]
  4024d4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  4024d6:	17e5      	asrs	r5, r4, #31
  4024d8:	462b      	mov	r3, r5
  4024da:	9d10      	ldr	r5, [sp, #64]	; 0x40
  4024dc:	4622      	mov	r2, r4
  4024de:	3504      	adds	r5, #4
  4024e0:	9510      	str	r5, [sp, #64]	; 0x40
  4024e2:	e9c1 2300 	strd	r2, r3, [r1]
  4024e6:	e4e7      	b.n	401eb8 <_svfprintf_r+0x4c>
  4024e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
  4024ea:	f04f 0a00 	mov.w	sl, #0
  4024ee:	6827      	ldr	r7, [r4, #0]
  4024f0:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
  4024f4:	1d25      	adds	r5, r4, #4
  4024f6:	2f00      	cmp	r7, #0
  4024f8:	f000 85e9 	beq.w	4030ce <_svfprintf_r+0x1262>
  4024fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4024fe:	4638      	mov	r0, r7
  402500:	2c00      	cmp	r4, #0
  402502:	f2c0 859b 	blt.w	40303c <_svfprintf_r+0x11d0>
  402506:	4651      	mov	r1, sl
  402508:	4622      	mov	r2, r4
  40250a:	f002 fab7 	bl	404a7c <memchr>
  40250e:	2800      	cmp	r0, #0
  402510:	f000 8613 	beq.w	40313a <_svfprintf_r+0x12ce>
  402514:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402516:	1bc0      	subs	r0, r0, r7
  402518:	42a0      	cmp	r0, r4
  40251a:	bfb8      	it	lt
  40251c:	4604      	movlt	r4, r0
  40251e:	9510      	str	r5, [sp, #64]	; 0x40
  402520:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
  402524:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  402528:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
  40252c:	950b      	str	r5, [sp, #44]	; 0x2c
  40252e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402532:	e632      	b.n	40219a <_svfprintf_r+0x32e>
  402534:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402538:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
  40253c:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  402540:	f899 8000 	ldrb.w	r8, [r9]
  402544:	e4ee      	b.n	401f24 <_svfprintf_r+0xb8>
  402546:	f899 8000 	ldrb.w	r8, [r9]
  40254a:	464b      	mov	r3, r9
  40254c:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
  402550:	f000 847f 	beq.w	402e52 <_svfprintf_r+0xfe6>
  402554:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402556:	f045 0510 	orr.w	r5, r5, #16
  40255a:	9509      	str	r5, [sp, #36]	; 0x24
  40255c:	e4e2      	b.n	401f24 <_svfprintf_r+0xb8>
  40255e:	9c10      	ldr	r4, [sp, #64]	; 0x40
  402560:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402562:	6824      	ldr	r4, [r4, #0]
  402564:	1d2b      	adds	r3, r5, #4
  402566:	2c00      	cmp	r4, #0
  402568:	940f      	str	r4, [sp, #60]	; 0x3c
  40256a:	f6ff ad7d 	blt.w	402068 <_svfprintf_r+0x1fc>
  40256e:	9310      	str	r3, [sp, #64]	; 0x40
  402570:	f899 8000 	ldrb.w	r8, [r9]
  402574:	e4d6      	b.n	401f24 <_svfprintf_r+0xb8>
  402576:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402578:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  40257c:	9d10      	ldr	r5, [sp, #64]	; 0x40
  40257e:	487d      	ldr	r0, [pc, #500]	; (402774 <_svfprintf_r+0x908>)
  402580:	3504      	adds	r5, #4
  402582:	681c      	ldr	r4, [r3, #0]
  402584:	f04f 0878 	mov.w	r8, #120	; 0x78
  402588:	2330      	movs	r3, #48	; 0x30
  40258a:	f04c 0c02 	orr.w	ip, ip, #2
  40258e:	9510      	str	r5, [sp, #64]	; 0x40
  402590:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
  402594:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  402598:	2500      	movs	r5, #0
  40259a:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
  40259e:	901a      	str	r0, [sp, #104]	; 0x68
  4025a0:	2302      	movs	r3, #2
  4025a2:	e5cd      	b.n	402140 <_svfprintf_r+0x2d4>
  4025a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4025a6:	9d10      	ldr	r5, [sp, #64]	; 0x40
  4025a8:	681a      	ldr	r2, [r3, #0]
  4025aa:	2401      	movs	r4, #1
  4025ac:	2300      	movs	r3, #0
  4025ae:	3504      	adds	r5, #4
  4025b0:	469a      	mov	sl, r3
  4025b2:	940b      	str	r4, [sp, #44]	; 0x2c
  4025b4:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
  4025b8:	9510      	str	r5, [sp, #64]	; 0x40
  4025ba:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
  4025be:	930a      	str	r3, [sp, #40]	; 0x28
  4025c0:	9314      	str	r3, [sp, #80]	; 0x50
  4025c2:	af2e      	add	r7, sp, #184	; 0xb8
  4025c4:	e5ef      	b.n	4021a6 <_svfprintf_r+0x33a>
  4025c6:	9c09      	ldr	r4, [sp, #36]	; 0x24
  4025c8:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  4025cc:	06a5      	lsls	r5, r4, #26
  4025ce:	f53f af4e 	bmi.w	40246e <_svfprintf_r+0x602>
  4025d2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  4025d6:	f01c 0f10 	tst.w	ip, #16
  4025da:	f040 82df 	bne.w	402b9c <_svfprintf_r+0xd30>
  4025de:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  4025e2:	f01c 0f40 	tst.w	ip, #64	; 0x40
  4025e6:	f000 82d9 	beq.w	402b9c <_svfprintf_r+0xd30>
  4025ea:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  4025ee:	f9bc 4000 	ldrsh.w	r4, [ip]
  4025f2:	f10c 0c04 	add.w	ip, ip, #4
  4025f6:	17e5      	asrs	r5, r4, #31
  4025f8:	4622      	mov	r2, r4
  4025fa:	462b      	mov	r3, r5
  4025fc:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  402600:	e73f      	b.n	402482 <_svfprintf_r+0x616>
  402602:	f899 8000 	ldrb.w	r8, [r9]
  402606:	222b      	movs	r2, #43	; 0x2b
  402608:	e48c      	b.n	401f24 <_svfprintf_r+0xb8>
  40260a:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40260c:	f045 0508 	orr.w	r5, r5, #8
  402610:	9509      	str	r5, [sp, #36]	; 0x24
  402612:	f899 8000 	ldrb.w	r8, [r9]
  402616:	e485      	b.n	401f24 <_svfprintf_r+0xb8>
  402618:	9d10      	ldr	r5, [sp, #64]	; 0x40
  40261a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  40261e:	1deb      	adds	r3, r5, #7
  402620:	f023 0307 	bic.w	r3, r3, #7
  402624:	f103 0c08 	add.w	ip, r3, #8
  402628:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  40262c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402630:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
  402634:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  402638:	f003 f834 	bl	4056a4 <__fpclassifyd>
  40263c:	2801      	cmp	r0, #1
  40263e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  402642:	f040 835c 	bne.w	402cfe <_svfprintf_r+0xe92>
  402646:	2200      	movs	r2, #0
  402648:	2300      	movs	r3, #0
  40264a:	f003 fc0b 	bl	405e64 <__aeabi_dcmplt>
  40264e:	2800      	cmp	r0, #0
  402650:	f040 8563 	bne.w	40311a <_svfprintf_r+0x12ae>
  402654:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402658:	2503      	movs	r5, #3
  40265a:	950b      	str	r5, [sp, #44]	; 0x2c
  40265c:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40265e:	4f46      	ldr	r7, [pc, #280]	; (402778 <_svfprintf_r+0x90c>)
  402660:	f025 0580 	bic.w	r5, r5, #128	; 0x80
  402664:	4b45      	ldr	r3, [pc, #276]	; (40277c <_svfprintf_r+0x910>)
  402666:	2400      	movs	r4, #0
  402668:	9509      	str	r5, [sp, #36]	; 0x24
  40266a:	2500      	movs	r5, #0
  40266c:	940a      	str	r4, [sp, #40]	; 0x28
  40266e:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  402672:	bfd8      	it	le
  402674:	461f      	movle	r7, r3
  402676:	2403      	movs	r4, #3
  402678:	9514      	str	r5, [sp, #80]	; 0x50
  40267a:	e58e      	b.n	40219a <_svfprintf_r+0x32e>
  40267c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402680:	f04c 0c20 	orr.w	ip, ip, #32
  402684:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
  402688:	f899 8000 	ldrb.w	r8, [r9]
  40268c:	e44a      	b.n	401f24 <_svfprintf_r+0xb8>
  40268e:	9c10      	ldr	r4, [sp, #64]	; 0x40
  402690:	1de3      	adds	r3, r4, #7
  402692:	f023 0307 	bic.w	r3, r3, #7
  402696:	f103 0508 	add.w	r5, r3, #8
  40269a:	9510      	str	r5, [sp, #64]	; 0x40
  40269c:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026a0:	2300      	movs	r3, #0
  4026a2:	e54d      	b.n	402140 <_svfprintf_r+0x2d4>
  4026a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
  4026a6:	1deb      	adds	r3, r5, #7
  4026a8:	f023 0307 	bic.w	r3, r3, #7
  4026ac:	f103 0c08 	add.w	ip, r3, #8
  4026b0:	e9d3 4500 	ldrd	r4, r5, [r3]
  4026b4:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  4026b8:	2301      	movs	r3, #1
  4026ba:	e541      	b.n	402140 <_svfprintf_r+0x2d4>
  4026bc:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
  4026c0:	f1b8 0f00 	cmp.w	r8, #0
  4026c4:	f43f ace3 	beq.w	40208e <_svfprintf_r+0x222>
  4026c8:	2300      	movs	r3, #0
  4026ca:	f04f 0c01 	mov.w	ip, #1
  4026ce:	469a      	mov	sl, r3
  4026d0:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  4026d4:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
  4026d8:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
  4026dc:	930a      	str	r3, [sp, #40]	; 0x28
  4026de:	9314      	str	r3, [sp, #80]	; 0x50
  4026e0:	4664      	mov	r4, ip
  4026e2:	af2e      	add	r7, sp, #184	; 0xb8
  4026e4:	e55f      	b.n	4021a6 <_svfprintf_r+0x33a>
  4026e6:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4026ea:	e5b7      	b.n	40225c <_svfprintf_r+0x3f0>
  4026ec:	2b01      	cmp	r3, #1
  4026ee:	f000 80ec 	beq.w	4028ca <_svfprintf_r+0xa5e>
  4026f2:	2b02      	cmp	r3, #2
  4026f4:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
  4026f8:	d118      	bne.n	40272c <_svfprintf_r+0x8c0>
  4026fa:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
  4026fe:	4619      	mov	r1, r3
  402700:	f004 000f 	and.w	r0, r4, #15
  402704:	0922      	lsrs	r2, r4, #4
  402706:	f81c 0000 	ldrb.w	r0, [ip, r0]
  40270a:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
  40270e:	092b      	lsrs	r3, r5, #4
  402710:	7008      	strb	r0, [r1, #0]
  402712:	ea52 0003 	orrs.w	r0, r2, r3
  402716:	460f      	mov	r7, r1
  402718:	4614      	mov	r4, r2
  40271a:	461d      	mov	r5, r3
  40271c:	f101 31ff 	add.w	r1, r1, #4294967295
  402720:	d1ee      	bne.n	402700 <_svfprintf_r+0x894>
  402722:	9d08      	ldr	r5, [sp, #32]
  402724:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
  402728:	1bec      	subs	r4, r5, r7
  40272a:	e52d      	b.n	402188 <_svfprintf_r+0x31c>
  40272c:	08e0      	lsrs	r0, r4, #3
  40272e:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
  402732:	f004 0207 	and.w	r2, r4, #7
  402736:	08e9      	lsrs	r1, r5, #3
  402738:	3230      	adds	r2, #48	; 0x30
  40273a:	ea50 0c01 	orrs.w	ip, r0, r1
  40273e:	461f      	mov	r7, r3
  402740:	701a      	strb	r2, [r3, #0]
  402742:	4604      	mov	r4, r0
  402744:	460d      	mov	r5, r1
  402746:	f103 33ff 	add.w	r3, r3, #4294967295
  40274a:	d1ef      	bne.n	40272c <_svfprintf_r+0x8c0>
  40274c:	9c09      	ldr	r4, [sp, #36]	; 0x24
  40274e:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
  402752:	07e0      	lsls	r0, r4, #31
  402754:	4639      	mov	r1, r7
  402756:	f140 80c1 	bpl.w	4028dc <_svfprintf_r+0xa70>
  40275a:	2a30      	cmp	r2, #48	; 0x30
  40275c:	f000 80be 	beq.w	4028dc <_svfprintf_r+0xa70>
  402760:	9d08      	ldr	r5, [sp, #32]
  402762:	461f      	mov	r7, r3
  402764:	2330      	movs	r3, #48	; 0x30
  402766:	1bec      	subs	r4, r5, r7
  402768:	f801 3c01 	strb.w	r3, [r1, #-1]
  40276c:	e50c      	b.n	402188 <_svfprintf_r+0x31c>
  40276e:	bf00      	nop
  402770:	00406c94 	.word	0x00406c94
  402774:	00406ca8 	.word	0x00406ca8
  402778:	00406c88 	.word	0x00406c88
  40277c:	00406c84 	.word	0x00406c84
  402780:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  402784:	f340 80ad 	ble.w	4028e2 <_svfprintf_r+0xa76>
  402788:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  40278c:	2200      	movs	r2, #0
  40278e:	2300      	movs	r3, #0
  402790:	f8cd c01c 	str.w	ip, [sp, #28]
  402794:	f003 fb5c 	bl	405e50 <__aeabi_dcmpeq>
  402798:	f8dd c01c 	ldr.w	ip, [sp, #28]
  40279c:	2800      	cmp	r0, #0
  40279e:	f000 8126 	beq.w	4029ee <_svfprintf_r+0xb82>
  4027a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4027a4:	49aa      	ldr	r1, [pc, #680]	; (402a50 <_svfprintf_r+0xbe4>)
  4027a6:	3301      	adds	r3, #1
  4027a8:	f10c 0c01 	add.w	ip, ip, #1
  4027ac:	2201      	movs	r2, #1
  4027ae:	2b07      	cmp	r3, #7
  4027b0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  4027b4:	932c      	str	r3, [sp, #176]	; 0xb0
  4027b6:	e886 0006 	stmia.w	r6, {r1, r2}
  4027ba:	f300 82ed 	bgt.w	402d98 <_svfprintf_r+0xf2c>
  4027be:	3608      	adds	r6, #8
  4027c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4027c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
  4027c4:	42a3      	cmp	r3, r4
  4027c6:	db03      	blt.n	4027d0 <_svfprintf_r+0x964>
  4027c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
  4027ca:	07ec      	lsls	r4, r5, #31
  4027cc:	f57f adc0 	bpl.w	402350 <_svfprintf_r+0x4e4>
  4027d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4027d2:	9c18      	ldr	r4, [sp, #96]	; 0x60
  4027d4:	3301      	adds	r3, #1
  4027d6:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4027d8:	44a4      	add	ip, r4
  4027da:	2b07      	cmp	r3, #7
  4027dc:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  4027e0:	6035      	str	r5, [r6, #0]
  4027e2:	6074      	str	r4, [r6, #4]
  4027e4:	932c      	str	r3, [sp, #176]	; 0xb0
  4027e6:	f300 833e 	bgt.w	402e66 <_svfprintf_r+0xffa>
  4027ea:	3608      	adds	r6, #8
  4027ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
  4027ee:	1e6c      	subs	r4, r5, #1
  4027f0:	2c00      	cmp	r4, #0
  4027f2:	f77f adad 	ble.w	402350 <_svfprintf_r+0x4e4>
  4027f6:	2c10      	cmp	r4, #16
  4027f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4027fa:	4d96      	ldr	r5, [pc, #600]	; (402a54 <_svfprintf_r+0xbe8>)
  4027fc:	f340 8197 	ble.w	402b2e <_svfprintf_r+0xcc2>
  402800:	2710      	movs	r7, #16
  402802:	4662      	mov	r2, ip
  402804:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  402808:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
  40280c:	e004      	b.n	402818 <_svfprintf_r+0x9ac>
  40280e:	3608      	adds	r6, #8
  402810:	3c10      	subs	r4, #16
  402812:	2c10      	cmp	r4, #16
  402814:	f340 818a 	ble.w	402b2c <_svfprintf_r+0xcc0>
  402818:	3301      	adds	r3, #1
  40281a:	3210      	adds	r2, #16
  40281c:	2b07      	cmp	r3, #7
  40281e:	922d      	str	r2, [sp, #180]	; 0xb4
  402820:	932c      	str	r3, [sp, #176]	; 0xb0
  402822:	e886 00a0 	stmia.w	r6, {r5, r7}
  402826:	ddf2      	ble.n	40280e <_svfprintf_r+0x9a2>
  402828:	4640      	mov	r0, r8
  40282a:	4651      	mov	r1, sl
  40282c:	aa2b      	add	r2, sp, #172	; 0xac
  40282e:	f002 ffa3 	bl	405778 <__ssprint_r>
  402832:	2800      	cmp	r0, #0
  402834:	f47f ac32 	bne.w	40209c <_svfprintf_r+0x230>
  402838:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
  40283a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  40283c:	ae38      	add	r6, sp, #224	; 0xe0
  40283e:	e7e7      	b.n	402810 <_svfprintf_r+0x9a4>
  402840:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402842:	980b      	ldr	r0, [sp, #44]	; 0x2c
  402844:	ebc0 0a05 	rsb	sl, r0, r5
  402848:	f1ba 0f00 	cmp.w	sl, #0
  40284c:	f77f ad2e 	ble.w	4022ac <_svfprintf_r+0x440>
  402850:	f1ba 0f10 	cmp.w	sl, #16
  402854:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402856:	4d7f      	ldr	r5, [pc, #508]	; (402a54 <_svfprintf_r+0xbe8>)
  402858:	dd2b      	ble.n	4028b2 <_svfprintf_r+0xa46>
  40285a:	9412      	str	r4, [sp, #72]	; 0x48
  40285c:	4632      	mov	r2, r6
  40285e:	f04f 0b10 	mov.w	fp, #16
  402862:	462e      	mov	r6, r5
  402864:	4661      	mov	r1, ip
  402866:	9c0d      	ldr	r4, [sp, #52]	; 0x34
  402868:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  40286a:	e006      	b.n	40287a <_svfprintf_r+0xa0e>
  40286c:	f1aa 0a10 	sub.w	sl, sl, #16
  402870:	f1ba 0f10 	cmp.w	sl, #16
  402874:	f102 0208 	add.w	r2, r2, #8
  402878:	dd17      	ble.n	4028aa <_svfprintf_r+0xa3e>
  40287a:	3301      	adds	r3, #1
  40287c:	3110      	adds	r1, #16
  40287e:	2b07      	cmp	r3, #7
  402880:	912d      	str	r1, [sp, #180]	; 0xb4
  402882:	932c      	str	r3, [sp, #176]	; 0xb0
  402884:	e882 0840 	stmia.w	r2, {r6, fp}
  402888:	ddf0      	ble.n	40286c <_svfprintf_r+0xa00>
  40288a:	4620      	mov	r0, r4
  40288c:	4629      	mov	r1, r5
  40288e:	aa2b      	add	r2, sp, #172	; 0xac
  402890:	f002 ff72 	bl	405778 <__ssprint_r>
  402894:	2800      	cmp	r0, #0
  402896:	f47f ac01 	bne.w	40209c <_svfprintf_r+0x230>
  40289a:	f1aa 0a10 	sub.w	sl, sl, #16
  40289e:	f1ba 0f10 	cmp.w	sl, #16
  4028a2:	992d      	ldr	r1, [sp, #180]	; 0xb4
  4028a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4028a6:	aa38      	add	r2, sp, #224	; 0xe0
  4028a8:	dce7      	bgt.n	40287a <_svfprintf_r+0xa0e>
  4028aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
  4028ac:	4635      	mov	r5, r6
  4028ae:	468c      	mov	ip, r1
  4028b0:	4616      	mov	r6, r2
  4028b2:	3301      	adds	r3, #1
  4028b4:	44d4      	add	ip, sl
  4028b6:	2b07      	cmp	r3, #7
  4028b8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  4028bc:	932c      	str	r3, [sp, #176]	; 0xb0
  4028be:	e886 0420 	stmia.w	r6, {r5, sl}
  4028c2:	f300 820f 	bgt.w	402ce4 <_svfprintf_r+0xe78>
  4028c6:	3608      	adds	r6, #8
  4028c8:	e4f0      	b.n	4022ac <_svfprintf_r+0x440>
  4028ca:	2d00      	cmp	r5, #0
  4028cc:	bf08      	it	eq
  4028ce:	2c0a      	cmpeq	r4, #10
  4028d0:	f080 8138 	bcs.w	402b44 <_svfprintf_r+0xcd8>
  4028d4:	3430      	adds	r4, #48	; 0x30
  4028d6:	af48      	add	r7, sp, #288	; 0x120
  4028d8:	f807 4d41 	strb.w	r4, [r7, #-65]!
  4028dc:	9d08      	ldr	r5, [sp, #32]
  4028de:	1bec      	subs	r4, r5, r7
  4028e0:	e452      	b.n	402188 <_svfprintf_r+0x31c>
  4028e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
  4028e4:	2c01      	cmp	r4, #1
  4028e6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
  4028e8:	f340 81d2 	ble.w	402c90 <_svfprintf_r+0xe24>
  4028ec:	3401      	adds	r4, #1
  4028ee:	f10c 0301 	add.w	r3, ip, #1
  4028f2:	2201      	movs	r2, #1
  4028f4:	2c07      	cmp	r4, #7
  4028f6:	932d      	str	r3, [sp, #180]	; 0xb4
  4028f8:	6037      	str	r7, [r6, #0]
  4028fa:	942c      	str	r4, [sp, #176]	; 0xb0
  4028fc:	6072      	str	r2, [r6, #4]
  4028fe:	f300 81d8 	bgt.w	402cb2 <_svfprintf_r+0xe46>
  402902:	3608      	adds	r6, #8
  402904:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402906:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
  40290a:	3401      	adds	r4, #1
  40290c:	6035      	str	r5, [r6, #0]
  40290e:	9d18      	ldr	r5, [sp, #96]	; 0x60
  402910:	4498      	add	r8, r3
  402912:	2c07      	cmp	r4, #7
  402914:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  402918:	942c      	str	r4, [sp, #176]	; 0xb0
  40291a:	6075      	str	r5, [r6, #4]
  40291c:	f300 81d5 	bgt.w	402cca <_svfprintf_r+0xe5e>
  402920:	3608      	adds	r6, #8
  402922:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  402926:	2200      	movs	r2, #0
  402928:	2300      	movs	r3, #0
  40292a:	f003 fa91 	bl	405e50 <__aeabi_dcmpeq>
  40292e:	9d11      	ldr	r5, [sp, #68]	; 0x44
  402930:	2800      	cmp	r0, #0
  402932:	f040 80b9 	bne.w	402aa8 <_svfprintf_r+0xc3c>
  402936:	1e6b      	subs	r3, r5, #1
  402938:	3401      	adds	r4, #1
  40293a:	3701      	adds	r7, #1
  40293c:	4498      	add	r8, r3
  40293e:	2c07      	cmp	r4, #7
  402940:	942c      	str	r4, [sp, #176]	; 0xb0
  402942:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  402946:	6037      	str	r7, [r6, #0]
  402948:	6073      	str	r3, [r6, #4]
  40294a:	f300 80e2 	bgt.w	402b12 <_svfprintf_r+0xca6>
  40294e:	3608      	adds	r6, #8
  402950:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
  402954:	3401      	adds	r4, #1
  402956:	9d19      	ldr	r5, [sp, #100]	; 0x64
  402958:	44c4      	add	ip, r8
  40295a:	ab27      	add	r3, sp, #156	; 0x9c
  40295c:	2c07      	cmp	r4, #7
  40295e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402962:	942c      	str	r4, [sp, #176]	; 0xb0
  402964:	e886 0028 	stmia.w	r6, {r3, r5}
  402968:	f77f acf1 	ble.w	40234e <_svfprintf_r+0x4e2>
  40296c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40296e:	990c      	ldr	r1, [sp, #48]	; 0x30
  402970:	aa2b      	add	r2, sp, #172	; 0xac
  402972:	f002 ff01 	bl	405778 <__ssprint_r>
  402976:	2800      	cmp	r0, #0
  402978:	f47f ab90 	bne.w	40209c <_svfprintf_r+0x230>
  40297c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402980:	ae38      	add	r6, sp, #224	; 0xe0
  402982:	e4e5      	b.n	402350 <_svfprintf_r+0x4e4>
  402984:	980d      	ldr	r0, [sp, #52]	; 0x34
  402986:	990c      	ldr	r1, [sp, #48]	; 0x30
  402988:	aa2b      	add	r2, sp, #172	; 0xac
  40298a:	f002 fef5 	bl	405778 <__ssprint_r>
  40298e:	2800      	cmp	r0, #0
  402990:	f43f ad37 	beq.w	402402 <_svfprintf_r+0x596>
  402994:	f7ff bb82 	b.w	40209c <_svfprintf_r+0x230>
  402998:	980d      	ldr	r0, [sp, #52]	; 0x34
  40299a:	990c      	ldr	r1, [sp, #48]	; 0x30
  40299c:	aa2b      	add	r2, sp, #172	; 0xac
  40299e:	f002 feeb 	bl	405778 <__ssprint_r>
  4029a2:	2800      	cmp	r0, #0
  4029a4:	f47f ab7a 	bne.w	40209c <_svfprintf_r+0x230>
  4029a8:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4029ac:	ae38      	add	r6, sp, #224	; 0xe0
  4029ae:	e4bf      	b.n	402330 <_svfprintf_r+0x4c4>
  4029b0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4029b2:	990c      	ldr	r1, [sp, #48]	; 0x30
  4029b4:	aa2b      	add	r2, sp, #172	; 0xac
  4029b6:	f002 fedf 	bl	405778 <__ssprint_r>
  4029ba:	2800      	cmp	r0, #0
  4029bc:	f47f ab6e 	bne.w	40209c <_svfprintf_r+0x230>
  4029c0:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4029c4:	ae38      	add	r6, sp, #224	; 0xe0
  4029c6:	e46d      	b.n	4022a4 <_svfprintf_r+0x438>
  4029c8:	980d      	ldr	r0, [sp, #52]	; 0x34
  4029ca:	990c      	ldr	r1, [sp, #48]	; 0x30
  4029cc:	aa2b      	add	r2, sp, #172	; 0xac
  4029ce:	f002 fed3 	bl	405778 <__ssprint_r>
  4029d2:	2800      	cmp	r0, #0
  4029d4:	f47f ab62 	bne.w	40209c <_svfprintf_r+0x230>
  4029d8:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4029dc:	ae38      	add	r6, sp, #224	; 0xe0
  4029de:	e450      	b.n	402282 <_svfprintf_r+0x416>
  4029e0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4029e2:	af38      	add	r7, sp, #224	; 0xe0
  4029e4:	f7ff bbd0 	b.w	402188 <_svfprintf_r+0x31c>
  4029e8:	2302      	movs	r3, #2
  4029ea:	f7ff bba9 	b.w	402140 <_svfprintf_r+0x2d4>
  4029ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4029f0:	2b00      	cmp	r3, #0
  4029f2:	f340 81dd 	ble.w	402db0 <_svfprintf_r+0xf44>
  4029f6:	9c11      	ldr	r4, [sp, #68]	; 0x44
  4029f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4029fa:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
  4029fe:	42ac      	cmp	r4, r5
  402a00:	bfa8      	it	ge
  402a02:	462c      	movge	r4, r5
  402a04:	2c00      	cmp	r4, #0
  402a06:	44ba      	add	sl, r7
  402a08:	dd0b      	ble.n	402a22 <_svfprintf_r+0xbb6>
  402a0a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402a0c:	44a4      	add	ip, r4
  402a0e:	3301      	adds	r3, #1
  402a10:	2b07      	cmp	r3, #7
  402a12:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402a16:	6037      	str	r7, [r6, #0]
  402a18:	6074      	str	r4, [r6, #4]
  402a1a:	932c      	str	r3, [sp, #176]	; 0xb0
  402a1c:	f300 831e 	bgt.w	40305c <_svfprintf_r+0x11f0>
  402a20:	3608      	adds	r6, #8
  402a22:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402a24:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  402a28:	1b2c      	subs	r4, r5, r4
  402a2a:	2c00      	cmp	r4, #0
  402a2c:	f340 80d7 	ble.w	402bde <_svfprintf_r+0xd72>
  402a30:	2c10      	cmp	r4, #16
  402a32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402a34:	4d07      	ldr	r5, [pc, #28]	; (402a54 <_svfprintf_r+0xbe8>)
  402a36:	f340 81a3 	ble.w	402d80 <_svfprintf_r+0xf14>
  402a3a:	970a      	str	r7, [sp, #40]	; 0x28
  402a3c:	f04f 0810 	mov.w	r8, #16
  402a40:	462f      	mov	r7, r5
  402a42:	4662      	mov	r2, ip
  402a44:	4625      	mov	r5, r4
  402a46:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  402a4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402a4c:	e009      	b.n	402a62 <_svfprintf_r+0xbf6>
  402a4e:	bf00      	nop
  402a50:	00406cc4 	.word	0x00406cc4
  402a54:	00406c74 	.word	0x00406c74
  402a58:	3608      	adds	r6, #8
  402a5a:	3d10      	subs	r5, #16
  402a5c:	2d10      	cmp	r5, #16
  402a5e:	f340 818b 	ble.w	402d78 <_svfprintf_r+0xf0c>
  402a62:	3301      	adds	r3, #1
  402a64:	3210      	adds	r2, #16
  402a66:	2b07      	cmp	r3, #7
  402a68:	922d      	str	r2, [sp, #180]	; 0xb4
  402a6a:	932c      	str	r3, [sp, #176]	; 0xb0
  402a6c:	e886 0180 	stmia.w	r6, {r7, r8}
  402a70:	ddf2      	ble.n	402a58 <_svfprintf_r+0xbec>
  402a72:	4658      	mov	r0, fp
  402a74:	4621      	mov	r1, r4
  402a76:	aa2b      	add	r2, sp, #172	; 0xac
  402a78:	f002 fe7e 	bl	405778 <__ssprint_r>
  402a7c:	2800      	cmp	r0, #0
  402a7e:	f47f ab0d 	bne.w	40209c <_svfprintf_r+0x230>
  402a82:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
  402a84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402a86:	ae38      	add	r6, sp, #224	; 0xe0
  402a88:	e7e7      	b.n	402a5a <_svfprintf_r+0xbee>
  402a8a:	980d      	ldr	r0, [sp, #52]	; 0x34
  402a8c:	990c      	ldr	r1, [sp, #48]	; 0x30
  402a8e:	aa2b      	add	r2, sp, #172	; 0xac
  402a90:	f002 fe72 	bl	405778 <__ssprint_r>
  402a94:	2800      	cmp	r0, #0
  402a96:	f47f ab01 	bne.w	40209c <_svfprintf_r+0x230>
  402a9a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402a9e:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402aa2:	ae38      	add	r6, sp, #224	; 0xe0
  402aa4:	f7ff bbda 	b.w	40225c <_svfprintf_r+0x3f0>
  402aa8:	1e6f      	subs	r7, r5, #1
  402aaa:	2f00      	cmp	r7, #0
  402aac:	f77f af50 	ble.w	402950 <_svfprintf_r+0xae4>
  402ab0:	2f10      	cmp	r7, #16
  402ab2:	4dae      	ldr	r5, [pc, #696]	; (402d6c <_svfprintf_r+0xf00>)
  402ab4:	dd23      	ble.n	402afe <_svfprintf_r+0xc92>
  402ab6:	4643      	mov	r3, r8
  402ab8:	f04f 0a10 	mov.w	sl, #16
  402abc:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  402ac0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ac4:	e004      	b.n	402ad0 <_svfprintf_r+0xc64>
  402ac6:	3f10      	subs	r7, #16
  402ac8:	2f10      	cmp	r7, #16
  402aca:	f106 0608 	add.w	r6, r6, #8
  402ace:	dd15      	ble.n	402afc <_svfprintf_r+0xc90>
  402ad0:	3401      	adds	r4, #1
  402ad2:	3310      	adds	r3, #16
  402ad4:	2c07      	cmp	r4, #7
  402ad6:	932d      	str	r3, [sp, #180]	; 0xb4
  402ad8:	942c      	str	r4, [sp, #176]	; 0xb0
  402ada:	e886 0420 	stmia.w	r6, {r5, sl}
  402ade:	ddf2      	ble.n	402ac6 <_svfprintf_r+0xc5a>
  402ae0:	4640      	mov	r0, r8
  402ae2:	4659      	mov	r1, fp
  402ae4:	aa2b      	add	r2, sp, #172	; 0xac
  402ae6:	f002 fe47 	bl	405778 <__ssprint_r>
  402aea:	2800      	cmp	r0, #0
  402aec:	f47f aad6 	bne.w	40209c <_svfprintf_r+0x230>
  402af0:	3f10      	subs	r7, #16
  402af2:	2f10      	cmp	r7, #16
  402af4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
  402af6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
  402af8:	ae38      	add	r6, sp, #224	; 0xe0
  402afa:	dce9      	bgt.n	402ad0 <_svfprintf_r+0xc64>
  402afc:	4698      	mov	r8, r3
  402afe:	3401      	adds	r4, #1
  402b00:	44b8      	add	r8, r7
  402b02:	2c07      	cmp	r4, #7
  402b04:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  402b08:	942c      	str	r4, [sp, #176]	; 0xb0
  402b0a:	e886 00a0 	stmia.w	r6, {r5, r7}
  402b0e:	f77f af1e 	ble.w	40294e <_svfprintf_r+0xae2>
  402b12:	980d      	ldr	r0, [sp, #52]	; 0x34
  402b14:	990c      	ldr	r1, [sp, #48]	; 0x30
  402b16:	aa2b      	add	r2, sp, #172	; 0xac
  402b18:	f002 fe2e 	bl	405778 <__ssprint_r>
  402b1c:	2800      	cmp	r0, #0
  402b1e:	f47f aabd 	bne.w	40209c <_svfprintf_r+0x230>
  402b22:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
  402b26:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
  402b28:	ae38      	add	r6, sp, #224	; 0xe0
  402b2a:	e711      	b.n	402950 <_svfprintf_r+0xae4>
  402b2c:	4694      	mov	ip, r2
  402b2e:	3301      	adds	r3, #1
  402b30:	44a4      	add	ip, r4
  402b32:	2b07      	cmp	r3, #7
  402b34:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402b38:	932c      	str	r3, [sp, #176]	; 0xb0
  402b3a:	6035      	str	r5, [r6, #0]
  402b3c:	6074      	str	r4, [r6, #4]
  402b3e:	f77f ac06 	ble.w	40234e <_svfprintf_r+0x4e2>
  402b42:	e713      	b.n	40296c <_svfprintf_r+0xb00>
  402b44:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
  402b48:	4620      	mov	r0, r4
  402b4a:	4629      	mov	r1, r5
  402b4c:	220a      	movs	r2, #10
  402b4e:	2300      	movs	r3, #0
  402b50:	f003 f9d8 	bl	405f04 <__aeabi_uldivmod>
  402b54:	3230      	adds	r2, #48	; 0x30
  402b56:	f88b 2000 	strb.w	r2, [fp]
  402b5a:	4620      	mov	r0, r4
  402b5c:	4629      	mov	r1, r5
  402b5e:	220a      	movs	r2, #10
  402b60:	2300      	movs	r3, #0
  402b62:	f003 f9cf 	bl	405f04 <__aeabi_uldivmod>
  402b66:	4604      	mov	r4, r0
  402b68:	460d      	mov	r5, r1
  402b6a:	ea54 0c05 	orrs.w	ip, r4, r5
  402b6e:	465f      	mov	r7, fp
  402b70:	f10b 3bff 	add.w	fp, fp, #4294967295
  402b74:	d1e8      	bne.n	402b48 <_svfprintf_r+0xcdc>
  402b76:	9d08      	ldr	r5, [sp, #32]
  402b78:	1bec      	subs	r4, r5, r7
  402b7a:	f7ff bb05 	b.w	402188 <_svfprintf_r+0x31c>
  402b7e:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402b80:	2301      	movs	r3, #1
  402b82:	682c      	ldr	r4, [r5, #0]
  402b84:	3504      	adds	r5, #4
  402b86:	9510      	str	r5, [sp, #64]	; 0x40
  402b88:	2500      	movs	r5, #0
  402b8a:	f7ff bad9 	b.w	402140 <_svfprintf_r+0x2d4>
  402b8e:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402b90:	682c      	ldr	r4, [r5, #0]
  402b92:	3504      	adds	r5, #4
  402b94:	9510      	str	r5, [sp, #64]	; 0x40
  402b96:	2500      	movs	r5, #0
  402b98:	f7ff bad2 	b.w	402140 <_svfprintf_r+0x2d4>
  402b9c:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402b9e:	682c      	ldr	r4, [r5, #0]
  402ba0:	3504      	adds	r5, #4
  402ba2:	9510      	str	r5, [sp, #64]	; 0x40
  402ba4:	17e5      	asrs	r5, r4, #31
  402ba6:	4622      	mov	r2, r4
  402ba8:	462b      	mov	r3, r5
  402baa:	2a00      	cmp	r2, #0
  402bac:	f173 0c00 	sbcs.w	ip, r3, #0
  402bb0:	f6bf ac6c 	bge.w	40248c <_svfprintf_r+0x620>
  402bb4:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  402bb8:	4264      	negs	r4, r4
  402bba:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402bbe:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
  402bc2:	2301      	movs	r3, #1
  402bc4:	f7ff bac0 	b.w	402148 <_svfprintf_r+0x2dc>
  402bc8:	980d      	ldr	r0, [sp, #52]	; 0x34
  402bca:	990c      	ldr	r1, [sp, #48]	; 0x30
  402bcc:	aa2b      	add	r2, sp, #172	; 0xac
  402bce:	f002 fdd3 	bl	405778 <__ssprint_r>
  402bd2:	2800      	cmp	r0, #0
  402bd4:	f47f aa62 	bne.w	40209c <_svfprintf_r+0x230>
  402bd8:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402bdc:	ae38      	add	r6, sp, #224	; 0xe0
  402bde:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402be0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402be2:	442f      	add	r7, r5
  402be4:	9d11      	ldr	r5, [sp, #68]	; 0x44
  402be6:	42ac      	cmp	r4, r5
  402be8:	db42      	blt.n	402c70 <_svfprintf_r+0xe04>
  402bea:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402bec:	07e9      	lsls	r1, r5, #31
  402bee:	d43f      	bmi.n	402c70 <_svfprintf_r+0xe04>
  402bf0:	9811      	ldr	r0, [sp, #68]	; 0x44
  402bf2:	ebc7 050a 	rsb	r5, r7, sl
  402bf6:	1b04      	subs	r4, r0, r4
  402bf8:	42ac      	cmp	r4, r5
  402bfa:	bfb8      	it	lt
  402bfc:	4625      	movlt	r5, r4
  402bfe:	2d00      	cmp	r5, #0
  402c00:	dd0b      	ble.n	402c1a <_svfprintf_r+0xdae>
  402c02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402c04:	44ac      	add	ip, r5
  402c06:	3301      	adds	r3, #1
  402c08:	2b07      	cmp	r3, #7
  402c0a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402c0e:	6037      	str	r7, [r6, #0]
  402c10:	6075      	str	r5, [r6, #4]
  402c12:	932c      	str	r3, [sp, #176]	; 0xb0
  402c14:	f300 824c 	bgt.w	4030b0 <_svfprintf_r+0x1244>
  402c18:	3608      	adds	r6, #8
  402c1a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
  402c1e:	1b64      	subs	r4, r4, r5
  402c20:	2c00      	cmp	r4, #0
  402c22:	f77f ab95 	ble.w	402350 <_svfprintf_r+0x4e4>
  402c26:	2c10      	cmp	r4, #16
  402c28:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402c2a:	4d50      	ldr	r5, [pc, #320]	; (402d6c <_svfprintf_r+0xf00>)
  402c2c:	f77f af7f 	ble.w	402b2e <_svfprintf_r+0xcc2>
  402c30:	2710      	movs	r7, #16
  402c32:	4662      	mov	r2, ip
  402c34:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  402c38:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
  402c3c:	e004      	b.n	402c48 <_svfprintf_r+0xddc>
  402c3e:	3608      	adds	r6, #8
  402c40:	3c10      	subs	r4, #16
  402c42:	2c10      	cmp	r4, #16
  402c44:	f77f af72 	ble.w	402b2c <_svfprintf_r+0xcc0>
  402c48:	3301      	adds	r3, #1
  402c4a:	3210      	adds	r2, #16
  402c4c:	2b07      	cmp	r3, #7
  402c4e:	922d      	str	r2, [sp, #180]	; 0xb4
  402c50:	932c      	str	r3, [sp, #176]	; 0xb0
  402c52:	e886 00a0 	stmia.w	r6, {r5, r7}
  402c56:	ddf2      	ble.n	402c3e <_svfprintf_r+0xdd2>
  402c58:	4640      	mov	r0, r8
  402c5a:	4651      	mov	r1, sl
  402c5c:	aa2b      	add	r2, sp, #172	; 0xac
  402c5e:	f002 fd8b 	bl	405778 <__ssprint_r>
  402c62:	2800      	cmp	r0, #0
  402c64:	f47f aa1a 	bne.w	40209c <_svfprintf_r+0x230>
  402c68:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
  402c6a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402c6c:	ae38      	add	r6, sp, #224	; 0xe0
  402c6e:	e7e7      	b.n	402c40 <_svfprintf_r+0xdd4>
  402c70:	9d18      	ldr	r5, [sp, #96]	; 0x60
  402c72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402c74:	44ac      	add	ip, r5
  402c76:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402c78:	3301      	adds	r3, #1
  402c7a:	6035      	str	r5, [r6, #0]
  402c7c:	9d18      	ldr	r5, [sp, #96]	; 0x60
  402c7e:	2b07      	cmp	r3, #7
  402c80:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402c84:	6075      	str	r5, [r6, #4]
  402c86:	932c      	str	r3, [sp, #176]	; 0xb0
  402c88:	f300 81f4 	bgt.w	403074 <_svfprintf_r+0x1208>
  402c8c:	3608      	adds	r6, #8
  402c8e:	e7af      	b.n	402bf0 <_svfprintf_r+0xd84>
  402c90:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402c92:	07ea      	lsls	r2, r5, #31
  402c94:	f53f ae2a 	bmi.w	4028ec <_svfprintf_r+0xa80>
  402c98:	3401      	adds	r4, #1
  402c9a:	f10c 0801 	add.w	r8, ip, #1
  402c9e:	2301      	movs	r3, #1
  402ca0:	2c07      	cmp	r4, #7
  402ca2:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  402ca6:	942c      	str	r4, [sp, #176]	; 0xb0
  402ca8:	6037      	str	r7, [r6, #0]
  402caa:	6073      	str	r3, [r6, #4]
  402cac:	f77f ae4f 	ble.w	40294e <_svfprintf_r+0xae2>
  402cb0:	e72f      	b.n	402b12 <_svfprintf_r+0xca6>
  402cb2:	980d      	ldr	r0, [sp, #52]	; 0x34
  402cb4:	990c      	ldr	r1, [sp, #48]	; 0x30
  402cb6:	aa2b      	add	r2, sp, #172	; 0xac
  402cb8:	f002 fd5e 	bl	405778 <__ssprint_r>
  402cbc:	2800      	cmp	r0, #0
  402cbe:	f47f a9ed 	bne.w	40209c <_svfprintf_r+0x230>
  402cc2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
  402cc4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
  402cc6:	ae38      	add	r6, sp, #224	; 0xe0
  402cc8:	e61c      	b.n	402904 <_svfprintf_r+0xa98>
  402cca:	980d      	ldr	r0, [sp, #52]	; 0x34
  402ccc:	990c      	ldr	r1, [sp, #48]	; 0x30
  402cce:	aa2b      	add	r2, sp, #172	; 0xac
  402cd0:	f002 fd52 	bl	405778 <__ssprint_r>
  402cd4:	2800      	cmp	r0, #0
  402cd6:	f47f a9e1 	bne.w	40209c <_svfprintf_r+0x230>
  402cda:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
  402cde:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
  402ce0:	ae38      	add	r6, sp, #224	; 0xe0
  402ce2:	e61e      	b.n	402922 <_svfprintf_r+0xab6>
  402ce4:	980d      	ldr	r0, [sp, #52]	; 0x34
  402ce6:	990c      	ldr	r1, [sp, #48]	; 0x30
  402ce8:	aa2b      	add	r2, sp, #172	; 0xac
  402cea:	f002 fd45 	bl	405778 <__ssprint_r>
  402cee:	2800      	cmp	r0, #0
  402cf0:	f47f a9d4 	bne.w	40209c <_svfprintf_r+0x230>
  402cf4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402cf8:	ae38      	add	r6, sp, #224	; 0xe0
  402cfa:	f7ff bad7 	b.w	4022ac <_svfprintf_r+0x440>
  402cfe:	f002 fcd1 	bl	4056a4 <__fpclassifyd>
  402d02:	2800      	cmp	r0, #0
  402d04:	f040 80bb 	bne.w	402e7e <_svfprintf_r+0x1012>
  402d08:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402d0a:	4f19      	ldr	r7, [pc, #100]	; (402d70 <_svfprintf_r+0xf04>)
  402d0c:	4b19      	ldr	r3, [pc, #100]	; (402d74 <_svfprintf_r+0xf08>)
  402d0e:	f04f 0c03 	mov.w	ip, #3
  402d12:	f024 0480 	bic.w	r4, r4, #128	; 0x80
  402d16:	9409      	str	r4, [sp, #36]	; 0x24
  402d18:	900a      	str	r0, [sp, #40]	; 0x28
  402d1a:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  402d1e:	9014      	str	r0, [sp, #80]	; 0x50
  402d20:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  402d24:	bfd8      	it	le
  402d26:	461f      	movle	r7, r3
  402d28:	4664      	mov	r4, ip
  402d2a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402d2e:	f7ff ba34 	b.w	40219a <_svfprintf_r+0x32e>
  402d32:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402d34:	0664      	lsls	r4, r4, #25
  402d36:	f140 8150 	bpl.w	402fda <_svfprintf_r+0x116e>
  402d3a:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  402d3e:	2500      	movs	r5, #0
  402d40:	f8bc 4000 	ldrh.w	r4, [ip]
  402d44:	f10c 0c04 	add.w	ip, ip, #4
  402d48:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  402d4c:	f7ff b9e4 	b.w	402118 <_svfprintf_r+0x2ac>
  402d50:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402d54:	f01c 0f10 	tst.w	ip, #16
  402d58:	f000 8146 	beq.w	402fe8 <_svfprintf_r+0x117c>
  402d5c:	9c10      	ldr	r4, [sp, #64]	; 0x40
  402d5e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402d60:	6823      	ldr	r3, [r4, #0]
  402d62:	3404      	adds	r4, #4
  402d64:	9410      	str	r4, [sp, #64]	; 0x40
  402d66:	601d      	str	r5, [r3, #0]
  402d68:	f7ff b8a6 	b.w	401eb8 <_svfprintf_r+0x4c>
  402d6c:	00406c74 	.word	0x00406c74
  402d70:	00406c90 	.word	0x00406c90
  402d74:	00406c8c 	.word	0x00406c8c
  402d78:	462c      	mov	r4, r5
  402d7a:	463d      	mov	r5, r7
  402d7c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  402d7e:	4694      	mov	ip, r2
  402d80:	3301      	adds	r3, #1
  402d82:	44a4      	add	ip, r4
  402d84:	2b07      	cmp	r3, #7
  402d86:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402d8a:	932c      	str	r3, [sp, #176]	; 0xb0
  402d8c:	6035      	str	r5, [r6, #0]
  402d8e:	6074      	str	r4, [r6, #4]
  402d90:	f73f af1a 	bgt.w	402bc8 <_svfprintf_r+0xd5c>
  402d94:	3608      	adds	r6, #8
  402d96:	e722      	b.n	402bde <_svfprintf_r+0xd72>
  402d98:	980d      	ldr	r0, [sp, #52]	; 0x34
  402d9a:	990c      	ldr	r1, [sp, #48]	; 0x30
  402d9c:	aa2b      	add	r2, sp, #172	; 0xac
  402d9e:	f002 fceb 	bl	405778 <__ssprint_r>
  402da2:	2800      	cmp	r0, #0
  402da4:	f47f a97a 	bne.w	40209c <_svfprintf_r+0x230>
  402da8:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402dac:	ae38      	add	r6, sp, #224	; 0xe0
  402dae:	e507      	b.n	4027c0 <_svfprintf_r+0x954>
  402db0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
  402db2:	49b7      	ldr	r1, [pc, #732]	; (403090 <_svfprintf_r+0x1224>)
  402db4:	3201      	adds	r2, #1
  402db6:	f10c 0c01 	add.w	ip, ip, #1
  402dba:	2001      	movs	r0, #1
  402dbc:	2a07      	cmp	r2, #7
  402dbe:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  402dc2:	922c      	str	r2, [sp, #176]	; 0xb0
  402dc4:	6031      	str	r1, [r6, #0]
  402dc6:	6070      	str	r0, [r6, #4]
  402dc8:	f300 80f7 	bgt.w	402fba <_svfprintf_r+0x114e>
  402dcc:	3608      	adds	r6, #8
  402dce:	461c      	mov	r4, r3
  402dd0:	b92c      	cbnz	r4, 402dde <_svfprintf_r+0xf72>
  402dd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
  402dd4:	b91d      	cbnz	r5, 402dde <_svfprintf_r+0xf72>
  402dd6:	9d09      	ldr	r5, [sp, #36]	; 0x24
  402dd8:	07e8      	lsls	r0, r5, #31
  402dda:	f57f aab9 	bpl.w	402350 <_svfprintf_r+0x4e4>
  402dde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402de0:	9d15      	ldr	r5, [sp, #84]	; 0x54
  402de2:	9918      	ldr	r1, [sp, #96]	; 0x60
  402de4:	3301      	adds	r3, #1
  402de6:	6035      	str	r5, [r6, #0]
  402de8:	9d18      	ldr	r5, [sp, #96]	; 0x60
  402dea:	4461      	add	r1, ip
  402dec:	2b07      	cmp	r3, #7
  402dee:	912d      	str	r1, [sp, #180]	; 0xb4
  402df0:	6075      	str	r5, [r6, #4]
  402df2:	932c      	str	r3, [sp, #176]	; 0xb0
  402df4:	f300 81de 	bgt.w	4031b4 <_svfprintf_r+0x1348>
  402df8:	f106 0208 	add.w	r2, r6, #8
  402dfc:	4264      	negs	r4, r4
  402dfe:	2c00      	cmp	r4, #0
  402e00:	f340 810b 	ble.w	40301a <_svfprintf_r+0x11ae>
  402e04:	2c10      	cmp	r4, #16
  402e06:	4da3      	ldr	r5, [pc, #652]	; (403094 <_svfprintf_r+0x1228>)
  402e08:	f340 8148 	ble.w	40309c <_svfprintf_r+0x1230>
  402e0c:	46a3      	mov	fp, r4
  402e0e:	2610      	movs	r6, #16
  402e10:	460c      	mov	r4, r1
  402e12:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
  402e16:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
  402e1a:	e006      	b.n	402e2a <_svfprintf_r+0xfbe>
  402e1c:	3208      	adds	r2, #8
  402e1e:	f1ab 0b10 	sub.w	fp, fp, #16
  402e22:	f1bb 0f10 	cmp.w	fp, #16
  402e26:	f340 8137 	ble.w	403098 <_svfprintf_r+0x122c>
  402e2a:	3301      	adds	r3, #1
  402e2c:	3410      	adds	r4, #16
  402e2e:	2b07      	cmp	r3, #7
  402e30:	942d      	str	r4, [sp, #180]	; 0xb4
  402e32:	932c      	str	r3, [sp, #176]	; 0xb0
  402e34:	e882 0060 	stmia.w	r2, {r5, r6}
  402e38:	ddf0      	ble.n	402e1c <_svfprintf_r+0xfb0>
  402e3a:	4640      	mov	r0, r8
  402e3c:	4651      	mov	r1, sl
  402e3e:	aa2b      	add	r2, sp, #172	; 0xac
  402e40:	f002 fc9a 	bl	405778 <__ssprint_r>
  402e44:	2800      	cmp	r0, #0
  402e46:	f47f a929 	bne.w	40209c <_svfprintf_r+0x230>
  402e4a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
  402e4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  402e4e:	aa38      	add	r2, sp, #224	; 0xe0
  402e50:	e7e5      	b.n	402e1e <_svfprintf_r+0xfb2>
  402e52:	9c09      	ldr	r4, [sp, #36]	; 0x24
  402e54:	f109 0901 	add.w	r9, r9, #1
  402e58:	f044 0420 	orr.w	r4, r4, #32
  402e5c:	9409      	str	r4, [sp, #36]	; 0x24
  402e5e:	f893 8001 	ldrb.w	r8, [r3, #1]
  402e62:	f7ff b85f 	b.w	401f24 <_svfprintf_r+0xb8>
  402e66:	980d      	ldr	r0, [sp, #52]	; 0x34
  402e68:	990c      	ldr	r1, [sp, #48]	; 0x30
  402e6a:	aa2b      	add	r2, sp, #172	; 0xac
  402e6c:	f002 fc84 	bl	405778 <__ssprint_r>
  402e70:	2800      	cmp	r0, #0
  402e72:	f47f a913 	bne.w	40209c <_svfprintf_r+0x230>
  402e76:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402e7a:	ae38      	add	r6, sp, #224	; 0xe0
  402e7c:	e4b6      	b.n	4027ec <_svfprintf_r+0x980>
  402e7e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402e80:	f028 0a20 	bic.w	sl, r8, #32
  402e84:	3501      	adds	r5, #1
  402e86:	f000 80a5 	beq.w	402fd4 <_svfprintf_r+0x1168>
  402e8a:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
  402e8e:	d104      	bne.n	402e9a <_svfprintf_r+0x102e>
  402e90:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402e92:	2d00      	cmp	r5, #0
  402e94:	bf08      	it	eq
  402e96:	2501      	moveq	r5, #1
  402e98:	950a      	str	r5, [sp, #40]	; 0x28
  402e9a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402e9e:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  402ea2:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
  402ea6:	2b00      	cmp	r3, #0
  402ea8:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
  402eac:	f2c0 819c 	blt.w	4031e8 <_svfprintf_r+0x137c>
  402eb0:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
  402eb4:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
  402eb8:	f04f 0b00 	mov.w	fp, #0
  402ebc:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
  402ec0:	f000 819b 	beq.w	4031fa <_svfprintf_r+0x138e>
  402ec4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
  402ec8:	f000 81a9 	beq.w	40321e <_svfprintf_r+0x13b2>
  402ecc:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
  402ed0:	bf0a      	itet	eq
  402ed2:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
  402ed4:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402ed6:	1c65      	addeq	r5, r4, #1
  402ed8:	2002      	movs	r0, #2
  402eda:	a925      	add	r1, sp, #148	; 0x94
  402edc:	aa26      	add	r2, sp, #152	; 0x98
  402ede:	ab29      	add	r3, sp, #164	; 0xa4
  402ee0:	e88d 0021 	stmia.w	sp, {r0, r5}
  402ee4:	9203      	str	r2, [sp, #12]
  402ee6:	9304      	str	r3, [sp, #16]
  402ee8:	9102      	str	r1, [sp, #8]
  402eea:	980d      	ldr	r0, [sp, #52]	; 0x34
  402eec:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
  402ef0:	f000 fad6 	bl	4034a0 <_dtoa_r>
  402ef4:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
  402ef8:	4607      	mov	r7, r0
  402efa:	d002      	beq.n	402f02 <_svfprintf_r+0x1096>
  402efc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  402f00:	d105      	bne.n	402f0e <_svfprintf_r+0x10a2>
  402f02:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402f06:	f01c 0f01 	tst.w	ip, #1
  402f0a:	f000 819c 	beq.w	403246 <_svfprintf_r+0x13da>
  402f0e:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
  402f12:	eb07 0405 	add.w	r4, r7, r5
  402f16:	f000 811c 	beq.w	403152 <_svfprintf_r+0x12e6>
  402f1a:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  402f1e:	2200      	movs	r2, #0
  402f20:	2300      	movs	r3, #0
  402f22:	f002 ff95 	bl	405e50 <__aeabi_dcmpeq>
  402f26:	2800      	cmp	r0, #0
  402f28:	f040 8105 	bne.w	403136 <_svfprintf_r+0x12ca>
  402f2c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  402f2e:	429c      	cmp	r4, r3
  402f30:	d906      	bls.n	402f40 <_svfprintf_r+0x10d4>
  402f32:	2130      	movs	r1, #48	; 0x30
  402f34:	1c5a      	adds	r2, r3, #1
  402f36:	9229      	str	r2, [sp, #164]	; 0xa4
  402f38:	7019      	strb	r1, [r3, #0]
  402f3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  402f3c:	429c      	cmp	r4, r3
  402f3e:	d8f9      	bhi.n	402f34 <_svfprintf_r+0x10c8>
  402f40:	1bdb      	subs	r3, r3, r7
  402f42:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
  402f46:	9311      	str	r3, [sp, #68]	; 0x44
  402f48:	f000 80ed 	beq.w	403126 <_svfprintf_r+0x12ba>
  402f4c:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  402f50:	f340 81f2 	ble.w	403338 <_svfprintf_r+0x14cc>
  402f54:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
  402f58:	f000 8168 	beq.w	40322c <_svfprintf_r+0x13c0>
  402f5c:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402f5e:	9414      	str	r4, [sp, #80]	; 0x50
  402f60:	9c11      	ldr	r4, [sp, #68]	; 0x44
  402f62:	9d14      	ldr	r5, [sp, #80]	; 0x50
  402f64:	42ac      	cmp	r4, r5
  402f66:	f300 8132 	bgt.w	4031ce <_svfprintf_r+0x1362>
  402f6a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402f6e:	f01c 0f01 	tst.w	ip, #1
  402f72:	f040 81ad 	bne.w	4032d0 <_svfprintf_r+0x1464>
  402f76:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
  402f7a:	462c      	mov	r4, r5
  402f7c:	f04f 0867 	mov.w	r8, #103	; 0x67
  402f80:	f1bb 0f00 	cmp.w	fp, #0
  402f84:	f040 80b2 	bne.w	4030ec <_svfprintf_r+0x1280>
  402f88:	9d12      	ldr	r5, [sp, #72]	; 0x48
  402f8a:	930b      	str	r3, [sp, #44]	; 0x2c
  402f8c:	9509      	str	r5, [sp, #36]	; 0x24
  402f8e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
  402f92:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  402f96:	f7ff b900 	b.w	40219a <_svfprintf_r+0x32e>
  402f9a:	980d      	ldr	r0, [sp, #52]	; 0x34
  402f9c:	2140      	movs	r1, #64	; 0x40
  402f9e:	f001 fad1 	bl	404544 <_malloc_r>
  402fa2:	6020      	str	r0, [r4, #0]
  402fa4:	6120      	str	r0, [r4, #16]
  402fa6:	2800      	cmp	r0, #0
  402fa8:	f000 81bf 	beq.w	40332a <_svfprintf_r+0x14be>
  402fac:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
  402fb0:	2340      	movs	r3, #64	; 0x40
  402fb2:	f8cc 3014 	str.w	r3, [ip, #20]
  402fb6:	f7fe bf6f 	b.w	401e98 <_svfprintf_r+0x2c>
  402fba:	980d      	ldr	r0, [sp, #52]	; 0x34
  402fbc:	990c      	ldr	r1, [sp, #48]	; 0x30
  402fbe:	aa2b      	add	r2, sp, #172	; 0xac
  402fc0:	f002 fbda 	bl	405778 <__ssprint_r>
  402fc4:	2800      	cmp	r0, #0
  402fc6:	f47f a869 	bne.w	40209c <_svfprintf_r+0x230>
  402fca:	9c25      	ldr	r4, [sp, #148]	; 0x94
  402fcc:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  402fd0:	ae38      	add	r6, sp, #224	; 0xe0
  402fd2:	e6fd      	b.n	402dd0 <_svfprintf_r+0xf64>
  402fd4:	2406      	movs	r4, #6
  402fd6:	940a      	str	r4, [sp, #40]	; 0x28
  402fd8:	e75f      	b.n	402e9a <_svfprintf_r+0x102e>
  402fda:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402fdc:	682c      	ldr	r4, [r5, #0]
  402fde:	3504      	adds	r5, #4
  402fe0:	9510      	str	r5, [sp, #64]	; 0x40
  402fe2:	2500      	movs	r5, #0
  402fe4:	f7ff b898 	b.w	402118 <_svfprintf_r+0x2ac>
  402fe8:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  402fec:	f01c 0f40 	tst.w	ip, #64	; 0x40
  402ff0:	f000 8087 	beq.w	403102 <_svfprintf_r+0x1296>
  402ff4:	9c10      	ldr	r4, [sp, #64]	; 0x40
  402ff6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  402ff8:	6823      	ldr	r3, [r4, #0]
  402ffa:	3404      	adds	r4, #4
  402ffc:	9410      	str	r4, [sp, #64]	; 0x40
  402ffe:	801d      	strh	r5, [r3, #0]
  403000:	f7fe bf5a 	b.w	401eb8 <_svfprintf_r+0x4c>
  403004:	980d      	ldr	r0, [sp, #52]	; 0x34
  403006:	990c      	ldr	r1, [sp, #48]	; 0x30
  403008:	aa2b      	add	r2, sp, #172	; 0xac
  40300a:	f002 fbb5 	bl	405778 <__ssprint_r>
  40300e:	2800      	cmp	r0, #0
  403010:	f47f a844 	bne.w	40209c <_svfprintf_r+0x230>
  403014:	992d      	ldr	r1, [sp, #180]	; 0xb4
  403016:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  403018:	aa38      	add	r2, sp, #224	; 0xe0
  40301a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
  40301e:	3301      	adds	r3, #1
  403020:	9c11      	ldr	r4, [sp, #68]	; 0x44
  403022:	448c      	add	ip, r1
  403024:	2b07      	cmp	r3, #7
  403026:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
  40302a:	932c      	str	r3, [sp, #176]	; 0xb0
  40302c:	6017      	str	r7, [r2, #0]
  40302e:	6054      	str	r4, [r2, #4]
  403030:	f73f ac9c 	bgt.w	40296c <_svfprintf_r+0xb00>
  403034:	f102 0608 	add.w	r6, r2, #8
  403038:	f7ff b98a 	b.w	402350 <_svfprintf_r+0x4e4>
  40303c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
  403040:	f002 fb6a 	bl	405718 <strlen>
  403044:	9510      	str	r5, [sp, #64]	; 0x40
  403046:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403048:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
  40304c:	4604      	mov	r4, r0
  40304e:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  403052:	9514      	str	r5, [sp, #80]	; 0x50
  403054:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  403058:	f7ff b89f 	b.w	40219a <_svfprintf_r+0x32e>
  40305c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40305e:	990c      	ldr	r1, [sp, #48]	; 0x30
  403060:	aa2b      	add	r2, sp, #172	; 0xac
  403062:	f002 fb89 	bl	405778 <__ssprint_r>
  403066:	2800      	cmp	r0, #0
  403068:	f47f a818 	bne.w	40209c <_svfprintf_r+0x230>
  40306c:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  403070:	ae38      	add	r6, sp, #224	; 0xe0
  403072:	e4d6      	b.n	402a22 <_svfprintf_r+0xbb6>
  403074:	980d      	ldr	r0, [sp, #52]	; 0x34
  403076:	990c      	ldr	r1, [sp, #48]	; 0x30
  403078:	aa2b      	add	r2, sp, #172	; 0xac
  40307a:	f002 fb7d 	bl	405778 <__ssprint_r>
  40307e:	2800      	cmp	r0, #0
  403080:	f47f a80c 	bne.w	40209c <_svfprintf_r+0x230>
  403084:	9c25      	ldr	r4, [sp, #148]	; 0x94
  403086:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  40308a:	ae38      	add	r6, sp, #224	; 0xe0
  40308c:	e5b0      	b.n	402bf0 <_svfprintf_r+0xd84>
  40308e:	bf00      	nop
  403090:	00406cc4 	.word	0x00406cc4
  403094:	00406c74 	.word	0x00406c74
  403098:	4621      	mov	r1, r4
  40309a:	465c      	mov	r4, fp
  40309c:	3301      	adds	r3, #1
  40309e:	4421      	add	r1, r4
  4030a0:	2b07      	cmp	r3, #7
  4030a2:	912d      	str	r1, [sp, #180]	; 0xb4
  4030a4:	932c      	str	r3, [sp, #176]	; 0xb0
  4030a6:	6015      	str	r5, [r2, #0]
  4030a8:	6054      	str	r4, [r2, #4]
  4030aa:	dcab      	bgt.n	403004 <_svfprintf_r+0x1198>
  4030ac:	3208      	adds	r2, #8
  4030ae:	e7b4      	b.n	40301a <_svfprintf_r+0x11ae>
  4030b0:	980d      	ldr	r0, [sp, #52]	; 0x34
  4030b2:	990c      	ldr	r1, [sp, #48]	; 0x30
  4030b4:	aa2b      	add	r2, sp, #172	; 0xac
  4030b6:	f002 fb5f 	bl	405778 <__ssprint_r>
  4030ba:	2800      	cmp	r0, #0
  4030bc:	f47e afee 	bne.w	40209c <_svfprintf_r+0x230>
  4030c0:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4030c2:	9911      	ldr	r1, [sp, #68]	; 0x44
  4030c4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
  4030c8:	1b0c      	subs	r4, r1, r4
  4030ca:	ae38      	add	r6, sp, #224	; 0xe0
  4030cc:	e5a5      	b.n	402c1a <_svfprintf_r+0xdae>
  4030ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4030d0:	46ba      	mov	sl, r7
  4030d2:	2c06      	cmp	r4, #6
  4030d4:	bf28      	it	cs
  4030d6:	2406      	movcs	r4, #6
  4030d8:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
  4030dc:	970a      	str	r7, [sp, #40]	; 0x28
  4030de:	9714      	str	r7, [sp, #80]	; 0x50
  4030e0:	9510      	str	r5, [sp, #64]	; 0x40
  4030e2:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  4030e6:	4f97      	ldr	r7, [pc, #604]	; (403344 <_svfprintf_r+0x14d8>)
  4030e8:	f7ff b857 	b.w	40219a <_svfprintf_r+0x32e>
  4030ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
  4030ee:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  4030f2:	9509      	str	r5, [sp, #36]	; 0x24
  4030f4:	2500      	movs	r5, #0
  4030f6:	930b      	str	r3, [sp, #44]	; 0x2c
  4030f8:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
  4030fc:	950a      	str	r5, [sp, #40]	; 0x28
  4030fe:	f7ff b84f 	b.w	4021a0 <_svfprintf_r+0x334>
  403102:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  403106:	9c0e      	ldr	r4, [sp, #56]	; 0x38
  403108:	f8dc 3000 	ldr.w	r3, [ip]
  40310c:	f10c 0c04 	add.w	ip, ip, #4
  403110:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
  403114:	601c      	str	r4, [r3, #0]
  403116:	f7fe becf 	b.w	401eb8 <_svfprintf_r+0x4c>
  40311a:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
  40311e:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
  403122:	f7ff ba99 	b.w	402658 <_svfprintf_r+0x7ec>
  403126:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403128:	1cdc      	adds	r4, r3, #3
  40312a:	db19      	blt.n	403160 <_svfprintf_r+0x12f4>
  40312c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40312e:	429c      	cmp	r4, r3
  403130:	db16      	blt.n	403160 <_svfprintf_r+0x12f4>
  403132:	9314      	str	r3, [sp, #80]	; 0x50
  403134:	e714      	b.n	402f60 <_svfprintf_r+0x10f4>
  403136:	4623      	mov	r3, r4
  403138:	e702      	b.n	402f40 <_svfprintf_r+0x10d4>
  40313a:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
  40313e:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
  403142:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403144:	9510      	str	r5, [sp, #64]	; 0x40
  403146:	900a      	str	r0, [sp, #40]	; 0x28
  403148:	9014      	str	r0, [sp, #80]	; 0x50
  40314a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
  40314e:	f7ff b824 	b.w	40219a <_svfprintf_r+0x32e>
  403152:	783b      	ldrb	r3, [r7, #0]
  403154:	2b30      	cmp	r3, #48	; 0x30
  403156:	f000 80ad 	beq.w	4032b4 <_svfprintf_r+0x1448>
  40315a:	9d25      	ldr	r5, [sp, #148]	; 0x94
  40315c:	442c      	add	r4, r5
  40315e:	e6dc      	b.n	402f1a <_svfprintf_r+0x10ae>
  403160:	f1a8 0802 	sub.w	r8, r8, #2
  403164:	1e59      	subs	r1, r3, #1
  403166:	2900      	cmp	r1, #0
  403168:	9125      	str	r1, [sp, #148]	; 0x94
  40316a:	bfba      	itte	lt
  40316c:	4249      	neglt	r1, r1
  40316e:	232d      	movlt	r3, #45	; 0x2d
  403170:	232b      	movge	r3, #43	; 0x2b
  403172:	2909      	cmp	r1, #9
  403174:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
  403178:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
  40317c:	dc65      	bgt.n	40324a <_svfprintf_r+0x13de>
  40317e:	2330      	movs	r3, #48	; 0x30
  403180:	3130      	adds	r1, #48	; 0x30
  403182:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
  403186:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
  40318a:	ab28      	add	r3, sp, #160	; 0xa0
  40318c:	9d11      	ldr	r5, [sp, #68]	; 0x44
  40318e:	aa27      	add	r2, sp, #156	; 0x9c
  403190:	9c11      	ldr	r4, [sp, #68]	; 0x44
  403192:	1a9a      	subs	r2, r3, r2
  403194:	2d01      	cmp	r5, #1
  403196:	9219      	str	r2, [sp, #100]	; 0x64
  403198:	4414      	add	r4, r2
  40319a:	f340 80b7 	ble.w	40330c <_svfprintf_r+0x14a0>
  40319e:	3401      	adds	r4, #1
  4031a0:	2500      	movs	r5, #0
  4031a2:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  4031a6:	9514      	str	r5, [sp, #80]	; 0x50
  4031a8:	e6ea      	b.n	402f80 <_svfprintf_r+0x1114>
  4031aa:	2400      	movs	r4, #0
  4031ac:	4681      	mov	r9, r0
  4031ae:	940a      	str	r4, [sp, #40]	; 0x28
  4031b0:	f7fe beba 	b.w	401f28 <_svfprintf_r+0xbc>
  4031b4:	980d      	ldr	r0, [sp, #52]	; 0x34
  4031b6:	990c      	ldr	r1, [sp, #48]	; 0x30
  4031b8:	aa2b      	add	r2, sp, #172	; 0xac
  4031ba:	f002 fadd 	bl	405778 <__ssprint_r>
  4031be:	2800      	cmp	r0, #0
  4031c0:	f47e af6c 	bne.w	40209c <_svfprintf_r+0x230>
  4031c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
  4031c6:	992d      	ldr	r1, [sp, #180]	; 0xb4
  4031c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
  4031ca:	aa38      	add	r2, sp, #224	; 0xe0
  4031cc:	e616      	b.n	402dfc <_svfprintf_r+0xf90>
  4031ce:	9c14      	ldr	r4, [sp, #80]	; 0x50
  4031d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
  4031d2:	2c00      	cmp	r4, #0
  4031d4:	bfd4      	ite	le
  4031d6:	f1c4 0402 	rsble	r4, r4, #2
  4031da:	2401      	movgt	r4, #1
  4031dc:	442c      	add	r4, r5
  4031de:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  4031e2:	f04f 0867 	mov.w	r8, #103	; 0x67
  4031e6:	e6cb      	b.n	402f80 <_svfprintf_r+0x1114>
  4031e8:	9917      	ldr	r1, [sp, #92]	; 0x5c
  4031ea:	9816      	ldr	r0, [sp, #88]	; 0x58
  4031ec:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  4031f0:	9020      	str	r0, [sp, #128]	; 0x80
  4031f2:	9121      	str	r1, [sp, #132]	; 0x84
  4031f4:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
  4031f8:	e660      	b.n	402ebc <_svfprintf_r+0x1050>
  4031fa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4031fc:	2003      	movs	r0, #3
  4031fe:	a925      	add	r1, sp, #148	; 0x94
  403200:	aa26      	add	r2, sp, #152	; 0x98
  403202:	ab29      	add	r3, sp, #164	; 0xa4
  403204:	9501      	str	r5, [sp, #4]
  403206:	9000      	str	r0, [sp, #0]
  403208:	9203      	str	r2, [sp, #12]
  40320a:	9304      	str	r3, [sp, #16]
  40320c:	9102      	str	r1, [sp, #8]
  40320e:	980d      	ldr	r0, [sp, #52]	; 0x34
  403210:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
  403214:	f000 f944 	bl	4034a0 <_dtoa_r>
  403218:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  40321a:	4607      	mov	r7, r0
  40321c:	e677      	b.n	402f0e <_svfprintf_r+0x10a2>
  40321e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403220:	2003      	movs	r0, #3
  403222:	a925      	add	r1, sp, #148	; 0x94
  403224:	aa26      	add	r2, sp, #152	; 0x98
  403226:	ab29      	add	r3, sp, #164	; 0xa4
  403228:	9401      	str	r4, [sp, #4]
  40322a:	e7ec      	b.n	403206 <_svfprintf_r+0x139a>
  40322c:	9d25      	ldr	r5, [sp, #148]	; 0x94
  40322e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  403230:	2d00      	cmp	r5, #0
  403232:	9514      	str	r5, [sp, #80]	; 0x50
  403234:	dd63      	ble.n	4032fe <_svfprintf_r+0x1492>
  403236:	bbb4      	cbnz	r4, 4032a6 <_svfprintf_r+0x143a>
  403238:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40323a:	07e8      	lsls	r0, r5, #31
  40323c:	d433      	bmi.n	4032a6 <_svfprintf_r+0x143a>
  40323e:	9c14      	ldr	r4, [sp, #80]	; 0x50
  403240:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  403244:	e69c      	b.n	402f80 <_svfprintf_r+0x1114>
  403246:	9b29      	ldr	r3, [sp, #164]	; 0xa4
  403248:	e67a      	b.n	402f40 <_svfprintf_r+0x10d4>
  40324a:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
  40324e:	4d3e      	ldr	r5, [pc, #248]	; (403348 <_svfprintf_r+0x14dc>)
  403250:	17cb      	asrs	r3, r1, #31
  403252:	fb85 5001 	smull	r5, r0, r5, r1
  403256:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
  40325a:	eb00 0380 	add.w	r3, r0, r0, lsl #2
  40325e:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
  403262:	2809      	cmp	r0, #9
  403264:	4613      	mov	r3, r2
  403266:	f101 0230 	add.w	r2, r1, #48	; 0x30
  40326a:	701a      	strb	r2, [r3, #0]
  40326c:	4601      	mov	r1, r0
  40326e:	f103 32ff 	add.w	r2, r3, #4294967295
  403272:	dcec      	bgt.n	40324e <_svfprintf_r+0x13e2>
  403274:	f100 0130 	add.w	r1, r0, #48	; 0x30
  403278:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
  40327c:	b2c9      	uxtb	r1, r1
  40327e:	4294      	cmp	r4, r2
  403280:	f803 1c01 	strb.w	r1, [r3, #-1]
  403284:	d95a      	bls.n	40333c <_svfprintf_r+0x14d0>
  403286:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
  40328a:	461a      	mov	r2, r3
  40328c:	e001      	b.n	403292 <_svfprintf_r+0x1426>
  40328e:	f812 1b01 	ldrb.w	r1, [r2], #1
  403292:	42a2      	cmp	r2, r4
  403294:	f800 1f01 	strb.w	r1, [r0, #1]!
  403298:	d1f9      	bne.n	40328e <_svfprintf_r+0x1422>
  40329a:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
  40329e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
  4032a2:	3bf6      	subs	r3, #246	; 0xf6
  4032a4:	e772      	b.n	40318c <_svfprintf_r+0x1320>
  4032a6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  4032a8:	1c6c      	adds	r4, r5, #1
  4032aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4032ac:	442c      	add	r4, r5
  4032ae:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  4032b2:	e665      	b.n	402f80 <_svfprintf_r+0x1114>
  4032b4:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
  4032b8:	2200      	movs	r2, #0
  4032ba:	2300      	movs	r3, #0
  4032bc:	f002 fdc8 	bl	405e50 <__aeabi_dcmpeq>
  4032c0:	2800      	cmp	r0, #0
  4032c2:	f47f af4a 	bne.w	40315a <_svfprintf_r+0x12ee>
  4032c6:	f1c5 0501 	rsb	r5, r5, #1
  4032ca:	9525      	str	r5, [sp, #148]	; 0x94
  4032cc:	442c      	add	r4, r5
  4032ce:	e624      	b.n	402f1a <_svfprintf_r+0x10ae>
  4032d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
  4032d2:	f04f 0867 	mov.w	r8, #103	; 0x67
  4032d6:	1c6c      	adds	r4, r5, #1
  4032d8:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  4032dc:	e650      	b.n	402f80 <_svfprintf_r+0x1114>
  4032de:	9d10      	ldr	r5, [sp, #64]	; 0x40
  4032e0:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
  4032e4:	682d      	ldr	r5, [r5, #0]
  4032e6:	f10c 0304 	add.w	r3, ip, #4
  4032ea:	2d00      	cmp	r5, #0
  4032ec:	f899 8001 	ldrb.w	r8, [r9, #1]
  4032f0:	950a      	str	r5, [sp, #40]	; 0x28
  4032f2:	9310      	str	r3, [sp, #64]	; 0x40
  4032f4:	4681      	mov	r9, r0
  4032f6:	f6be ae15 	bge.w	401f24 <_svfprintf_r+0xb8>
  4032fa:	f7fe be10 	b.w	401f1e <_svfprintf_r+0xb2>
  4032fe:	b97c      	cbnz	r4, 403320 <_svfprintf_r+0x14b4>
  403300:	9d09      	ldr	r5, [sp, #36]	; 0x24
  403302:	07e9      	lsls	r1, r5, #31
  403304:	d40c      	bmi.n	403320 <_svfprintf_r+0x14b4>
  403306:	2301      	movs	r3, #1
  403308:	461c      	mov	r4, r3
  40330a:	e639      	b.n	402f80 <_svfprintf_r+0x1114>
  40330c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
  403310:	f01c 0301 	ands.w	r3, ip, #1
  403314:	f47f af43 	bne.w	40319e <_svfprintf_r+0x1332>
  403318:	9314      	str	r3, [sp, #80]	; 0x50
  40331a:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  40331e:	e62f      	b.n	402f80 <_svfprintf_r+0x1114>
  403320:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  403322:	1cac      	adds	r4, r5, #2
  403324:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
  403328:	e62a      	b.n	402f80 <_svfprintf_r+0x1114>
  40332a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
  40332c:	230c      	movs	r3, #12
  40332e:	602b      	str	r3, [r5, #0]
  403330:	f04f 30ff 	mov.w	r0, #4294967295
  403334:	f7fe beba 	b.w	4020ac <_svfprintf_r+0x240>
  403338:	9b25      	ldr	r3, [sp, #148]	; 0x94
  40333a:	e713      	b.n	403164 <_svfprintf_r+0x12f8>
  40333c:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
  403340:	e724      	b.n	40318c <_svfprintf_r+0x1320>
  403342:	bf00      	nop
  403344:	00406cbc 	.word	0x00406cbc
  403348:	66666667 	.word	0x66666667

0040334c <register_fini>:
  40334c:	4b02      	ldr	r3, [pc, #8]	; (403358 <register_fini+0xc>)
  40334e:	b113      	cbz	r3, 403356 <register_fini+0xa>
  403350:	4802      	ldr	r0, [pc, #8]	; (40335c <register_fini+0x10>)
  403352:	f000 b805 	b.w	403360 <atexit>
  403356:	4770      	bx	lr
  403358:	00000000 	.word	0x00000000
  40335c:	004042d9 	.word	0x004042d9

00403360 <atexit>:
  403360:	4601      	mov	r1, r0
  403362:	2000      	movs	r0, #0
  403364:	4602      	mov	r2, r0
  403366:	4603      	mov	r3, r0
  403368:	f002 ba86 	b.w	405878 <__register_exitproc>

0040336c <quorem>:
  40336c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403370:	6903      	ldr	r3, [r0, #16]
  403372:	690d      	ldr	r5, [r1, #16]
  403374:	b083      	sub	sp, #12
  403376:	429d      	cmp	r5, r3
  403378:	4683      	mov	fp, r0
  40337a:	f300 808c 	bgt.w	403496 <quorem+0x12a>
  40337e:	3d01      	subs	r5, #1
  403380:	f101 0414 	add.w	r4, r1, #20
  403384:	f100 0a14 	add.w	sl, r0, #20
  403388:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
  40338c:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
  403390:	3201      	adds	r2, #1
  403392:	fbb3 f8f2 	udiv	r8, r3, r2
  403396:	00aa      	lsls	r2, r5, #2
  403398:	4691      	mov	r9, r2
  40339a:	9200      	str	r2, [sp, #0]
  40339c:	4452      	add	r2, sl
  40339e:	44a1      	add	r9, r4
  4033a0:	9201      	str	r2, [sp, #4]
  4033a2:	f1b8 0f00 	cmp.w	r8, #0
  4033a6:	d03e      	beq.n	403426 <quorem+0xba>
  4033a8:	2600      	movs	r6, #0
  4033aa:	4630      	mov	r0, r6
  4033ac:	4622      	mov	r2, r4
  4033ae:	4653      	mov	r3, sl
  4033b0:	468c      	mov	ip, r1
  4033b2:	f852 7b04 	ldr.w	r7, [r2], #4
  4033b6:	6819      	ldr	r1, [r3, #0]
  4033b8:	fa1f fe87 	uxth.w	lr, r7
  4033bc:	0c3f      	lsrs	r7, r7, #16
  4033be:	fb0e 6e08 	mla	lr, lr, r8, r6
  4033c2:	fb07 f608 	mul.w	r6, r7, r8
  4033c6:	eb06 461e 	add.w	r6, r6, lr, lsr #16
  4033ca:	fa1f fe8e 	uxth.w	lr, lr
  4033ce:	ebce 0e00 	rsb	lr, lr, r0
  4033d2:	b28f      	uxth	r7, r1
  4033d4:	b2b0      	uxth	r0, r6
  4033d6:	4477      	add	r7, lr
  4033d8:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
  4033dc:	eb00 4027 	add.w	r0, r0, r7, asr #16
  4033e0:	b2bf      	uxth	r7, r7
  4033e2:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
  4033e6:	4591      	cmp	r9, r2
  4033e8:	f843 7b04 	str.w	r7, [r3], #4
  4033ec:	ea4f 4020 	mov.w	r0, r0, asr #16
  4033f0:	ea4f 4616 	mov.w	r6, r6, lsr #16
  4033f4:	d2dd      	bcs.n	4033b2 <quorem+0x46>
  4033f6:	9a00      	ldr	r2, [sp, #0]
  4033f8:	4661      	mov	r1, ip
  4033fa:	f85a 3002 	ldr.w	r3, [sl, r2]
  4033fe:	b993      	cbnz	r3, 403426 <quorem+0xba>
  403400:	9a01      	ldr	r2, [sp, #4]
  403402:	1f13      	subs	r3, r2, #4
  403404:	459a      	cmp	sl, r3
  403406:	d20c      	bcs.n	403422 <quorem+0xb6>
  403408:	f852 3c04 	ldr.w	r3, [r2, #-4]
  40340c:	b94b      	cbnz	r3, 403422 <quorem+0xb6>
  40340e:	f1a2 0308 	sub.w	r3, r2, #8
  403412:	e002      	b.n	40341a <quorem+0xae>
  403414:	681a      	ldr	r2, [r3, #0]
  403416:	3b04      	subs	r3, #4
  403418:	b91a      	cbnz	r2, 403422 <quorem+0xb6>
  40341a:	459a      	cmp	sl, r3
  40341c:	f105 35ff 	add.w	r5, r5, #4294967295
  403420:	d3f8      	bcc.n	403414 <quorem+0xa8>
  403422:	f8cb 5010 	str.w	r5, [fp, #16]
  403426:	4658      	mov	r0, fp
  403428:	f001 fe6e 	bl	405108 <__mcmp>
  40342c:	2800      	cmp	r0, #0
  40342e:	db2e      	blt.n	40348e <quorem+0x122>
  403430:	f108 0801 	add.w	r8, r8, #1
  403434:	4653      	mov	r3, sl
  403436:	2200      	movs	r2, #0
  403438:	f854 6b04 	ldr.w	r6, [r4], #4
  40343c:	6818      	ldr	r0, [r3, #0]
  40343e:	b2b1      	uxth	r1, r6
  403440:	1a51      	subs	r1, r2, r1
  403442:	b287      	uxth	r7, r0
  403444:	0c36      	lsrs	r6, r6, #16
  403446:	4439      	add	r1, r7
  403448:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
  40344c:	eb00 4221 	add.w	r2, r0, r1, asr #16
  403450:	b289      	uxth	r1, r1
  403452:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
  403456:	45a1      	cmp	r9, r4
  403458:	f843 1b04 	str.w	r1, [r3], #4
  40345c:	ea4f 4222 	mov.w	r2, r2, asr #16
  403460:	d2ea      	bcs.n	403438 <quorem+0xcc>
  403462:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
  403466:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
  40346a:	b982      	cbnz	r2, 40348e <quorem+0x122>
  40346c:	1f1a      	subs	r2, r3, #4
  40346e:	4592      	cmp	sl, r2
  403470:	d20b      	bcs.n	40348a <quorem+0x11e>
  403472:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403476:	b942      	cbnz	r2, 40348a <quorem+0x11e>
  403478:	3b08      	subs	r3, #8
  40347a:	e002      	b.n	403482 <quorem+0x116>
  40347c:	681a      	ldr	r2, [r3, #0]
  40347e:	3b04      	subs	r3, #4
  403480:	b91a      	cbnz	r2, 40348a <quorem+0x11e>
  403482:	459a      	cmp	sl, r3
  403484:	f105 35ff 	add.w	r5, r5, #4294967295
  403488:	d3f8      	bcc.n	40347c <quorem+0x110>
  40348a:	f8cb 5010 	str.w	r5, [fp, #16]
  40348e:	4640      	mov	r0, r8
  403490:	b003      	add	sp, #12
  403492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403496:	2000      	movs	r0, #0
  403498:	b003      	add	sp, #12
  40349a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40349e:	bf00      	nop

004034a0 <_dtoa_r>:
  4034a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4034a4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4034a6:	b09b      	sub	sp, #108	; 0x6c
  4034a8:	4604      	mov	r4, r0
  4034aa:	4692      	mov	sl, r2
  4034ac:	469b      	mov	fp, r3
  4034ae:	9d27      	ldr	r5, [sp, #156]	; 0x9c
  4034b0:	b141      	cbz	r1, 4034c4 <_dtoa_r+0x24>
  4034b2:	6c43      	ldr	r3, [r0, #68]	; 0x44
  4034b4:	2201      	movs	r2, #1
  4034b6:	409a      	lsls	r2, r3
  4034b8:	604b      	str	r3, [r1, #4]
  4034ba:	608a      	str	r2, [r1, #8]
  4034bc:	f001 fc2e 	bl	404d1c <_Bfree>
  4034c0:	2300      	movs	r3, #0
  4034c2:	6423      	str	r3, [r4, #64]	; 0x40
  4034c4:	f1bb 0f00 	cmp.w	fp, #0
  4034c8:	46d9      	mov	r9, fp
  4034ca:	db33      	blt.n	403534 <_dtoa_r+0x94>
  4034cc:	2300      	movs	r3, #0
  4034ce:	602b      	str	r3, [r5, #0]
  4034d0:	4ba5      	ldr	r3, [pc, #660]	; (403768 <_dtoa_r+0x2c8>)
  4034d2:	461a      	mov	r2, r3
  4034d4:	ea09 0303 	and.w	r3, r9, r3
  4034d8:	4293      	cmp	r3, r2
  4034da:	d014      	beq.n	403506 <_dtoa_r+0x66>
  4034dc:	4650      	mov	r0, sl
  4034de:	4659      	mov	r1, fp
  4034e0:	2200      	movs	r2, #0
  4034e2:	2300      	movs	r3, #0
  4034e4:	f002 fcb4 	bl	405e50 <__aeabi_dcmpeq>
  4034e8:	4680      	mov	r8, r0
  4034ea:	b348      	cbz	r0, 403540 <_dtoa_r+0xa0>
  4034ec:	9e26      	ldr	r6, [sp, #152]	; 0x98
  4034ee:	9d28      	ldr	r5, [sp, #160]	; 0xa0
  4034f0:	2301      	movs	r3, #1
  4034f2:	6033      	str	r3, [r6, #0]
  4034f4:	2d00      	cmp	r5, #0
  4034f6:	f000 80ca 	beq.w	40368e <_dtoa_r+0x1ee>
  4034fa:	489c      	ldr	r0, [pc, #624]	; (40376c <_dtoa_r+0x2cc>)
  4034fc:	6028      	str	r0, [r5, #0]
  4034fe:	3801      	subs	r0, #1
  403500:	b01b      	add	sp, #108	; 0x6c
  403502:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403506:	9d26      	ldr	r5, [sp, #152]	; 0x98
  403508:	f242 730f 	movw	r3, #9999	; 0x270f
  40350c:	602b      	str	r3, [r5, #0]
  40350e:	f1ba 0f00 	cmp.w	sl, #0
  403512:	f000 80a5 	beq.w	403660 <_dtoa_r+0x1c0>
  403516:	4896      	ldr	r0, [pc, #600]	; (403770 <_dtoa_r+0x2d0>)
  403518:	9e28      	ldr	r6, [sp, #160]	; 0xa0
  40351a:	2e00      	cmp	r6, #0
  40351c:	d0f0      	beq.n	403500 <_dtoa_r+0x60>
  40351e:	78c3      	ldrb	r3, [r0, #3]
  403520:	2b00      	cmp	r3, #0
  403522:	f000 80b6 	beq.w	403692 <_dtoa_r+0x1f2>
  403526:	f100 0308 	add.w	r3, r0, #8
  40352a:	9d28      	ldr	r5, [sp, #160]	; 0xa0
  40352c:	602b      	str	r3, [r5, #0]
  40352e:	b01b      	add	sp, #108	; 0x6c
  403530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403534:	2301      	movs	r3, #1
  403536:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
  40353a:	602b      	str	r3, [r5, #0]
  40353c:	46cb      	mov	fp, r9
  40353e:	e7c7      	b.n	4034d0 <_dtoa_r+0x30>
  403540:	aa19      	add	r2, sp, #100	; 0x64
  403542:	ab18      	add	r3, sp, #96	; 0x60
  403544:	e88d 000c 	stmia.w	sp, {r2, r3}
  403548:	4620      	mov	r0, r4
  40354a:	4652      	mov	r2, sl
  40354c:	465b      	mov	r3, fp
  40354e:	f001 fe6b 	bl	405228 <__d2b>
  403552:	ea5f 5519 	movs.w	r5, r9, lsr #20
  403556:	900a      	str	r0, [sp, #40]	; 0x28
  403558:	f040 808b 	bne.w	403672 <_dtoa_r+0x1d2>
  40355c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40355e:	9d19      	ldr	r5, [sp, #100]	; 0x64
  403560:	f46f 6382 	mvn.w	r3, #1040	; 0x410
  403564:	443d      	add	r5, r7
  403566:	429d      	cmp	r5, r3
  403568:	f2c0 8295 	blt.w	403a96 <_dtoa_r+0x5f6>
  40356c:	331f      	adds	r3, #31
  40356e:	f205 4212 	addw	r2, r5, #1042	; 0x412
  403572:	1b5b      	subs	r3, r3, r5
  403574:	fa09 f303 	lsl.w	r3, r9, r3
  403578:	fa2a f202 	lsr.w	r2, sl, r2
  40357c:	ea43 0002 	orr.w	r0, r3, r2
  403580:	f7fe f8fa 	bl	401778 <__aeabi_ui2d>
  403584:	2601      	movs	r6, #1
  403586:	3d01      	subs	r5, #1
  403588:	46b8      	mov	r8, r7
  40358a:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40358e:	9616      	str	r6, [sp, #88]	; 0x58
  403590:	2200      	movs	r2, #0
  403592:	4b78      	ldr	r3, [pc, #480]	; (403774 <_dtoa_r+0x2d4>)
  403594:	f7fd ffb2 	bl	4014fc <__aeabi_dsub>
  403598:	a36d      	add	r3, pc, #436	; (adr r3, 403750 <_dtoa_r+0x2b0>)
  40359a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40359e:	f002 f9ef 	bl	405980 <__aeabi_dmul>
  4035a2:	a36d      	add	r3, pc, #436	; (adr r3, 403758 <_dtoa_r+0x2b8>)
  4035a4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035a8:	f7fd ffaa 	bl	401500 <__adddf3>
  4035ac:	4606      	mov	r6, r0
  4035ae:	4628      	mov	r0, r5
  4035b0:	460f      	mov	r7, r1
  4035b2:	f7fe f8f1 	bl	401798 <__aeabi_i2d>
  4035b6:	a36a      	add	r3, pc, #424	; (adr r3, 403760 <_dtoa_r+0x2c0>)
  4035b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4035bc:	f002 f9e0 	bl	405980 <__aeabi_dmul>
  4035c0:	4602      	mov	r2, r0
  4035c2:	460b      	mov	r3, r1
  4035c4:	4630      	mov	r0, r6
  4035c6:	4639      	mov	r1, r7
  4035c8:	f7fd ff9a 	bl	401500 <__adddf3>
  4035cc:	4606      	mov	r6, r0
  4035ce:	460f      	mov	r7, r1
  4035d0:	f002 fc70 	bl	405eb4 <__aeabi_d2iz>
  4035d4:	4639      	mov	r1, r7
  4035d6:	9007      	str	r0, [sp, #28]
  4035d8:	2200      	movs	r2, #0
  4035da:	4630      	mov	r0, r6
  4035dc:	2300      	movs	r3, #0
  4035de:	f002 fc41 	bl	405e64 <__aeabi_dcmplt>
  4035e2:	2800      	cmp	r0, #0
  4035e4:	f040 8229 	bne.w	403a3a <_dtoa_r+0x59a>
  4035e8:	9e07      	ldr	r6, [sp, #28]
  4035ea:	2e16      	cmp	r6, #22
  4035ec:	f200 8222 	bhi.w	403a34 <_dtoa_r+0x594>
  4035f0:	4961      	ldr	r1, [pc, #388]	; (403778 <_dtoa_r+0x2d8>)
  4035f2:	4652      	mov	r2, sl
  4035f4:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
  4035f8:	465b      	mov	r3, fp
  4035fa:	e9d1 0100 	ldrd	r0, r1, [r1]
  4035fe:	f002 fc4f 	bl	405ea0 <__aeabi_dcmpgt>
  403602:	2800      	cmp	r0, #0
  403604:	f000 824c 	beq.w	403aa0 <_dtoa_r+0x600>
  403608:	3e01      	subs	r6, #1
  40360a:	9607      	str	r6, [sp, #28]
  40360c:	2600      	movs	r6, #0
  40360e:	960e      	str	r6, [sp, #56]	; 0x38
  403610:	ebc5 0508 	rsb	r5, r5, r8
  403614:	3d01      	subs	r5, #1
  403616:	9506      	str	r5, [sp, #24]
  403618:	f100 8226 	bmi.w	403a68 <_dtoa_r+0x5c8>
  40361c:	2500      	movs	r5, #0
  40361e:	9508      	str	r5, [sp, #32]
  403620:	9e07      	ldr	r6, [sp, #28]
  403622:	2e00      	cmp	r6, #0
  403624:	f2c0 8217 	blt.w	403a56 <_dtoa_r+0x5b6>
  403628:	9d06      	ldr	r5, [sp, #24]
  40362a:	960d      	str	r6, [sp, #52]	; 0x34
  40362c:	4435      	add	r5, r6
  40362e:	2600      	movs	r6, #0
  403630:	9506      	str	r5, [sp, #24]
  403632:	960c      	str	r6, [sp, #48]	; 0x30
  403634:	9d24      	ldr	r5, [sp, #144]	; 0x90
  403636:	2d09      	cmp	r5, #9
  403638:	d82d      	bhi.n	403696 <_dtoa_r+0x1f6>
  40363a:	2d05      	cmp	r5, #5
  40363c:	bfc4      	itt	gt
  40363e:	3d04      	subgt	r5, #4
  403640:	9524      	strgt	r5, [sp, #144]	; 0x90
  403642:	9e24      	ldr	r6, [sp, #144]	; 0x90
  403644:	bfc8      	it	gt
  403646:	2500      	movgt	r5, #0
  403648:	f1a6 0302 	sub.w	r3, r6, #2
  40364c:	bfd8      	it	le
  40364e:	2501      	movle	r5, #1
  403650:	2b03      	cmp	r3, #3
  403652:	d822      	bhi.n	40369a <_dtoa_r+0x1fa>
  403654:	e8df f013 	tbh	[pc, r3, lsl #1]
  403658:	029e03b7 	.word	0x029e03b7
  40365c:	049a03c0 	.word	0x049a03c0
  403660:	4a46      	ldr	r2, [pc, #280]	; (40377c <_dtoa_r+0x2dc>)
  403662:	4b43      	ldr	r3, [pc, #268]	; (403770 <_dtoa_r+0x2d0>)
  403664:	f3c9 0013 	ubfx	r0, r9, #0, #20
  403668:	2800      	cmp	r0, #0
  40366a:	bf0c      	ite	eq
  40366c:	4610      	moveq	r0, r2
  40366e:	4618      	movne	r0, r3
  403670:	e752      	b.n	403518 <_dtoa_r+0x78>
  403672:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403676:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  40367a:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
  40367e:	4650      	mov	r0, sl
  403680:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
  403684:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403688:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
  40368c:	e780      	b.n	403590 <_dtoa_r+0xf0>
  40368e:	483c      	ldr	r0, [pc, #240]	; (403780 <_dtoa_r+0x2e0>)
  403690:	e736      	b.n	403500 <_dtoa_r+0x60>
  403692:	1cc3      	adds	r3, r0, #3
  403694:	e749      	b.n	40352a <_dtoa_r+0x8a>
  403696:	2500      	movs	r5, #0
  403698:	9524      	str	r5, [sp, #144]	; 0x90
  40369a:	2500      	movs	r5, #0
  40369c:	6465      	str	r5, [r4, #68]	; 0x44
  40369e:	4629      	mov	r1, r5
  4036a0:	4620      	mov	r0, r4
  4036a2:	f001 fb15 	bl	404cd0 <_Balloc>
  4036a6:	f04f 39ff 	mov.w	r9, #4294967295
  4036aa:	2601      	movs	r6, #1
  4036ac:	9009      	str	r0, [sp, #36]	; 0x24
  4036ae:	9525      	str	r5, [sp, #148]	; 0x94
  4036b0:	6420      	str	r0, [r4, #64]	; 0x40
  4036b2:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  4036b6:	960b      	str	r6, [sp, #44]	; 0x2c
  4036b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4036ba:	2b00      	cmp	r3, #0
  4036bc:	f2c0 80d2 	blt.w	403864 <_dtoa_r+0x3c4>
  4036c0:	9e07      	ldr	r6, [sp, #28]
  4036c2:	2e0e      	cmp	r6, #14
  4036c4:	f300 80ce 	bgt.w	403864 <_dtoa_r+0x3c4>
  4036c8:	4b2b      	ldr	r3, [pc, #172]	; (403778 <_dtoa_r+0x2d8>)
  4036ca:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  4036ce:	e9d3 0100 	ldrd	r0, r1, [r3]
  4036d2:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4036d6:	9925      	ldr	r1, [sp, #148]	; 0x94
  4036d8:	2900      	cmp	r1, #0
  4036da:	f2c0 8380 	blt.w	403dde <_dtoa_r+0x93e>
  4036de:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4036e2:	4659      	mov	r1, fp
  4036e4:	4650      	mov	r0, sl
  4036e6:	f002 fa75 	bl	405bd4 <__aeabi_ddiv>
  4036ea:	f002 fbe3 	bl	405eb4 <__aeabi_d2iz>
  4036ee:	4605      	mov	r5, r0
  4036f0:	f7fe f852 	bl	401798 <__aeabi_i2d>
  4036f4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4036f8:	f002 f942 	bl	405980 <__aeabi_dmul>
  4036fc:	4602      	mov	r2, r0
  4036fe:	460b      	mov	r3, r1
  403700:	4650      	mov	r0, sl
  403702:	4659      	mov	r1, fp
  403704:	f7fd fefa 	bl	4014fc <__aeabi_dsub>
  403708:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40370a:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40370e:	f1b9 0f01 	cmp.w	r9, #1
  403712:	4606      	mov	r6, r0
  403714:	460f      	mov	r7, r1
  403716:	7013      	strb	r3, [r2, #0]
  403718:	f102 0b01 	add.w	fp, r2, #1
  40371c:	d064      	beq.n	4037e8 <_dtoa_r+0x348>
  40371e:	2200      	movs	r2, #0
  403720:	4b18      	ldr	r3, [pc, #96]	; (403784 <_dtoa_r+0x2e4>)
  403722:	f002 f92d 	bl	405980 <__aeabi_dmul>
  403726:	2200      	movs	r2, #0
  403728:	2300      	movs	r3, #0
  40372a:	4606      	mov	r6, r0
  40372c:	460f      	mov	r7, r1
  40372e:	f002 fb8f 	bl	405e50 <__aeabi_dcmpeq>
  403732:	2800      	cmp	r0, #0
  403734:	f040 8081 	bne.w	40383a <_dtoa_r+0x39a>
  403738:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
  40373c:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40373e:	44c8      	add	r8, r9
  403740:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
  403744:	f105 0902 	add.w	r9, r5, #2
  403748:	9403      	str	r4, [sp, #12]
  40374a:	e028      	b.n	40379e <_dtoa_r+0x2fe>
  40374c:	f3af 8000 	nop.w
  403750:	636f4361 	.word	0x636f4361
  403754:	3fd287a7 	.word	0x3fd287a7
  403758:	8b60c8b3 	.word	0x8b60c8b3
  40375c:	3fc68a28 	.word	0x3fc68a28
  403760:	509f79fb 	.word	0x509f79fb
  403764:	3fd34413 	.word	0x3fd34413
  403768:	7ff00000 	.word	0x7ff00000
  40376c:	00406cc5 	.word	0x00406cc5
  403770:	00406ce4 	.word	0x00406ce4
  403774:	3ff80000 	.word	0x3ff80000
  403778:	00406cf8 	.word	0x00406cf8
  40377c:	00406cd8 	.word	0x00406cd8
  403780:	00406cc4 	.word	0x00406cc4
  403784:	40240000 	.word	0x40240000
  403788:	f002 f8fa 	bl	405980 <__aeabi_dmul>
  40378c:	2200      	movs	r2, #0
  40378e:	2300      	movs	r3, #0
  403790:	4606      	mov	r6, r0
  403792:	460f      	mov	r7, r1
  403794:	f002 fb5c 	bl	405e50 <__aeabi_dcmpeq>
  403798:	2800      	cmp	r0, #0
  40379a:	f040 83c1 	bne.w	403f20 <_dtoa_r+0xa80>
  40379e:	4652      	mov	r2, sl
  4037a0:	465b      	mov	r3, fp
  4037a2:	4630      	mov	r0, r6
  4037a4:	4639      	mov	r1, r7
  4037a6:	f002 fa15 	bl	405bd4 <__aeabi_ddiv>
  4037aa:	f002 fb83 	bl	405eb4 <__aeabi_d2iz>
  4037ae:	4605      	mov	r5, r0
  4037b0:	f7fd fff2 	bl	401798 <__aeabi_i2d>
  4037b4:	4652      	mov	r2, sl
  4037b6:	465b      	mov	r3, fp
  4037b8:	f002 f8e2 	bl	405980 <__aeabi_dmul>
  4037bc:	4602      	mov	r2, r0
  4037be:	460b      	mov	r3, r1
  4037c0:	4630      	mov	r0, r6
  4037c2:	4639      	mov	r1, r7
  4037c4:	f7fd fe9a 	bl	4014fc <__aeabi_dsub>
  4037c8:	f105 0e30 	add.w	lr, r5, #48	; 0x30
  4037cc:	45c1      	cmp	r9, r8
  4037ce:	f809 ec01 	strb.w	lr, [r9, #-1]
  4037d2:	464c      	mov	r4, r9
  4037d4:	4606      	mov	r6, r0
  4037d6:	460f      	mov	r7, r1
  4037d8:	f04f 0200 	mov.w	r2, #0
  4037dc:	4ba7      	ldr	r3, [pc, #668]	; (403a7c <_dtoa_r+0x5dc>)
  4037de:	f109 0901 	add.w	r9, r9, #1
  4037e2:	d1d1      	bne.n	403788 <_dtoa_r+0x2e8>
  4037e4:	46a3      	mov	fp, r4
  4037e6:	9c03      	ldr	r4, [sp, #12]
  4037e8:	4632      	mov	r2, r6
  4037ea:	463b      	mov	r3, r7
  4037ec:	4630      	mov	r0, r6
  4037ee:	4639      	mov	r1, r7
  4037f0:	f7fd fe86 	bl	401500 <__adddf3>
  4037f4:	4606      	mov	r6, r0
  4037f6:	460f      	mov	r7, r1
  4037f8:	4632      	mov	r2, r6
  4037fa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4037fe:	463b      	mov	r3, r7
  403800:	f002 fb30 	bl	405e64 <__aeabi_dcmplt>
  403804:	b940      	cbnz	r0, 403818 <_dtoa_r+0x378>
  403806:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  40380a:	4632      	mov	r2, r6
  40380c:	463b      	mov	r3, r7
  40380e:	f002 fb1f 	bl	405e50 <__aeabi_dcmpeq>
  403812:	b190      	cbz	r0, 40383a <_dtoa_r+0x39a>
  403814:	07eb      	lsls	r3, r5, #31
  403816:	d510      	bpl.n	40383a <_dtoa_r+0x39a>
  403818:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
  40381c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40381e:	e005      	b.n	40382c <_dtoa_r+0x38c>
  403820:	429a      	cmp	r2, r3
  403822:	f000 8429 	beq.w	404078 <_dtoa_r+0xbd8>
  403826:	f813 5c01 	ldrb.w	r5, [r3, #-1]
  40382a:	469b      	mov	fp, r3
  40382c:	2d39      	cmp	r5, #57	; 0x39
  40382e:	f10b 33ff 	add.w	r3, fp, #4294967295
  403832:	d0f5      	beq.n	403820 <_dtoa_r+0x380>
  403834:	1c6a      	adds	r2, r5, #1
  403836:	b2d2      	uxtb	r2, r2
  403838:	701a      	strb	r2, [r3, #0]
  40383a:	4620      	mov	r0, r4
  40383c:	990a      	ldr	r1, [sp, #40]	; 0x28
  40383e:	f001 fa6d 	bl	404d1c <_Bfree>
  403842:	9e07      	ldr	r6, [sp, #28]
  403844:	9d26      	ldr	r5, [sp, #152]	; 0x98
  403846:	1c73      	adds	r3, r6, #1
  403848:	9e28      	ldr	r6, [sp, #160]	; 0xa0
  40384a:	2200      	movs	r2, #0
  40384c:	f88b 2000 	strb.w	r2, [fp]
  403850:	602b      	str	r3, [r5, #0]
  403852:	2e00      	cmp	r6, #0
  403854:	f000 8325 	beq.w	403ea2 <_dtoa_r+0xa02>
  403858:	9809      	ldr	r0, [sp, #36]	; 0x24
  40385a:	f8c6 b000 	str.w	fp, [r6]
  40385e:	b01b      	add	sp, #108	; 0x6c
  403860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403864:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403866:	2d00      	cmp	r5, #0
  403868:	f000 8103 	beq.w	403a72 <_dtoa_r+0x5d2>
  40386c:	9e24      	ldr	r6, [sp, #144]	; 0x90
  40386e:	2e01      	cmp	r6, #1
  403870:	f340 82dc 	ble.w	403e2c <_dtoa_r+0x98c>
  403874:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  403876:	f109 37ff 	add.w	r7, r9, #4294967295
  40387a:	42be      	cmp	r6, r7
  40387c:	f2c0 8389 	blt.w	403f92 <_dtoa_r+0xaf2>
  403880:	1bf7      	subs	r7, r6, r7
  403882:	f1b9 0f00 	cmp.w	r9, #0
  403886:	f2c0 8487 	blt.w	404198 <_dtoa_r+0xcf8>
  40388a:	9d08      	ldr	r5, [sp, #32]
  40388c:	464b      	mov	r3, r9
  40388e:	9e08      	ldr	r6, [sp, #32]
  403890:	4620      	mov	r0, r4
  403892:	441e      	add	r6, r3
  403894:	9608      	str	r6, [sp, #32]
  403896:	9e06      	ldr	r6, [sp, #24]
  403898:	2101      	movs	r1, #1
  40389a:	441e      	add	r6, r3
  40389c:	9606      	str	r6, [sp, #24]
  40389e:	f001 fadf 	bl	404e60 <__i2b>
  4038a2:	4606      	mov	r6, r0
  4038a4:	b165      	cbz	r5, 4038c0 <_dtoa_r+0x420>
  4038a6:	9806      	ldr	r0, [sp, #24]
  4038a8:	2800      	cmp	r0, #0
  4038aa:	dd09      	ble.n	4038c0 <_dtoa_r+0x420>
  4038ac:	4603      	mov	r3, r0
  4038ae:	9908      	ldr	r1, [sp, #32]
  4038b0:	42ab      	cmp	r3, r5
  4038b2:	bfa8      	it	ge
  4038b4:	462b      	movge	r3, r5
  4038b6:	1ac9      	subs	r1, r1, r3
  4038b8:	1ac0      	subs	r0, r0, r3
  4038ba:	9108      	str	r1, [sp, #32]
  4038bc:	1aed      	subs	r5, r5, r3
  4038be:	9006      	str	r0, [sp, #24]
  4038c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4038c2:	2a00      	cmp	r2, #0
  4038c4:	dd1d      	ble.n	403902 <_dtoa_r+0x462>
  4038c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4038c8:	2b00      	cmp	r3, #0
  4038ca:	f000 8358 	beq.w	403f7e <_dtoa_r+0xade>
  4038ce:	2f00      	cmp	r7, #0
  4038d0:	dd11      	ble.n	4038f6 <_dtoa_r+0x456>
  4038d2:	4631      	mov	r1, r6
  4038d4:	463a      	mov	r2, r7
  4038d6:	4620      	mov	r0, r4
  4038d8:	f001 fb6a 	bl	404fb0 <__pow5mult>
  4038dc:	4606      	mov	r6, r0
  4038de:	4631      	mov	r1, r6
  4038e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4038e2:	4620      	mov	r0, r4
  4038e4:	f001 fac6 	bl	404e74 <__multiply>
  4038e8:	990a      	ldr	r1, [sp, #40]	; 0x28
  4038ea:	4680      	mov	r8, r0
  4038ec:	4620      	mov	r0, r4
  4038ee:	f001 fa15 	bl	404d1c <_Bfree>
  4038f2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
  4038f6:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
  4038fa:	ebbe 0207 	subs.w	r2, lr, r7
  4038fe:	f040 828f 	bne.w	403e20 <_dtoa_r+0x980>
  403902:	4620      	mov	r0, r4
  403904:	2101      	movs	r1, #1
  403906:	f001 faab 	bl	404e60 <__i2b>
  40390a:	4680      	mov	r8, r0
  40390c:	980d      	ldr	r0, [sp, #52]	; 0x34
  40390e:	2800      	cmp	r0, #0
  403910:	dd05      	ble.n	40391e <_dtoa_r+0x47e>
  403912:	4641      	mov	r1, r8
  403914:	4620      	mov	r0, r4
  403916:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403918:	f001 fb4a 	bl	404fb0 <__pow5mult>
  40391c:	4680      	mov	r8, r0
  40391e:	9924      	ldr	r1, [sp, #144]	; 0x90
  403920:	2901      	cmp	r1, #1
  403922:	f340 82c1 	ble.w	403ea8 <_dtoa_r+0xa08>
  403926:	2700      	movs	r7, #0
  403928:	980d      	ldr	r0, [sp, #52]	; 0x34
  40392a:	2800      	cmp	r0, #0
  40392c:	f040 82af 	bne.w	403e8e <_dtoa_r+0x9ee>
  403930:	2001      	movs	r0, #1
  403932:	9b06      	ldr	r3, [sp, #24]
  403934:	4403      	add	r3, r0
  403936:	f013 031f 	ands.w	r3, r3, #31
  40393a:	f000 80a1 	beq.w	403a80 <_dtoa_r+0x5e0>
  40393e:	f1c3 0220 	rsb	r2, r3, #32
  403942:	2a04      	cmp	r2, #4
  403944:	f340 84b7 	ble.w	4042b6 <_dtoa_r+0xe16>
  403948:	9908      	ldr	r1, [sp, #32]
  40394a:	9a06      	ldr	r2, [sp, #24]
  40394c:	f1c3 031c 	rsb	r3, r3, #28
  403950:	4419      	add	r1, r3
  403952:	441a      	add	r2, r3
  403954:	9108      	str	r1, [sp, #32]
  403956:	441d      	add	r5, r3
  403958:	9206      	str	r2, [sp, #24]
  40395a:	9908      	ldr	r1, [sp, #32]
  40395c:	2900      	cmp	r1, #0
  40395e:	dd05      	ble.n	40396c <_dtoa_r+0x4cc>
  403960:	990a      	ldr	r1, [sp, #40]	; 0x28
  403962:	9a08      	ldr	r2, [sp, #32]
  403964:	4620      	mov	r0, r4
  403966:	f001 fb71 	bl	40504c <__lshift>
  40396a:	900a      	str	r0, [sp, #40]	; 0x28
  40396c:	9a06      	ldr	r2, [sp, #24]
  40396e:	2a00      	cmp	r2, #0
  403970:	dd04      	ble.n	40397c <_dtoa_r+0x4dc>
  403972:	4641      	mov	r1, r8
  403974:	4620      	mov	r0, r4
  403976:	f001 fb69 	bl	40504c <__lshift>
  40397a:	4680      	mov	r8, r0
  40397c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40397e:	2b00      	cmp	r3, #0
  403980:	f040 826a 	bne.w	403e58 <_dtoa_r+0x9b8>
  403984:	f1b9 0f00 	cmp.w	r9, #0
  403988:	f340 82a6 	ble.w	403ed8 <_dtoa_r+0xa38>
  40398c:	980b      	ldr	r0, [sp, #44]	; 0x2c
  40398e:	2800      	cmp	r0, #0
  403990:	f040 8088 	bne.w	403aa4 <_dtoa_r+0x604>
  403994:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403996:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403998:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  40399c:	e006      	b.n	4039ac <_dtoa_r+0x50c>
  40399e:	4639      	mov	r1, r7
  4039a0:	4620      	mov	r0, r4
  4039a2:	220a      	movs	r2, #10
  4039a4:	2300      	movs	r3, #0
  4039a6:	f001 f9c3 	bl	404d30 <__multadd>
  4039aa:	4607      	mov	r7, r0
  4039ac:	4638      	mov	r0, r7
  4039ae:	4641      	mov	r1, r8
  4039b0:	f7ff fcdc 	bl	40336c <quorem>
  4039b4:	3030      	adds	r0, #48	; 0x30
  4039b6:	f80b 0005 	strb.w	r0, [fp, r5]
  4039ba:	3501      	adds	r5, #1
  4039bc:	45a9      	cmp	r9, r5
  4039be:	dcee      	bgt.n	40399e <_dtoa_r+0x4fe>
  4039c0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  4039c4:	4682      	mov	sl, r0
  4039c6:	970a      	str	r7, [sp, #40]	; 0x28
  4039c8:	f1b9 0f01 	cmp.w	r9, #1
  4039cc:	bfac      	ite	ge
  4039ce:	44cb      	addge	fp, r9
  4039d0:	f10b 0b01 	addlt.w	fp, fp, #1
  4039d4:	2500      	movs	r5, #0
  4039d6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4039d8:	2201      	movs	r2, #1
  4039da:	4620      	mov	r0, r4
  4039dc:	f001 fb36 	bl	40504c <__lshift>
  4039e0:	4641      	mov	r1, r8
  4039e2:	900a      	str	r0, [sp, #40]	; 0x28
  4039e4:	f001 fb90 	bl	405108 <__mcmp>
  4039e8:	2800      	cmp	r0, #0
  4039ea:	f340 8309 	ble.w	404000 <_dtoa_r+0xb60>
  4039ee:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
  4039f2:	9909      	ldr	r1, [sp, #36]	; 0x24
  4039f4:	e005      	b.n	403a02 <_dtoa_r+0x562>
  4039f6:	4299      	cmp	r1, r3
  4039f8:	f000 828b 	beq.w	403f12 <_dtoa_r+0xa72>
  4039fc:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  403a00:	469b      	mov	fp, r3
  403a02:	2a39      	cmp	r2, #57	; 0x39
  403a04:	f10b 33ff 	add.w	r3, fp, #4294967295
  403a08:	d0f5      	beq.n	4039f6 <_dtoa_r+0x556>
  403a0a:	3201      	adds	r2, #1
  403a0c:	701a      	strb	r2, [r3, #0]
  403a0e:	4641      	mov	r1, r8
  403a10:	4620      	mov	r0, r4
  403a12:	f001 f983 	bl	404d1c <_Bfree>
  403a16:	2e00      	cmp	r6, #0
  403a18:	f43f af0f 	beq.w	40383a <_dtoa_r+0x39a>
  403a1c:	b12d      	cbz	r5, 403a2a <_dtoa_r+0x58a>
  403a1e:	42b5      	cmp	r5, r6
  403a20:	d003      	beq.n	403a2a <_dtoa_r+0x58a>
  403a22:	4629      	mov	r1, r5
  403a24:	4620      	mov	r0, r4
  403a26:	f001 f979 	bl	404d1c <_Bfree>
  403a2a:	4631      	mov	r1, r6
  403a2c:	4620      	mov	r0, r4
  403a2e:	f001 f975 	bl	404d1c <_Bfree>
  403a32:	e702      	b.n	40383a <_dtoa_r+0x39a>
  403a34:	2601      	movs	r6, #1
  403a36:	960e      	str	r6, [sp, #56]	; 0x38
  403a38:	e5ea      	b.n	403610 <_dtoa_r+0x170>
  403a3a:	9807      	ldr	r0, [sp, #28]
  403a3c:	f7fd feac 	bl	401798 <__aeabi_i2d>
  403a40:	4632      	mov	r2, r6
  403a42:	463b      	mov	r3, r7
  403a44:	f002 fa04 	bl	405e50 <__aeabi_dcmpeq>
  403a48:	2800      	cmp	r0, #0
  403a4a:	f47f adcd 	bne.w	4035e8 <_dtoa_r+0x148>
  403a4e:	9e07      	ldr	r6, [sp, #28]
  403a50:	3e01      	subs	r6, #1
  403a52:	9607      	str	r6, [sp, #28]
  403a54:	e5c8      	b.n	4035e8 <_dtoa_r+0x148>
  403a56:	9e07      	ldr	r6, [sp, #28]
  403a58:	9d08      	ldr	r5, [sp, #32]
  403a5a:	1bad      	subs	r5, r5, r6
  403a5c:	9508      	str	r5, [sp, #32]
  403a5e:	4275      	negs	r5, r6
  403a60:	2600      	movs	r6, #0
  403a62:	950c      	str	r5, [sp, #48]	; 0x30
  403a64:	960d      	str	r6, [sp, #52]	; 0x34
  403a66:	e5e5      	b.n	403634 <_dtoa_r+0x194>
  403a68:	426d      	negs	r5, r5
  403a6a:	2600      	movs	r6, #0
  403a6c:	9508      	str	r5, [sp, #32]
  403a6e:	9606      	str	r6, [sp, #24]
  403a70:	e5d6      	b.n	403620 <_dtoa_r+0x180>
  403a72:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403a74:	9d08      	ldr	r5, [sp, #32]
  403a76:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403a78:	e714      	b.n	4038a4 <_dtoa_r+0x404>
  403a7a:	bf00      	nop
  403a7c:	40240000 	.word	0x40240000
  403a80:	231c      	movs	r3, #28
  403a82:	f8dd e020 	ldr.w	lr, [sp, #32]
  403a86:	9806      	ldr	r0, [sp, #24]
  403a88:	449e      	add	lr, r3
  403a8a:	4418      	add	r0, r3
  403a8c:	f8cd e020 	str.w	lr, [sp, #32]
  403a90:	441d      	add	r5, r3
  403a92:	9006      	str	r0, [sp, #24]
  403a94:	e761      	b.n	40395a <_dtoa_r+0x4ba>
  403a96:	48a7      	ldr	r0, [pc, #668]	; (403d34 <_dtoa_r+0x894>)
  403a98:	1b40      	subs	r0, r0, r5
  403a9a:	fa0a f000 	lsl.w	r0, sl, r0
  403a9e:	e56f      	b.n	403580 <_dtoa_r+0xe0>
  403aa0:	900e      	str	r0, [sp, #56]	; 0x38
  403aa2:	e5b5      	b.n	403610 <_dtoa_r+0x170>
  403aa4:	2d00      	cmp	r5, #0
  403aa6:	dd05      	ble.n	403ab4 <_dtoa_r+0x614>
  403aa8:	4631      	mov	r1, r6
  403aaa:	462a      	mov	r2, r5
  403aac:	4620      	mov	r0, r4
  403aae:	f001 facd 	bl	40504c <__lshift>
  403ab2:	4606      	mov	r6, r0
  403ab4:	2f00      	cmp	r7, #0
  403ab6:	f040 82e9 	bne.w	40408c <_dtoa_r+0xbec>
  403aba:	4637      	mov	r7, r6
  403abc:	9d09      	ldr	r5, [sp, #36]	; 0x24
  403abe:	9809      	ldr	r0, [sp, #36]	; 0x24
  403ac0:	444d      	add	r5, r9
  403ac2:	9508      	str	r5, [sp, #32]
  403ac4:	f00a 0501 	and.w	r5, sl, #1
  403ac8:	950b      	str	r5, [sp, #44]	; 0x2c
  403aca:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
  403ace:	1c45      	adds	r5, r0, #1
  403ad0:	e00a      	b.n	403ae8 <_dtoa_r+0x648>
  403ad2:	f001 f92d 	bl	404d30 <__multadd>
  403ad6:	4639      	mov	r1, r7
  403ad8:	4606      	mov	r6, r0
  403ada:	220a      	movs	r2, #10
  403adc:	4620      	mov	r0, r4
  403ade:	2300      	movs	r3, #0
  403ae0:	f001 f926 	bl	404d30 <__multadd>
  403ae4:	4607      	mov	r7, r0
  403ae6:	3501      	adds	r5, #1
  403ae8:	4641      	mov	r1, r8
  403aea:	4648      	mov	r0, r9
  403aec:	f7ff fc3e 	bl	40336c <quorem>
  403af0:	4631      	mov	r1, r6
  403af2:	4683      	mov	fp, r0
  403af4:	4648      	mov	r0, r9
  403af6:	f001 fb07 	bl	405108 <__mcmp>
  403afa:	4641      	mov	r1, r8
  403afc:	9003      	str	r0, [sp, #12]
  403afe:	463a      	mov	r2, r7
  403b00:	4620      	mov	r0, r4
  403b02:	f001 fb25 	bl	405150 <__mdiff>
  403b06:	68c2      	ldr	r2, [r0, #12]
  403b08:	1e69      	subs	r1, r5, #1
  403b0a:	4603      	mov	r3, r0
  403b0c:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
  403b10:	9106      	str	r1, [sp, #24]
  403b12:	2a00      	cmp	r2, #0
  403b14:	f040 8193 	bne.w	403e3e <_dtoa_r+0x99e>
  403b18:	4619      	mov	r1, r3
  403b1a:	4648      	mov	r0, r9
  403b1c:	9302      	str	r3, [sp, #8]
  403b1e:	f001 faf3 	bl	405108 <__mcmp>
  403b22:	9b02      	ldr	r3, [sp, #8]
  403b24:	4602      	mov	r2, r0
  403b26:	4619      	mov	r1, r3
  403b28:	4620      	mov	r0, r4
  403b2a:	9202      	str	r2, [sp, #8]
  403b2c:	f001 f8f6 	bl	404d1c <_Bfree>
  403b30:	9a02      	ldr	r2, [sp, #8]
  403b32:	b92a      	cbnz	r2, 403b40 <_dtoa_r+0x6a0>
  403b34:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403b36:	b91b      	cbnz	r3, 403b40 <_dtoa_r+0x6a0>
  403b38:	980b      	ldr	r0, [sp, #44]	; 0x2c
  403b3a:	2800      	cmp	r0, #0
  403b3c:	f000 8393 	beq.w	404266 <_dtoa_r+0xdc6>
  403b40:	9b03      	ldr	r3, [sp, #12]
  403b42:	2b00      	cmp	r3, #0
  403b44:	f2c0 8234 	blt.w	403fb0 <_dtoa_r+0xb10>
  403b48:	d105      	bne.n	403b56 <_dtoa_r+0x6b6>
  403b4a:	9824      	ldr	r0, [sp, #144]	; 0x90
  403b4c:	b918      	cbnz	r0, 403b56 <_dtoa_r+0x6b6>
  403b4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403b50:	2900      	cmp	r1, #0
  403b52:	f000 822d 	beq.w	403fb0 <_dtoa_r+0xb10>
  403b56:	2a00      	cmp	r2, #0
  403b58:	f300 82ac 	bgt.w	4040b4 <_dtoa_r+0xc14>
  403b5c:	f8dd e020 	ldr.w	lr, [sp, #32]
  403b60:	f805 ac01 	strb.w	sl, [r5, #-1]
  403b64:	4575      	cmp	r5, lr
  403b66:	46ab      	mov	fp, r5
  403b68:	f000 82b4 	beq.w	4040d4 <_dtoa_r+0xc34>
  403b6c:	4649      	mov	r1, r9
  403b6e:	220a      	movs	r2, #10
  403b70:	2300      	movs	r3, #0
  403b72:	4620      	mov	r0, r4
  403b74:	f001 f8dc 	bl	404d30 <__multadd>
  403b78:	42be      	cmp	r6, r7
  403b7a:	4681      	mov	r9, r0
  403b7c:	4631      	mov	r1, r6
  403b7e:	4620      	mov	r0, r4
  403b80:	f04f 020a 	mov.w	r2, #10
  403b84:	f04f 0300 	mov.w	r3, #0
  403b88:	d1a3      	bne.n	403ad2 <_dtoa_r+0x632>
  403b8a:	f001 f8d1 	bl	404d30 <__multadd>
  403b8e:	4606      	mov	r6, r0
  403b90:	4607      	mov	r7, r0
  403b92:	e7a8      	b.n	403ae6 <_dtoa_r+0x646>
  403b94:	2600      	movs	r6, #0
  403b96:	960b      	str	r6, [sp, #44]	; 0x2c
  403b98:	9e07      	ldr	r6, [sp, #28]
  403b9a:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
  403b9e:	44b6      	add	lr, r6
  403ba0:	f10e 0901 	add.w	r9, lr, #1
  403ba4:	f1b9 0f00 	cmp.w	r9, #0
  403ba8:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
  403bac:	464e      	mov	r6, r9
  403bae:	f340 8150 	ble.w	403e52 <_dtoa_r+0x9b2>
  403bb2:	2100      	movs	r1, #0
  403bb4:	2e17      	cmp	r6, #23
  403bb6:	6461      	str	r1, [r4, #68]	; 0x44
  403bb8:	d90a      	bls.n	403bd0 <_dtoa_r+0x730>
  403bba:	2201      	movs	r2, #1
  403bbc:	2304      	movs	r3, #4
  403bbe:	005b      	lsls	r3, r3, #1
  403bc0:	f103 0014 	add.w	r0, r3, #20
  403bc4:	42b0      	cmp	r0, r6
  403bc6:	4611      	mov	r1, r2
  403bc8:	f102 0201 	add.w	r2, r2, #1
  403bcc:	d9f7      	bls.n	403bbe <_dtoa_r+0x71e>
  403bce:	6461      	str	r1, [r4, #68]	; 0x44
  403bd0:	4620      	mov	r0, r4
  403bd2:	f001 f87d 	bl	404cd0 <_Balloc>
  403bd6:	2e0e      	cmp	r6, #14
  403bd8:	9009      	str	r0, [sp, #36]	; 0x24
  403bda:	6420      	str	r0, [r4, #64]	; 0x40
  403bdc:	f63f ad6c 	bhi.w	4036b8 <_dtoa_r+0x218>
  403be0:	2d00      	cmp	r5, #0
  403be2:	f43f ad69 	beq.w	4036b8 <_dtoa_r+0x218>
  403be6:	9d07      	ldr	r5, [sp, #28]
  403be8:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
  403bec:	2d00      	cmp	r5, #0
  403bee:	f340 821c 	ble.w	40402a <_dtoa_r+0xb8a>
  403bf2:	4b51      	ldr	r3, [pc, #324]	; (403d38 <_dtoa_r+0x898>)
  403bf4:	f005 020f 	and.w	r2, r5, #15
  403bf8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403bfc:	112d      	asrs	r5, r5, #4
  403bfe:	e9d3 6700 	ldrd	r6, r7, [r3]
  403c02:	06eb      	lsls	r3, r5, #27
  403c04:	f140 81cd 	bpl.w	403fa2 <_dtoa_r+0xb02>
  403c08:	4b4c      	ldr	r3, [pc, #304]	; (403d3c <_dtoa_r+0x89c>)
  403c0a:	4650      	mov	r0, sl
  403c0c:	4659      	mov	r1, fp
  403c0e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403c12:	f001 ffdf 	bl	405bd4 <__aeabi_ddiv>
  403c16:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
  403c1a:	f005 050f 	and.w	r5, r5, #15
  403c1e:	f04f 0803 	mov.w	r8, #3
  403c22:	b18d      	cbz	r5, 403c48 <_dtoa_r+0x7a8>
  403c24:	f8df a114 	ldr.w	sl, [pc, #276]	; 403d3c <_dtoa_r+0x89c>
  403c28:	4630      	mov	r0, r6
  403c2a:	4639      	mov	r1, r7
  403c2c:	07ee      	lsls	r6, r5, #31
  403c2e:	d505      	bpl.n	403c3c <_dtoa_r+0x79c>
  403c30:	e9da 2300 	ldrd	r2, r3, [sl]
  403c34:	f108 0801 	add.w	r8, r8, #1
  403c38:	f001 fea2 	bl	405980 <__aeabi_dmul>
  403c3c:	106d      	asrs	r5, r5, #1
  403c3e:	f10a 0a08 	add.w	sl, sl, #8
  403c42:	d1f3      	bne.n	403c2c <_dtoa_r+0x78c>
  403c44:	4606      	mov	r6, r0
  403c46:	460f      	mov	r7, r1
  403c48:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403c4c:	4632      	mov	r2, r6
  403c4e:	463b      	mov	r3, r7
  403c50:	f001 ffc0 	bl	405bd4 <__aeabi_ddiv>
  403c54:	4682      	mov	sl, r0
  403c56:	468b      	mov	fp, r1
  403c58:	9d0e      	ldr	r5, [sp, #56]	; 0x38
  403c5a:	b145      	cbz	r5, 403c6e <_dtoa_r+0x7ce>
  403c5c:	4650      	mov	r0, sl
  403c5e:	4659      	mov	r1, fp
  403c60:	2200      	movs	r2, #0
  403c62:	4b37      	ldr	r3, [pc, #220]	; (403d40 <_dtoa_r+0x8a0>)
  403c64:	f002 f8fe 	bl	405e64 <__aeabi_dcmplt>
  403c68:	2800      	cmp	r0, #0
  403c6a:	f040 82aa 	bne.w	4041c2 <_dtoa_r+0xd22>
  403c6e:	4640      	mov	r0, r8
  403c70:	f7fd fd92 	bl	401798 <__aeabi_i2d>
  403c74:	4652      	mov	r2, sl
  403c76:	465b      	mov	r3, fp
  403c78:	f001 fe82 	bl	405980 <__aeabi_dmul>
  403c7c:	2200      	movs	r2, #0
  403c7e:	4b31      	ldr	r3, [pc, #196]	; (403d44 <_dtoa_r+0x8a4>)
  403c80:	f7fd fc3e 	bl	401500 <__adddf3>
  403c84:	4606      	mov	r6, r0
  403c86:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  403c8a:	f1b9 0f00 	cmp.w	r9, #0
  403c8e:	f000 815a 	beq.w	403f46 <_dtoa_r+0xaa6>
  403c92:	9d07      	ldr	r5, [sp, #28]
  403c94:	46c8      	mov	r8, r9
  403c96:	9517      	str	r5, [sp, #92]	; 0x5c
  403c98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  403c9a:	2d00      	cmp	r5, #0
  403c9c:	f000 8223 	beq.w	4040e6 <_dtoa_r+0xc46>
  403ca0:	4b25      	ldr	r3, [pc, #148]	; (403d38 <_dtoa_r+0x898>)
  403ca2:	2000      	movs	r0, #0
  403ca4:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
  403ca8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403cac:	4926      	ldr	r1, [pc, #152]	; (403d48 <_dtoa_r+0x8a8>)
  403cae:	f001 ff91 	bl	405bd4 <__aeabi_ddiv>
  403cb2:	4632      	mov	r2, r6
  403cb4:	463b      	mov	r3, r7
  403cb6:	f7fd fc21 	bl	4014fc <__aeabi_dsub>
  403cba:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
  403cbe:	4659      	mov	r1, fp
  403cc0:	4650      	mov	r0, sl
  403cc2:	f002 f8f7 	bl	405eb4 <__aeabi_d2iz>
  403cc6:	4605      	mov	r5, r0
  403cc8:	f7fd fd66 	bl	401798 <__aeabi_i2d>
  403ccc:	4602      	mov	r2, r0
  403cce:	460b      	mov	r3, r1
  403cd0:	4650      	mov	r0, sl
  403cd2:	4659      	mov	r1, fp
  403cd4:	f7fd fc12 	bl	4014fc <__aeabi_dsub>
  403cd8:	3530      	adds	r5, #48	; 0x30
  403cda:	9e09      	ldr	r6, [sp, #36]	; 0x24
  403cdc:	e9cd 0104 	strd	r0, r1, [sp, #16]
  403ce0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  403ce4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403ce8:	b2ed      	uxtb	r5, r5
  403cea:	7035      	strb	r5, [r6, #0]
  403cec:	f106 0b01 	add.w	fp, r6, #1
  403cf0:	f002 f8d6 	bl	405ea0 <__aeabi_dcmpgt>
  403cf4:	2800      	cmp	r0, #0
  403cf6:	f040 82ab 	bne.w	404250 <_dtoa_r+0xdb0>
  403cfa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  403cfe:	2000      	movs	r0, #0
  403d00:	490f      	ldr	r1, [pc, #60]	; (403d40 <_dtoa_r+0x8a0>)
  403d02:	f7fd fbfb 	bl	4014fc <__aeabi_dsub>
  403d06:	4602      	mov	r2, r0
  403d08:	460b      	mov	r3, r1
  403d0a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403d0e:	f002 f8c7 	bl	405ea0 <__aeabi_dcmpgt>
  403d12:	2800      	cmp	r0, #0
  403d14:	f040 82a2 	bne.w	40425c <_dtoa_r+0xdbc>
  403d18:	f1b8 0f01 	cmp.w	r8, #1
  403d1c:	f340 8181 	ble.w	404022 <_dtoa_r+0xb82>
  403d20:	44b0      	add	r8, r6
  403d22:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
  403d26:	46a2      	mov	sl, r4
  403d28:	46c1      	mov	r9, r8
  403d2a:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
  403d2e:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
  403d32:	e019      	b.n	403d68 <_dtoa_r+0x8c8>
  403d34:	fffffbee 	.word	0xfffffbee
  403d38:	00406cf8 	.word	0x00406cf8
  403d3c:	00406dc0 	.word	0x00406dc0
  403d40:	3ff00000 	.word	0x3ff00000
  403d44:	401c0000 	.word	0x401c0000
  403d48:	3fe00000 	.word	0x3fe00000
  403d4c:	2000      	movs	r0, #0
  403d4e:	49a8      	ldr	r1, [pc, #672]	; (403ff0 <_dtoa_r+0xb50>)
  403d50:	f7fd fbd4 	bl	4014fc <__aeabi_dsub>
  403d54:	4622      	mov	r2, r4
  403d56:	462b      	mov	r3, r5
  403d58:	f002 f884 	bl	405e64 <__aeabi_dcmplt>
  403d5c:	2800      	cmp	r0, #0
  403d5e:	f040 827b 	bne.w	404258 <_dtoa_r+0xdb8>
  403d62:	45cb      	cmp	fp, r9
  403d64:	f000 815a 	beq.w	40401c <_dtoa_r+0xb7c>
  403d68:	4620      	mov	r0, r4
  403d6a:	4629      	mov	r1, r5
  403d6c:	2200      	movs	r2, #0
  403d6e:	4ba1      	ldr	r3, [pc, #644]	; (403ff4 <_dtoa_r+0xb54>)
  403d70:	f001 fe06 	bl	405980 <__aeabi_dmul>
  403d74:	2200      	movs	r2, #0
  403d76:	4b9f      	ldr	r3, [pc, #636]	; (403ff4 <_dtoa_r+0xb54>)
  403d78:	4604      	mov	r4, r0
  403d7a:	460d      	mov	r5, r1
  403d7c:	4630      	mov	r0, r6
  403d7e:	4639      	mov	r1, r7
  403d80:	f001 fdfe 	bl	405980 <__aeabi_dmul>
  403d84:	460f      	mov	r7, r1
  403d86:	4606      	mov	r6, r0
  403d88:	f002 f894 	bl	405eb4 <__aeabi_d2iz>
  403d8c:	4680      	mov	r8, r0
  403d8e:	f7fd fd03 	bl	401798 <__aeabi_i2d>
  403d92:	4602      	mov	r2, r0
  403d94:	460b      	mov	r3, r1
  403d96:	4630      	mov	r0, r6
  403d98:	4639      	mov	r1, r7
  403d9a:	f7fd fbaf 	bl	4014fc <__aeabi_dsub>
  403d9e:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403da2:	fa5f f888 	uxtb.w	r8, r8
  403da6:	4622      	mov	r2, r4
  403da8:	462b      	mov	r3, r5
  403daa:	f80b 8b01 	strb.w	r8, [fp], #1
  403dae:	4606      	mov	r6, r0
  403db0:	460f      	mov	r7, r1
  403db2:	f002 f857 	bl	405e64 <__aeabi_dcmplt>
  403db6:	4632      	mov	r2, r6
  403db8:	463b      	mov	r3, r7
  403dba:	2800      	cmp	r0, #0
  403dbc:	d0c6      	beq.n	403d4c <_dtoa_r+0x8ac>
  403dbe:	9e17      	ldr	r6, [sp, #92]	; 0x5c
  403dc0:	4654      	mov	r4, sl
  403dc2:	9607      	str	r6, [sp, #28]
  403dc4:	e539      	b.n	40383a <_dtoa_r+0x39a>
  403dc6:	2600      	movs	r6, #0
  403dc8:	960b      	str	r6, [sp, #44]	; 0x2c
  403dca:	9825      	ldr	r0, [sp, #148]	; 0x94
  403dcc:	2800      	cmp	r0, #0
  403dce:	dd3c      	ble.n	403e4a <_dtoa_r+0x9aa>
  403dd0:	4606      	mov	r6, r0
  403dd2:	900f      	str	r0, [sp, #60]	; 0x3c
  403dd4:	4681      	mov	r9, r0
  403dd6:	e6ec      	b.n	403bb2 <_dtoa_r+0x712>
  403dd8:	2601      	movs	r6, #1
  403dda:	960b      	str	r6, [sp, #44]	; 0x2c
  403ddc:	e7f5      	b.n	403dca <_dtoa_r+0x92a>
  403dde:	f1b9 0f00 	cmp.w	r9, #0
  403de2:	f73f ac7c 	bgt.w	4036de <_dtoa_r+0x23e>
  403de6:	f040 80c6 	bne.w	403f76 <_dtoa_r+0xad6>
  403dea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  403dee:	2200      	movs	r2, #0
  403df0:	4b81      	ldr	r3, [pc, #516]	; (403ff8 <_dtoa_r+0xb58>)
  403df2:	f001 fdc5 	bl	405980 <__aeabi_dmul>
  403df6:	4652      	mov	r2, sl
  403df8:	465b      	mov	r3, fp
  403dfa:	f002 f847 	bl	405e8c <__aeabi_dcmpge>
  403dfe:	46c8      	mov	r8, r9
  403e00:	464e      	mov	r6, r9
  403e02:	2800      	cmp	r0, #0
  403e04:	d07c      	beq.n	403f00 <_dtoa_r+0xa60>
  403e06:	9d25      	ldr	r5, [sp, #148]	; 0x94
  403e08:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
  403e0c:	43ed      	mvns	r5, r5
  403e0e:	9507      	str	r5, [sp, #28]
  403e10:	4641      	mov	r1, r8
  403e12:	4620      	mov	r0, r4
  403e14:	f000 ff82 	bl	404d1c <_Bfree>
  403e18:	2e00      	cmp	r6, #0
  403e1a:	f47f ae06 	bne.w	403a2a <_dtoa_r+0x58a>
  403e1e:	e50c      	b.n	40383a <_dtoa_r+0x39a>
  403e20:	990a      	ldr	r1, [sp, #40]	; 0x28
  403e22:	4620      	mov	r0, r4
  403e24:	f001 f8c4 	bl	404fb0 <__pow5mult>
  403e28:	900a      	str	r0, [sp, #40]	; 0x28
  403e2a:	e56a      	b.n	403902 <_dtoa_r+0x462>
  403e2c:	9d16      	ldr	r5, [sp, #88]	; 0x58
  403e2e:	2d00      	cmp	r5, #0
  403e30:	f000 81b8 	beq.w	4041a4 <_dtoa_r+0xd04>
  403e34:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403e38:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403e3a:	9d08      	ldr	r5, [sp, #32]
  403e3c:	e527      	b.n	40388e <_dtoa_r+0x3ee>
  403e3e:	4601      	mov	r1, r0
  403e40:	4620      	mov	r0, r4
  403e42:	f000 ff6b 	bl	404d1c <_Bfree>
  403e46:	2201      	movs	r2, #1
  403e48:	e67a      	b.n	403b40 <_dtoa_r+0x6a0>
  403e4a:	2601      	movs	r6, #1
  403e4c:	9625      	str	r6, [sp, #148]	; 0x94
  403e4e:	960f      	str	r6, [sp, #60]	; 0x3c
  403e50:	46b1      	mov	r9, r6
  403e52:	2100      	movs	r1, #0
  403e54:	6461      	str	r1, [r4, #68]	; 0x44
  403e56:	e6bb      	b.n	403bd0 <_dtoa_r+0x730>
  403e58:	980a      	ldr	r0, [sp, #40]	; 0x28
  403e5a:	4641      	mov	r1, r8
  403e5c:	f001 f954 	bl	405108 <__mcmp>
  403e60:	2800      	cmp	r0, #0
  403e62:	f6bf ad8f 	bge.w	403984 <_dtoa_r+0x4e4>
  403e66:	f8dd e01c 	ldr.w	lr, [sp, #28]
  403e6a:	990a      	ldr	r1, [sp, #40]	; 0x28
  403e6c:	f10e 3eff 	add.w	lr, lr, #4294967295
  403e70:	4620      	mov	r0, r4
  403e72:	220a      	movs	r2, #10
  403e74:	2300      	movs	r3, #0
  403e76:	f8cd e01c 	str.w	lr, [sp, #28]
  403e7a:	f000 ff59 	bl	404d30 <__multadd>
  403e7e:	900a      	str	r0, [sp, #40]	; 0x28
  403e80:	980b      	ldr	r0, [sp, #44]	; 0x2c
  403e82:	2800      	cmp	r0, #0
  403e84:	f040 8209 	bne.w	40429a <_dtoa_r+0xdfa>
  403e88:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
  403e8c:	e57a      	b.n	403984 <_dtoa_r+0x4e4>
  403e8e:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403e92:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403e96:	6918      	ldr	r0, [r3, #16]
  403e98:	f000 ff94 	bl	404dc4 <__hi0bits>
  403e9c:	f1c0 0020 	rsb	r0, r0, #32
  403ea0:	e547      	b.n	403932 <_dtoa_r+0x492>
  403ea2:	9809      	ldr	r0, [sp, #36]	; 0x24
  403ea4:	f7ff bb2c 	b.w	403500 <_dtoa_r+0x60>
  403ea8:	f1ba 0f00 	cmp.w	sl, #0
  403eac:	f47f ad3b 	bne.w	403926 <_dtoa_r+0x486>
  403eb0:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403eb4:	2b00      	cmp	r3, #0
  403eb6:	f040 817c 	bne.w	4041b2 <_dtoa_r+0xd12>
  403eba:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403ebe:	0d3f      	lsrs	r7, r7, #20
  403ec0:	053f      	lsls	r7, r7, #20
  403ec2:	2f00      	cmp	r7, #0
  403ec4:	f43f ad30 	beq.w	403928 <_dtoa_r+0x488>
  403ec8:	9a08      	ldr	r2, [sp, #32]
  403eca:	9b06      	ldr	r3, [sp, #24]
  403ecc:	3201      	adds	r2, #1
  403ece:	3301      	adds	r3, #1
  403ed0:	9208      	str	r2, [sp, #32]
  403ed2:	9306      	str	r3, [sp, #24]
  403ed4:	2701      	movs	r7, #1
  403ed6:	e527      	b.n	403928 <_dtoa_r+0x488>
  403ed8:	9924      	ldr	r1, [sp, #144]	; 0x90
  403eda:	2902      	cmp	r1, #2
  403edc:	f77f ad56 	ble.w	40398c <_dtoa_r+0x4ec>
  403ee0:	f1b9 0f00 	cmp.w	r9, #0
  403ee4:	d18f      	bne.n	403e06 <_dtoa_r+0x966>
  403ee6:	4641      	mov	r1, r8
  403ee8:	464b      	mov	r3, r9
  403eea:	2205      	movs	r2, #5
  403eec:	4620      	mov	r0, r4
  403eee:	f000 ff1f 	bl	404d30 <__multadd>
  403ef2:	4680      	mov	r8, r0
  403ef4:	4641      	mov	r1, r8
  403ef6:	980a      	ldr	r0, [sp, #40]	; 0x28
  403ef8:	f001 f906 	bl	405108 <__mcmp>
  403efc:	2800      	cmp	r0, #0
  403efe:	dd82      	ble.n	403e06 <_dtoa_r+0x966>
  403f00:	9d07      	ldr	r5, [sp, #28]
  403f02:	2331      	movs	r3, #49	; 0x31
  403f04:	3501      	adds	r5, #1
  403f06:	9507      	str	r5, [sp, #28]
  403f08:	9d09      	ldr	r5, [sp, #36]	; 0x24
  403f0a:	702b      	strb	r3, [r5, #0]
  403f0c:	f105 0b01 	add.w	fp, r5, #1
  403f10:	e77e      	b.n	403e10 <_dtoa_r+0x970>
  403f12:	9807      	ldr	r0, [sp, #28]
  403f14:	9909      	ldr	r1, [sp, #36]	; 0x24
  403f16:	2331      	movs	r3, #49	; 0x31
  403f18:	3001      	adds	r0, #1
  403f1a:	9007      	str	r0, [sp, #28]
  403f1c:	700b      	strb	r3, [r1, #0]
  403f1e:	e576      	b.n	403a0e <_dtoa_r+0x56e>
  403f20:	46a3      	mov	fp, r4
  403f22:	9c03      	ldr	r4, [sp, #12]
  403f24:	e489      	b.n	40383a <_dtoa_r+0x39a>
  403f26:	4640      	mov	r0, r8
  403f28:	f7fd fc36 	bl	401798 <__aeabi_i2d>
  403f2c:	4602      	mov	r2, r0
  403f2e:	460b      	mov	r3, r1
  403f30:	4650      	mov	r0, sl
  403f32:	4659      	mov	r1, fp
  403f34:	f001 fd24 	bl	405980 <__aeabi_dmul>
  403f38:	2200      	movs	r2, #0
  403f3a:	4b30      	ldr	r3, [pc, #192]	; (403ffc <_dtoa_r+0xb5c>)
  403f3c:	f7fd fae0 	bl	401500 <__adddf3>
  403f40:	4606      	mov	r6, r0
  403f42:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  403f46:	4650      	mov	r0, sl
  403f48:	4659      	mov	r1, fp
  403f4a:	2200      	movs	r2, #0
  403f4c:	4b2a      	ldr	r3, [pc, #168]	; (403ff8 <_dtoa_r+0xb58>)
  403f4e:	f7fd fad5 	bl	4014fc <__aeabi_dsub>
  403f52:	4632      	mov	r2, r6
  403f54:	463b      	mov	r3, r7
  403f56:	4682      	mov	sl, r0
  403f58:	468b      	mov	fp, r1
  403f5a:	f001 ffa1 	bl	405ea0 <__aeabi_dcmpgt>
  403f5e:	2800      	cmp	r0, #0
  403f60:	f040 80bd 	bne.w	4040de <_dtoa_r+0xc3e>
  403f64:	4632      	mov	r2, r6
  403f66:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
  403f6a:	4650      	mov	r0, sl
  403f6c:	4659      	mov	r1, fp
  403f6e:	f001 ff79 	bl	405e64 <__aeabi_dcmplt>
  403f72:	2800      	cmp	r0, #0
  403f74:	d055      	beq.n	404022 <_dtoa_r+0xb82>
  403f76:	f04f 0800 	mov.w	r8, #0
  403f7a:	4646      	mov	r6, r8
  403f7c:	e743      	b.n	403e06 <_dtoa_r+0x966>
  403f7e:	990a      	ldr	r1, [sp, #40]	; 0x28
  403f80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403f82:	4620      	mov	r0, r4
  403f84:	f001 f814 	bl	404fb0 <__pow5mult>
  403f88:	900a      	str	r0, [sp, #40]	; 0x28
  403f8a:	e4ba      	b.n	403902 <_dtoa_r+0x462>
  403f8c:	2601      	movs	r6, #1
  403f8e:	960b      	str	r6, [sp, #44]	; 0x2c
  403f90:	e602      	b.n	403b98 <_dtoa_r+0x6f8>
  403f92:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  403f94:	9e0d      	ldr	r6, [sp, #52]	; 0x34
  403f96:	1b7b      	subs	r3, r7, r5
  403f98:	441e      	add	r6, r3
  403f9a:	970c      	str	r7, [sp, #48]	; 0x30
  403f9c:	960d      	str	r6, [sp, #52]	; 0x34
  403f9e:	2700      	movs	r7, #0
  403fa0:	e46f      	b.n	403882 <_dtoa_r+0x3e2>
  403fa2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403fa6:	f04f 0802 	mov.w	r8, #2
  403faa:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
  403fae:	e638      	b.n	403c22 <_dtoa_r+0x782>
  403fb0:	2a00      	cmp	r2, #0
  403fb2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  403fb6:	46d9      	mov	r9, fp
  403fb8:	dd11      	ble.n	403fde <_dtoa_r+0xb3e>
  403fba:	990a      	ldr	r1, [sp, #40]	; 0x28
  403fbc:	2201      	movs	r2, #1
  403fbe:	4620      	mov	r0, r4
  403fc0:	f001 f844 	bl	40504c <__lshift>
  403fc4:	4641      	mov	r1, r8
  403fc6:	900a      	str	r0, [sp, #40]	; 0x28
  403fc8:	f001 f89e 	bl	405108 <__mcmp>
  403fcc:	2800      	cmp	r0, #0
  403fce:	f340 815d 	ble.w	40428c <_dtoa_r+0xdec>
  403fd2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403fd6:	f000 811b 	beq.w	404210 <_dtoa_r+0xd70>
  403fda:	f109 0a31 	add.w	sl, r9, #49	; 0x31
  403fde:	9b06      	ldr	r3, [sp, #24]
  403fe0:	4635      	mov	r5, r6
  403fe2:	f883 a000 	strb.w	sl, [r3]
  403fe6:	f103 0b01 	add.w	fp, r3, #1
  403fea:	463e      	mov	r6, r7
  403fec:	e50f      	b.n	403a0e <_dtoa_r+0x56e>
  403fee:	bf00      	nop
  403ff0:	3ff00000 	.word	0x3ff00000
  403ff4:	40240000 	.word	0x40240000
  403ff8:	40140000 	.word	0x40140000
  403ffc:	401c0000 	.word	0x401c0000
  404000:	d103      	bne.n	40400a <_dtoa_r+0xb6a>
  404002:	f01a 0f01 	tst.w	sl, #1
  404006:	f47f acf2 	bne.w	4039ee <_dtoa_r+0x54e>
  40400a:	465b      	mov	r3, fp
  40400c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404010:	469b      	mov	fp, r3
  404012:	2a30      	cmp	r2, #48	; 0x30
  404014:	f103 33ff 	add.w	r3, r3, #4294967295
  404018:	d0f8      	beq.n	40400c <_dtoa_r+0xb6c>
  40401a:	e4f8      	b.n	403a0e <_dtoa_r+0x56e>
  40401c:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
  404020:	4654      	mov	r4, sl
  404022:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
  404026:	f7ff bb47 	b.w	4036b8 <_dtoa_r+0x218>
  40402a:	9e07      	ldr	r6, [sp, #28]
  40402c:	4275      	negs	r5, r6
  40402e:	2d00      	cmp	r5, #0
  404030:	f000 80c2 	beq.w	4041b8 <_dtoa_r+0xd18>
  404034:	4ba3      	ldr	r3, [pc, #652]	; (4042c4 <_dtoa_r+0xe24>)
  404036:	f005 020f 	and.w	r2, r5, #15
  40403a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  40403e:	e9d3 2300 	ldrd	r2, r3, [r3]
  404042:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  404046:	f001 fc9b 	bl	405980 <__aeabi_dmul>
  40404a:	112d      	asrs	r5, r5, #4
  40404c:	4682      	mov	sl, r0
  40404e:	468b      	mov	fp, r1
  404050:	f000 812e 	beq.w	4042b0 <_dtoa_r+0xe10>
  404054:	4e9c      	ldr	r6, [pc, #624]	; (4042c8 <_dtoa_r+0xe28>)
  404056:	f04f 0802 	mov.w	r8, #2
  40405a:	07ea      	lsls	r2, r5, #31
  40405c:	d505      	bpl.n	40406a <_dtoa_r+0xbca>
  40405e:	e9d6 2300 	ldrd	r2, r3, [r6]
  404062:	f108 0801 	add.w	r8, r8, #1
  404066:	f001 fc8b 	bl	405980 <__aeabi_dmul>
  40406a:	106d      	asrs	r5, r5, #1
  40406c:	f106 0608 	add.w	r6, r6, #8
  404070:	d1f3      	bne.n	40405a <_dtoa_r+0xbba>
  404072:	4682      	mov	sl, r0
  404074:	468b      	mov	fp, r1
  404076:	e5ef      	b.n	403c58 <_dtoa_r+0x7b8>
  404078:	9e07      	ldr	r6, [sp, #28]
  40407a:	9d09      	ldr	r5, [sp, #36]	; 0x24
  40407c:	2230      	movs	r2, #48	; 0x30
  40407e:	702a      	strb	r2, [r5, #0]
  404080:	3601      	adds	r6, #1
  404082:	2231      	movs	r2, #49	; 0x31
  404084:	9607      	str	r6, [sp, #28]
  404086:	701a      	strb	r2, [r3, #0]
  404088:	f7ff bbd7 	b.w	40383a <_dtoa_r+0x39a>
  40408c:	6871      	ldr	r1, [r6, #4]
  40408e:	4620      	mov	r0, r4
  404090:	f000 fe1e 	bl	404cd0 <_Balloc>
  404094:	6933      	ldr	r3, [r6, #16]
  404096:	4605      	mov	r5, r0
  404098:	1c9a      	adds	r2, r3, #2
  40409a:	0092      	lsls	r2, r2, #2
  40409c:	f106 010c 	add.w	r1, r6, #12
  4040a0:	300c      	adds	r0, #12
  4040a2:	f000 fd35 	bl	404b10 <memcpy>
  4040a6:	4620      	mov	r0, r4
  4040a8:	4629      	mov	r1, r5
  4040aa:	2201      	movs	r2, #1
  4040ac:	f000 ffce 	bl	40504c <__lshift>
  4040b0:	4607      	mov	r7, r0
  4040b2:	e503      	b.n	403abc <_dtoa_r+0x61c>
  4040b4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  4040b8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  4040bc:	f000 80a8 	beq.w	404210 <_dtoa_r+0xd70>
  4040c0:	9d06      	ldr	r5, [sp, #24]
  4040c2:	f10a 0301 	add.w	r3, sl, #1
  4040c6:	702b      	strb	r3, [r5, #0]
  4040c8:	4635      	mov	r5, r6
  4040ca:	9e06      	ldr	r6, [sp, #24]
  4040cc:	f106 0b01 	add.w	fp, r6, #1
  4040d0:	463e      	mov	r6, r7
  4040d2:	e49c      	b.n	403a0e <_dtoa_r+0x56e>
  4040d4:	4635      	mov	r5, r6
  4040d6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  4040da:	463e      	mov	r6, r7
  4040dc:	e47b      	b.n	4039d6 <_dtoa_r+0x536>
  4040de:	f04f 0800 	mov.w	r8, #0
  4040e2:	4646      	mov	r6, r8
  4040e4:	e70c      	b.n	403f00 <_dtoa_r+0xa60>
  4040e6:	4977      	ldr	r1, [pc, #476]	; (4042c4 <_dtoa_r+0xe24>)
  4040e8:	f108 35ff 	add.w	r5, r8, #4294967295
  4040ec:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
  4040f0:	4632      	mov	r2, r6
  4040f2:	463b      	mov	r3, r7
  4040f4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4040f8:	9510      	str	r5, [sp, #64]	; 0x40
  4040fa:	f001 fc41 	bl	405980 <__aeabi_dmul>
  4040fe:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
  404102:	4659      	mov	r1, fp
  404104:	4650      	mov	r0, sl
  404106:	f001 fed5 	bl	405eb4 <__aeabi_d2iz>
  40410a:	4605      	mov	r5, r0
  40410c:	f7fd fb44 	bl	401798 <__aeabi_i2d>
  404110:	4602      	mov	r2, r0
  404112:	460b      	mov	r3, r1
  404114:	4650      	mov	r0, sl
  404116:	4659      	mov	r1, fp
  404118:	f7fd f9f0 	bl	4014fc <__aeabi_dsub>
  40411c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
  404120:	3530      	adds	r5, #48	; 0x30
  404122:	f1b8 0f01 	cmp.w	r8, #1
  404126:	4606      	mov	r6, r0
  404128:	460f      	mov	r7, r1
  40412a:	f88e 5000 	strb.w	r5, [lr]
  40412e:	f10e 0b01 	add.w	fp, lr, #1
  404132:	d01e      	beq.n	404172 <_dtoa_r+0xcd2>
  404134:	9d09      	ldr	r5, [sp, #36]	; 0x24
  404136:	1e6b      	subs	r3, r5, #1
  404138:	eb03 0a08 	add.w	sl, r3, r8
  40413c:	2200      	movs	r2, #0
  40413e:	4b63      	ldr	r3, [pc, #396]	; (4042cc <_dtoa_r+0xe2c>)
  404140:	f001 fc1e 	bl	405980 <__aeabi_dmul>
  404144:	460f      	mov	r7, r1
  404146:	4606      	mov	r6, r0
  404148:	f001 feb4 	bl	405eb4 <__aeabi_d2iz>
  40414c:	4680      	mov	r8, r0
  40414e:	f7fd fb23 	bl	401798 <__aeabi_i2d>
  404152:	f108 0830 	add.w	r8, r8, #48	; 0x30
  404156:	4602      	mov	r2, r0
  404158:	460b      	mov	r3, r1
  40415a:	4630      	mov	r0, r6
  40415c:	4639      	mov	r1, r7
  40415e:	f7fd f9cd 	bl	4014fc <__aeabi_dsub>
  404162:	f805 8f01 	strb.w	r8, [r5, #1]!
  404166:	4555      	cmp	r5, sl
  404168:	d1e8      	bne.n	40413c <_dtoa_r+0xc9c>
  40416a:	9d10      	ldr	r5, [sp, #64]	; 0x40
  40416c:	4606      	mov	r6, r0
  40416e:	460f      	mov	r7, r1
  404170:	44ab      	add	fp, r5
  404172:	2200      	movs	r2, #0
  404174:	4b56      	ldr	r3, [pc, #344]	; (4042d0 <_dtoa_r+0xe30>)
  404176:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
  40417a:	f7fd f9c1 	bl	401500 <__adddf3>
  40417e:	4632      	mov	r2, r6
  404180:	463b      	mov	r3, r7
  404182:	f001 fe6f 	bl	405e64 <__aeabi_dcmplt>
  404186:	2800      	cmp	r0, #0
  404188:	d04d      	beq.n	404226 <_dtoa_r+0xd86>
  40418a:	9e17      	ldr	r6, [sp, #92]	; 0x5c
  40418c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40418e:	9607      	str	r6, [sp, #28]
  404190:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
  404194:	f7ff bb4a 	b.w	40382c <_dtoa_r+0x38c>
  404198:	9e08      	ldr	r6, [sp, #32]
  40419a:	2300      	movs	r3, #0
  40419c:	ebc9 0506 	rsb	r5, r9, r6
  4041a0:	f7ff bb75 	b.w	40388e <_dtoa_r+0x3ee>
  4041a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
  4041a6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4041a8:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  4041ac:	9d08      	ldr	r5, [sp, #32]
  4041ae:	f7ff bb6e 	b.w	40388e <_dtoa_r+0x3ee>
  4041b2:	4657      	mov	r7, sl
  4041b4:	f7ff bbb8 	b.w	403928 <_dtoa_r+0x488>
  4041b8:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
  4041bc:	f04f 0802 	mov.w	r8, #2
  4041c0:	e54a      	b.n	403c58 <_dtoa_r+0x7b8>
  4041c2:	f1b9 0f00 	cmp.w	r9, #0
  4041c6:	f43f aeae 	beq.w	403f26 <_dtoa_r+0xa86>
  4041ca:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
  4041cc:	2e00      	cmp	r6, #0
  4041ce:	f77f af28 	ble.w	404022 <_dtoa_r+0xb82>
  4041d2:	2200      	movs	r2, #0
  4041d4:	4b3d      	ldr	r3, [pc, #244]	; (4042cc <_dtoa_r+0xe2c>)
  4041d6:	4650      	mov	r0, sl
  4041d8:	4659      	mov	r1, fp
  4041da:	f001 fbd1 	bl	405980 <__aeabi_dmul>
  4041de:	4682      	mov	sl, r0
  4041e0:	f108 0001 	add.w	r0, r8, #1
  4041e4:	468b      	mov	fp, r1
  4041e6:	f7fd fad7 	bl	401798 <__aeabi_i2d>
  4041ea:	4602      	mov	r2, r0
  4041ec:	460b      	mov	r3, r1
  4041ee:	4650      	mov	r0, sl
  4041f0:	4659      	mov	r1, fp
  4041f2:	f001 fbc5 	bl	405980 <__aeabi_dmul>
  4041f6:	2200      	movs	r2, #0
  4041f8:	4b36      	ldr	r3, [pc, #216]	; (4042d4 <_dtoa_r+0xe34>)
  4041fa:	f7fd f981 	bl	401500 <__adddf3>
  4041fe:	9d07      	ldr	r5, [sp, #28]
  404200:	4606      	mov	r6, r0
  404202:	3d01      	subs	r5, #1
  404204:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
  404208:	9517      	str	r5, [sp, #92]	; 0x5c
  40420a:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
  40420e:	e543      	b.n	403c98 <_dtoa_r+0x7f8>
  404210:	4635      	mov	r5, r6
  404212:	9b06      	ldr	r3, [sp, #24]
  404214:	9e06      	ldr	r6, [sp, #24]
  404216:	2239      	movs	r2, #57	; 0x39
  404218:	7032      	strb	r2, [r6, #0]
  40421a:	f103 0b01 	add.w	fp, r3, #1
  40421e:	463e      	mov	r6, r7
  404220:	9909      	ldr	r1, [sp, #36]	; 0x24
  404222:	f7ff bbee 	b.w	403a02 <_dtoa_r+0x562>
  404226:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
  40422a:	2000      	movs	r0, #0
  40422c:	4928      	ldr	r1, [pc, #160]	; (4042d0 <_dtoa_r+0xe30>)
  40422e:	f7fd f965 	bl	4014fc <__aeabi_dsub>
  404232:	4632      	mov	r2, r6
  404234:	463b      	mov	r3, r7
  404236:	f001 fe33 	bl	405ea0 <__aeabi_dcmpgt>
  40423a:	2800      	cmp	r0, #0
  40423c:	f43f aef1 	beq.w	404022 <_dtoa_r+0xb82>
  404240:	465b      	mov	r3, fp
  404242:	f813 2c01 	ldrb.w	r2, [r3, #-1]
  404246:	469b      	mov	fp, r3
  404248:	2a30      	cmp	r2, #48	; 0x30
  40424a:	f103 33ff 	add.w	r3, r3, #4294967295
  40424e:	d0f8      	beq.n	404242 <_dtoa_r+0xda2>
  404250:	9d17      	ldr	r5, [sp, #92]	; 0x5c
  404252:	9507      	str	r5, [sp, #28]
  404254:	f7ff baf1 	b.w	40383a <_dtoa_r+0x39a>
  404258:	4645      	mov	r5, r8
  40425a:	4654      	mov	r4, sl
  40425c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
  40425e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404260:	9607      	str	r6, [sp, #28]
  404262:	f7ff bae3 	b.w	40382c <_dtoa_r+0x38c>
  404266:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  40426a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
  40426e:	d0cf      	beq.n	404210 <_dtoa_r+0xd70>
  404270:	9b03      	ldr	r3, [sp, #12]
  404272:	4635      	mov	r5, r6
  404274:	2b00      	cmp	r3, #0
  404276:	9e06      	ldr	r6, [sp, #24]
  404278:	bfc8      	it	gt
  40427a:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
  40427e:	f886 a000 	strb.w	sl, [r6]
  404282:	f106 0b01 	add.w	fp, r6, #1
  404286:	463e      	mov	r6, r7
  404288:	f7ff bbc1 	b.w	403a0e <_dtoa_r+0x56e>
  40428c:	f47f aea7 	bne.w	403fde <_dtoa_r+0xb3e>
  404290:	f01a 0f01 	tst.w	sl, #1
  404294:	f43f aea3 	beq.w	403fde <_dtoa_r+0xb3e>
  404298:	e69b      	b.n	403fd2 <_dtoa_r+0xb32>
  40429a:	4631      	mov	r1, r6
  40429c:	4620      	mov	r0, r4
  40429e:	220a      	movs	r2, #10
  4042a0:	2300      	movs	r3, #0
  4042a2:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
  4042a6:	f000 fd43 	bl	404d30 <__multadd>
  4042aa:	4606      	mov	r6, r0
  4042ac:	f7ff bb6a 	b.w	403984 <_dtoa_r+0x4e4>
  4042b0:	f04f 0802 	mov.w	r8, #2
  4042b4:	e4d0      	b.n	403c58 <_dtoa_r+0x7b8>
  4042b6:	f43f ab50 	beq.w	40395a <_dtoa_r+0x4ba>
  4042ba:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
  4042be:	f7ff bbe0 	b.w	403a82 <_dtoa_r+0x5e2>
  4042c2:	bf00      	nop
  4042c4:	00406cf8 	.word	0x00406cf8
  4042c8:	00406dc0 	.word	0x00406dc0
  4042cc:	40240000 	.word	0x40240000
  4042d0:	3fe00000 	.word	0x3fe00000
  4042d4:	401c0000 	.word	0x401c0000

004042d8 <__libc_fini_array>:
  4042d8:	b538      	push	{r3, r4, r5, lr}
  4042da:	4d09      	ldr	r5, [pc, #36]	; (404300 <__libc_fini_array+0x28>)
  4042dc:	4c09      	ldr	r4, [pc, #36]	; (404304 <__libc_fini_array+0x2c>)
  4042de:	1b64      	subs	r4, r4, r5
  4042e0:	10a4      	asrs	r4, r4, #2
  4042e2:	bf18      	it	ne
  4042e4:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
  4042e8:	d005      	beq.n	4042f6 <__libc_fini_array+0x1e>
  4042ea:	3c01      	subs	r4, #1
  4042ec:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  4042f0:	4798      	blx	r3
  4042f2:	2c00      	cmp	r4, #0
  4042f4:	d1f9      	bne.n	4042ea <__libc_fini_array+0x12>
  4042f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  4042fa:	f002 bd85 	b.w	406e08 <_fini>
  4042fe:	bf00      	nop
  404300:	00406e14 	.word	0x00406e14
  404304:	00406e18 	.word	0x00406e18

00404308 <_malloc_trim_r>:
  404308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40430a:	4d23      	ldr	r5, [pc, #140]	; (404398 <_malloc_trim_r+0x90>)
  40430c:	460f      	mov	r7, r1
  40430e:	4604      	mov	r4, r0
  404310:	f000 fcda 	bl	404cc8 <__malloc_lock>
  404314:	68ab      	ldr	r3, [r5, #8]
  404316:	685e      	ldr	r6, [r3, #4]
  404318:	f026 0603 	bic.w	r6, r6, #3
  40431c:	1bf1      	subs	r1, r6, r7
  40431e:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
  404322:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404326:	f021 010f 	bic.w	r1, r1, #15
  40432a:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
  40432e:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
  404332:	db07      	blt.n	404344 <_malloc_trim_r+0x3c>
  404334:	4620      	mov	r0, r4
  404336:	2100      	movs	r1, #0
  404338:	f001 f9dc 	bl	4056f4 <_sbrk_r>
  40433c:	68ab      	ldr	r3, [r5, #8]
  40433e:	4433      	add	r3, r6
  404340:	4298      	cmp	r0, r3
  404342:	d004      	beq.n	40434e <_malloc_trim_r+0x46>
  404344:	4620      	mov	r0, r4
  404346:	f000 fcc1 	bl	404ccc <__malloc_unlock>
  40434a:	2000      	movs	r0, #0
  40434c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40434e:	4620      	mov	r0, r4
  404350:	4279      	negs	r1, r7
  404352:	f001 f9cf 	bl	4056f4 <_sbrk_r>
  404356:	3001      	adds	r0, #1
  404358:	d00d      	beq.n	404376 <_malloc_trim_r+0x6e>
  40435a:	4b10      	ldr	r3, [pc, #64]	; (40439c <_malloc_trim_r+0x94>)
  40435c:	68aa      	ldr	r2, [r5, #8]
  40435e:	6819      	ldr	r1, [r3, #0]
  404360:	1bf6      	subs	r6, r6, r7
  404362:	f046 0601 	orr.w	r6, r6, #1
  404366:	4620      	mov	r0, r4
  404368:	1bc9      	subs	r1, r1, r7
  40436a:	6056      	str	r6, [r2, #4]
  40436c:	6019      	str	r1, [r3, #0]
  40436e:	f000 fcad 	bl	404ccc <__malloc_unlock>
  404372:	2001      	movs	r0, #1
  404374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404376:	4620      	mov	r0, r4
  404378:	2100      	movs	r1, #0
  40437a:	f001 f9bb 	bl	4056f4 <_sbrk_r>
  40437e:	68ab      	ldr	r3, [r5, #8]
  404380:	1ac2      	subs	r2, r0, r3
  404382:	2a0f      	cmp	r2, #15
  404384:	ddde      	ble.n	404344 <_malloc_trim_r+0x3c>
  404386:	4d06      	ldr	r5, [pc, #24]	; (4043a0 <_malloc_trim_r+0x98>)
  404388:	4904      	ldr	r1, [pc, #16]	; (40439c <_malloc_trim_r+0x94>)
  40438a:	682d      	ldr	r5, [r5, #0]
  40438c:	f042 0201 	orr.w	r2, r2, #1
  404390:	1b40      	subs	r0, r0, r5
  404392:	605a      	str	r2, [r3, #4]
  404394:	6008      	str	r0, [r1, #0]
  404396:	e7d5      	b.n	404344 <_malloc_trim_r+0x3c>
  404398:	2000054c 	.word	0x2000054c
  40439c:	20000bd8 	.word	0x20000bd8
  4043a0:	20000958 	.word	0x20000958

004043a4 <_free_r>:
  4043a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4043a8:	460d      	mov	r5, r1
  4043aa:	4606      	mov	r6, r0
  4043ac:	2900      	cmp	r1, #0
  4043ae:	d055      	beq.n	40445c <_free_r+0xb8>
  4043b0:	f000 fc8a 	bl	404cc8 <__malloc_lock>
  4043b4:	f855 1c04 	ldr.w	r1, [r5, #-4]
  4043b8:	f8df c170 	ldr.w	ip, [pc, #368]	; 40452c <_free_r+0x188>
  4043bc:	f1a5 0408 	sub.w	r4, r5, #8
  4043c0:	f021 0301 	bic.w	r3, r1, #1
  4043c4:	18e2      	adds	r2, r4, r3
  4043c6:	f8dc 0008 	ldr.w	r0, [ip, #8]
  4043ca:	6857      	ldr	r7, [r2, #4]
  4043cc:	4290      	cmp	r0, r2
  4043ce:	f027 0703 	bic.w	r7, r7, #3
  4043d2:	d068      	beq.n	4044a6 <_free_r+0x102>
  4043d4:	f011 0101 	ands.w	r1, r1, #1
  4043d8:	6057      	str	r7, [r2, #4]
  4043da:	d032      	beq.n	404442 <_free_r+0x9e>
  4043dc:	2100      	movs	r1, #0
  4043de:	19d0      	adds	r0, r2, r7
  4043e0:	6840      	ldr	r0, [r0, #4]
  4043e2:	07c0      	lsls	r0, r0, #31
  4043e4:	d406      	bmi.n	4043f4 <_free_r+0x50>
  4043e6:	443b      	add	r3, r7
  4043e8:	6890      	ldr	r0, [r2, #8]
  4043ea:	2900      	cmp	r1, #0
  4043ec:	d04d      	beq.n	40448a <_free_r+0xe6>
  4043ee:	68d2      	ldr	r2, [r2, #12]
  4043f0:	60c2      	str	r2, [r0, #12]
  4043f2:	6090      	str	r0, [r2, #8]
  4043f4:	f043 0201 	orr.w	r2, r3, #1
  4043f8:	6062      	str	r2, [r4, #4]
  4043fa:	50e3      	str	r3, [r4, r3]
  4043fc:	b9e1      	cbnz	r1, 404438 <_free_r+0x94>
  4043fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  404402:	d32d      	bcc.n	404460 <_free_r+0xbc>
  404404:	0a5a      	lsrs	r2, r3, #9
  404406:	2a04      	cmp	r2, #4
  404408:	d869      	bhi.n	4044de <_free_r+0x13a>
  40440a:	0998      	lsrs	r0, r3, #6
  40440c:	3038      	adds	r0, #56	; 0x38
  40440e:	0041      	lsls	r1, r0, #1
  404410:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
  404414:	f8dc 2008 	ldr.w	r2, [ip, #8]
  404418:	4944      	ldr	r1, [pc, #272]	; (40452c <_free_r+0x188>)
  40441a:	4562      	cmp	r2, ip
  40441c:	d065      	beq.n	4044ea <_free_r+0x146>
  40441e:	6851      	ldr	r1, [r2, #4]
  404420:	f021 0103 	bic.w	r1, r1, #3
  404424:	428b      	cmp	r3, r1
  404426:	d202      	bcs.n	40442e <_free_r+0x8a>
  404428:	6892      	ldr	r2, [r2, #8]
  40442a:	4594      	cmp	ip, r2
  40442c:	d1f7      	bne.n	40441e <_free_r+0x7a>
  40442e:	68d3      	ldr	r3, [r2, #12]
  404430:	60e3      	str	r3, [r4, #12]
  404432:	60a2      	str	r2, [r4, #8]
  404434:	609c      	str	r4, [r3, #8]
  404436:	60d4      	str	r4, [r2, #12]
  404438:	4630      	mov	r0, r6
  40443a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  40443e:	f000 bc45 	b.w	404ccc <__malloc_unlock>
  404442:	f855 5c08 	ldr.w	r5, [r5, #-8]
  404446:	f10c 0808 	add.w	r8, ip, #8
  40444a:	1b64      	subs	r4, r4, r5
  40444c:	68a0      	ldr	r0, [r4, #8]
  40444e:	442b      	add	r3, r5
  404450:	4540      	cmp	r0, r8
  404452:	d042      	beq.n	4044da <_free_r+0x136>
  404454:	68e5      	ldr	r5, [r4, #12]
  404456:	60c5      	str	r5, [r0, #12]
  404458:	60a8      	str	r0, [r5, #8]
  40445a:	e7c0      	b.n	4043de <_free_r+0x3a>
  40445c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404460:	08db      	lsrs	r3, r3, #3
  404462:	109a      	asrs	r2, r3, #2
  404464:	2001      	movs	r0, #1
  404466:	4090      	lsls	r0, r2
  404468:	f8dc 1004 	ldr.w	r1, [ip, #4]
  40446c:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
  404470:	689a      	ldr	r2, [r3, #8]
  404472:	4301      	orrs	r1, r0
  404474:	60a2      	str	r2, [r4, #8]
  404476:	60e3      	str	r3, [r4, #12]
  404478:	f8cc 1004 	str.w	r1, [ip, #4]
  40447c:	4630      	mov	r0, r6
  40447e:	609c      	str	r4, [r3, #8]
  404480:	60d4      	str	r4, [r2, #12]
  404482:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  404486:	f000 bc21 	b.w	404ccc <__malloc_unlock>
  40448a:	4d29      	ldr	r5, [pc, #164]	; (404530 <_free_r+0x18c>)
  40448c:	42a8      	cmp	r0, r5
  40448e:	d1ae      	bne.n	4043ee <_free_r+0x4a>
  404490:	f043 0201 	orr.w	r2, r3, #1
  404494:	f8cc 4014 	str.w	r4, [ip, #20]
  404498:	f8cc 4010 	str.w	r4, [ip, #16]
  40449c:	60e0      	str	r0, [r4, #12]
  40449e:	60a0      	str	r0, [r4, #8]
  4044a0:	6062      	str	r2, [r4, #4]
  4044a2:	50e3      	str	r3, [r4, r3]
  4044a4:	e7c8      	b.n	404438 <_free_r+0x94>
  4044a6:	441f      	add	r7, r3
  4044a8:	07cb      	lsls	r3, r1, #31
  4044aa:	d407      	bmi.n	4044bc <_free_r+0x118>
  4044ac:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4044b0:	1a64      	subs	r4, r4, r1
  4044b2:	68e3      	ldr	r3, [r4, #12]
  4044b4:	68a2      	ldr	r2, [r4, #8]
  4044b6:	440f      	add	r7, r1
  4044b8:	60d3      	str	r3, [r2, #12]
  4044ba:	609a      	str	r2, [r3, #8]
  4044bc:	4b1d      	ldr	r3, [pc, #116]	; (404534 <_free_r+0x190>)
  4044be:	f047 0201 	orr.w	r2, r7, #1
  4044c2:	681b      	ldr	r3, [r3, #0]
  4044c4:	6062      	str	r2, [r4, #4]
  4044c6:	429f      	cmp	r7, r3
  4044c8:	f8cc 4008 	str.w	r4, [ip, #8]
  4044cc:	d3b4      	bcc.n	404438 <_free_r+0x94>
  4044ce:	4b1a      	ldr	r3, [pc, #104]	; (404538 <_free_r+0x194>)
  4044d0:	4630      	mov	r0, r6
  4044d2:	6819      	ldr	r1, [r3, #0]
  4044d4:	f7ff ff18 	bl	404308 <_malloc_trim_r>
  4044d8:	e7ae      	b.n	404438 <_free_r+0x94>
  4044da:	2101      	movs	r1, #1
  4044dc:	e77f      	b.n	4043de <_free_r+0x3a>
  4044de:	2a14      	cmp	r2, #20
  4044e0:	d80b      	bhi.n	4044fa <_free_r+0x156>
  4044e2:	f102 005b 	add.w	r0, r2, #91	; 0x5b
  4044e6:	0041      	lsls	r1, r0, #1
  4044e8:	e792      	b.n	404410 <_free_r+0x6c>
  4044ea:	1080      	asrs	r0, r0, #2
  4044ec:	2501      	movs	r5, #1
  4044ee:	4085      	lsls	r5, r0
  4044f0:	6848      	ldr	r0, [r1, #4]
  4044f2:	4613      	mov	r3, r2
  4044f4:	4328      	orrs	r0, r5
  4044f6:	6048      	str	r0, [r1, #4]
  4044f8:	e79a      	b.n	404430 <_free_r+0x8c>
  4044fa:	2a54      	cmp	r2, #84	; 0x54
  4044fc:	d803      	bhi.n	404506 <_free_r+0x162>
  4044fe:	0b18      	lsrs	r0, r3, #12
  404500:	306e      	adds	r0, #110	; 0x6e
  404502:	0041      	lsls	r1, r0, #1
  404504:	e784      	b.n	404410 <_free_r+0x6c>
  404506:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  40450a:	d803      	bhi.n	404514 <_free_r+0x170>
  40450c:	0bd8      	lsrs	r0, r3, #15
  40450e:	3077      	adds	r0, #119	; 0x77
  404510:	0041      	lsls	r1, r0, #1
  404512:	e77d      	b.n	404410 <_free_r+0x6c>
  404514:	f240 5154 	movw	r1, #1364	; 0x554
  404518:	428a      	cmp	r2, r1
  40451a:	d803      	bhi.n	404524 <_free_r+0x180>
  40451c:	0c98      	lsrs	r0, r3, #18
  40451e:	307c      	adds	r0, #124	; 0x7c
  404520:	0041      	lsls	r1, r0, #1
  404522:	e775      	b.n	404410 <_free_r+0x6c>
  404524:	21fc      	movs	r1, #252	; 0xfc
  404526:	207e      	movs	r0, #126	; 0x7e
  404528:	e772      	b.n	404410 <_free_r+0x6c>
  40452a:	bf00      	nop
  40452c:	2000054c 	.word	0x2000054c
  404530:	20000554 	.word	0x20000554
  404534:	20000954 	.word	0x20000954
  404538:	20000bd4 	.word	0x20000bd4

0040453c <_localeconv_r>:
  40453c:	4800      	ldr	r0, [pc, #0]	; (404540 <_localeconv_r+0x4>)
  40453e:	4770      	bx	lr
  404540:	20000514 	.word	0x20000514

00404544 <_malloc_r>:
  404544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404548:	f101 050b 	add.w	r5, r1, #11
  40454c:	2d16      	cmp	r5, #22
  40454e:	b083      	sub	sp, #12
  404550:	4606      	mov	r6, r0
  404552:	d927      	bls.n	4045a4 <_malloc_r+0x60>
  404554:	f035 0507 	bics.w	r5, r5, #7
  404558:	d427      	bmi.n	4045aa <_malloc_r+0x66>
  40455a:	42a9      	cmp	r1, r5
  40455c:	d825      	bhi.n	4045aa <_malloc_r+0x66>
  40455e:	4630      	mov	r0, r6
  404560:	f000 fbb2 	bl	404cc8 <__malloc_lock>
  404564:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
  404568:	d226      	bcs.n	4045b8 <_malloc_r+0x74>
  40456a:	4fc1      	ldr	r7, [pc, #772]	; (404870 <_malloc_r+0x32c>)
  40456c:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
  404570:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
  404574:	68dc      	ldr	r4, [r3, #12]
  404576:	429c      	cmp	r4, r3
  404578:	f000 81d2 	beq.w	404920 <_malloc_r+0x3dc>
  40457c:	6863      	ldr	r3, [r4, #4]
  40457e:	68e2      	ldr	r2, [r4, #12]
  404580:	f023 0303 	bic.w	r3, r3, #3
  404584:	4423      	add	r3, r4
  404586:	6858      	ldr	r0, [r3, #4]
  404588:	68a1      	ldr	r1, [r4, #8]
  40458a:	f040 0501 	orr.w	r5, r0, #1
  40458e:	60ca      	str	r2, [r1, #12]
  404590:	4630      	mov	r0, r6
  404592:	6091      	str	r1, [r2, #8]
  404594:	605d      	str	r5, [r3, #4]
  404596:	f000 fb99 	bl	404ccc <__malloc_unlock>
  40459a:	3408      	adds	r4, #8
  40459c:	4620      	mov	r0, r4
  40459e:	b003      	add	sp, #12
  4045a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045a4:	2510      	movs	r5, #16
  4045a6:	42a9      	cmp	r1, r5
  4045a8:	d9d9      	bls.n	40455e <_malloc_r+0x1a>
  4045aa:	2400      	movs	r4, #0
  4045ac:	230c      	movs	r3, #12
  4045ae:	4620      	mov	r0, r4
  4045b0:	6033      	str	r3, [r6, #0]
  4045b2:	b003      	add	sp, #12
  4045b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4045b8:	ea5f 2c55 	movs.w	ip, r5, lsr #9
  4045bc:	f000 8089 	beq.w	4046d2 <_malloc_r+0x18e>
  4045c0:	f1bc 0f04 	cmp.w	ip, #4
  4045c4:	f200 8160 	bhi.w	404888 <_malloc_r+0x344>
  4045c8:	ea4f 1c95 	mov.w	ip, r5, lsr #6
  4045cc:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
  4045d0:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4045d4:	4fa6      	ldr	r7, [pc, #664]	; (404870 <_malloc_r+0x32c>)
  4045d6:	eb07 0181 	add.w	r1, r7, r1, lsl #2
  4045da:	68cc      	ldr	r4, [r1, #12]
  4045dc:	42a1      	cmp	r1, r4
  4045de:	d105      	bne.n	4045ec <_malloc_r+0xa8>
  4045e0:	e00c      	b.n	4045fc <_malloc_r+0xb8>
  4045e2:	2b00      	cmp	r3, #0
  4045e4:	da79      	bge.n	4046da <_malloc_r+0x196>
  4045e6:	68e4      	ldr	r4, [r4, #12]
  4045e8:	42a1      	cmp	r1, r4
  4045ea:	d007      	beq.n	4045fc <_malloc_r+0xb8>
  4045ec:	6862      	ldr	r2, [r4, #4]
  4045ee:	f022 0203 	bic.w	r2, r2, #3
  4045f2:	1b53      	subs	r3, r2, r5
  4045f4:	2b0f      	cmp	r3, #15
  4045f6:	ddf4      	ble.n	4045e2 <_malloc_r+0x9e>
  4045f8:	f10c 3cff 	add.w	ip, ip, #4294967295
  4045fc:	f10c 0c01 	add.w	ip, ip, #1
  404600:	4b9b      	ldr	r3, [pc, #620]	; (404870 <_malloc_r+0x32c>)
  404602:	693c      	ldr	r4, [r7, #16]
  404604:	f103 0e08 	add.w	lr, r3, #8
  404608:	4574      	cmp	r4, lr
  40460a:	f000 817e 	beq.w	40490a <_malloc_r+0x3c6>
  40460e:	6861      	ldr	r1, [r4, #4]
  404610:	f021 0103 	bic.w	r1, r1, #3
  404614:	1b4a      	subs	r2, r1, r5
  404616:	2a0f      	cmp	r2, #15
  404618:	f300 8164 	bgt.w	4048e4 <_malloc_r+0x3a0>
  40461c:	2a00      	cmp	r2, #0
  40461e:	f8c3 e014 	str.w	lr, [r3, #20]
  404622:	f8c3 e010 	str.w	lr, [r3, #16]
  404626:	da69      	bge.n	4046fc <_malloc_r+0x1b8>
  404628:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
  40462c:	f080 813a 	bcs.w	4048a4 <_malloc_r+0x360>
  404630:	08c9      	lsrs	r1, r1, #3
  404632:	108a      	asrs	r2, r1, #2
  404634:	f04f 0801 	mov.w	r8, #1
  404638:	fa08 f802 	lsl.w	r8, r8, r2
  40463c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
  404640:	685a      	ldr	r2, [r3, #4]
  404642:	6888      	ldr	r0, [r1, #8]
  404644:	ea48 0202 	orr.w	r2, r8, r2
  404648:	60a0      	str	r0, [r4, #8]
  40464a:	60e1      	str	r1, [r4, #12]
  40464c:	605a      	str	r2, [r3, #4]
  40464e:	608c      	str	r4, [r1, #8]
  404650:	60c4      	str	r4, [r0, #12]
  404652:	ea4f 03ac 	mov.w	r3, ip, asr #2
  404656:	2001      	movs	r0, #1
  404658:	4098      	lsls	r0, r3
  40465a:	4290      	cmp	r0, r2
  40465c:	d85b      	bhi.n	404716 <_malloc_r+0x1d2>
  40465e:	4202      	tst	r2, r0
  404660:	d106      	bne.n	404670 <_malloc_r+0x12c>
  404662:	f02c 0c03 	bic.w	ip, ip, #3
  404666:	0040      	lsls	r0, r0, #1
  404668:	4202      	tst	r2, r0
  40466a:	f10c 0c04 	add.w	ip, ip, #4
  40466e:	d0fa      	beq.n	404666 <_malloc_r+0x122>
  404670:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
  404674:	4644      	mov	r4, r8
  404676:	46e1      	mov	r9, ip
  404678:	68e3      	ldr	r3, [r4, #12]
  40467a:	429c      	cmp	r4, r3
  40467c:	d107      	bne.n	40468e <_malloc_r+0x14a>
  40467e:	e146      	b.n	40490e <_malloc_r+0x3ca>
  404680:	2a00      	cmp	r2, #0
  404682:	f280 8157 	bge.w	404934 <_malloc_r+0x3f0>
  404686:	68db      	ldr	r3, [r3, #12]
  404688:	429c      	cmp	r4, r3
  40468a:	f000 8140 	beq.w	40490e <_malloc_r+0x3ca>
  40468e:	6859      	ldr	r1, [r3, #4]
  404690:	f021 0103 	bic.w	r1, r1, #3
  404694:	1b4a      	subs	r2, r1, r5
  404696:	2a0f      	cmp	r2, #15
  404698:	ddf2      	ble.n	404680 <_malloc_r+0x13c>
  40469a:	461c      	mov	r4, r3
  40469c:	f854 cf08 	ldr.w	ip, [r4, #8]!
  4046a0:	68d9      	ldr	r1, [r3, #12]
  4046a2:	f045 0901 	orr.w	r9, r5, #1
  4046a6:	f042 0801 	orr.w	r8, r2, #1
  4046aa:	441d      	add	r5, r3
  4046ac:	f8c3 9004 	str.w	r9, [r3, #4]
  4046b0:	4630      	mov	r0, r6
  4046b2:	f8cc 100c 	str.w	r1, [ip, #12]
  4046b6:	f8c1 c008 	str.w	ip, [r1, #8]
  4046ba:	617d      	str	r5, [r7, #20]
  4046bc:	613d      	str	r5, [r7, #16]
  4046be:	f8c5 e00c 	str.w	lr, [r5, #12]
  4046c2:	f8c5 e008 	str.w	lr, [r5, #8]
  4046c6:	f8c5 8004 	str.w	r8, [r5, #4]
  4046ca:	50aa      	str	r2, [r5, r2]
  4046cc:	f000 fafe 	bl	404ccc <__malloc_unlock>
  4046d0:	e764      	b.n	40459c <_malloc_r+0x58>
  4046d2:	217e      	movs	r1, #126	; 0x7e
  4046d4:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
  4046d8:	e77c      	b.n	4045d4 <_malloc_r+0x90>
  4046da:	4422      	add	r2, r4
  4046dc:	6850      	ldr	r0, [r2, #4]
  4046de:	68e3      	ldr	r3, [r4, #12]
  4046e0:	68a1      	ldr	r1, [r4, #8]
  4046e2:	f040 0501 	orr.w	r5, r0, #1
  4046e6:	60cb      	str	r3, [r1, #12]
  4046e8:	4630      	mov	r0, r6
  4046ea:	6099      	str	r1, [r3, #8]
  4046ec:	6055      	str	r5, [r2, #4]
  4046ee:	f000 faed 	bl	404ccc <__malloc_unlock>
  4046f2:	3408      	adds	r4, #8
  4046f4:	4620      	mov	r0, r4
  4046f6:	b003      	add	sp, #12
  4046f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4046fc:	4421      	add	r1, r4
  4046fe:	684b      	ldr	r3, [r1, #4]
  404700:	4630      	mov	r0, r6
  404702:	f043 0301 	orr.w	r3, r3, #1
  404706:	604b      	str	r3, [r1, #4]
  404708:	f000 fae0 	bl	404ccc <__malloc_unlock>
  40470c:	3408      	adds	r4, #8
  40470e:	4620      	mov	r0, r4
  404710:	b003      	add	sp, #12
  404712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404716:	68bc      	ldr	r4, [r7, #8]
  404718:	6863      	ldr	r3, [r4, #4]
  40471a:	f023 0903 	bic.w	r9, r3, #3
  40471e:	45a9      	cmp	r9, r5
  404720:	d304      	bcc.n	40472c <_malloc_r+0x1e8>
  404722:	ebc5 0309 	rsb	r3, r5, r9
  404726:	2b0f      	cmp	r3, #15
  404728:	f300 8091 	bgt.w	40484e <_malloc_r+0x30a>
  40472c:	4b51      	ldr	r3, [pc, #324]	; (404874 <_malloc_r+0x330>)
  40472e:	4a52      	ldr	r2, [pc, #328]	; (404878 <_malloc_r+0x334>)
  404730:	6819      	ldr	r1, [r3, #0]
  404732:	6813      	ldr	r3, [r2, #0]
  404734:	eb05 0a01 	add.w	sl, r5, r1
  404738:	3301      	adds	r3, #1
  40473a:	eb04 0b09 	add.w	fp, r4, r9
  40473e:	f000 8161 	beq.w	404a04 <_malloc_r+0x4c0>
  404742:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
  404746:	f10a 0a0f 	add.w	sl, sl, #15
  40474a:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
  40474e:	f02a 0a0f 	bic.w	sl, sl, #15
  404752:	4630      	mov	r0, r6
  404754:	4651      	mov	r1, sl
  404756:	9201      	str	r2, [sp, #4]
  404758:	f000 ffcc 	bl	4056f4 <_sbrk_r>
  40475c:	f1b0 3fff 	cmp.w	r0, #4294967295
  404760:	4680      	mov	r8, r0
  404762:	9a01      	ldr	r2, [sp, #4]
  404764:	f000 8101 	beq.w	40496a <_malloc_r+0x426>
  404768:	4583      	cmp	fp, r0
  40476a:	f200 80fb 	bhi.w	404964 <_malloc_r+0x420>
  40476e:	f8df c114 	ldr.w	ip, [pc, #276]	; 404884 <_malloc_r+0x340>
  404772:	45c3      	cmp	fp, r8
  404774:	f8dc 3000 	ldr.w	r3, [ip]
  404778:	4453      	add	r3, sl
  40477a:	f8cc 3000 	str.w	r3, [ip]
  40477e:	f000 814a 	beq.w	404a16 <_malloc_r+0x4d2>
  404782:	6812      	ldr	r2, [r2, #0]
  404784:	493c      	ldr	r1, [pc, #240]	; (404878 <_malloc_r+0x334>)
  404786:	3201      	adds	r2, #1
  404788:	bf1b      	ittet	ne
  40478a:	ebcb 0b08 	rsbne	fp, fp, r8
  40478e:	445b      	addne	r3, fp
  404790:	f8c1 8000 	streq.w	r8, [r1]
  404794:	f8cc 3000 	strne.w	r3, [ip]
  404798:	f018 0307 	ands.w	r3, r8, #7
  40479c:	f000 8114 	beq.w	4049c8 <_malloc_r+0x484>
  4047a0:	f1c3 0208 	rsb	r2, r3, #8
  4047a4:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
  4047a8:	4490      	add	r8, r2
  4047aa:	3308      	adds	r3, #8
  4047ac:	44c2      	add	sl, r8
  4047ae:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
  4047b2:	ebca 0a03 	rsb	sl, sl, r3
  4047b6:	4651      	mov	r1, sl
  4047b8:	4630      	mov	r0, r6
  4047ba:	f8cd c004 	str.w	ip, [sp, #4]
  4047be:	f000 ff99 	bl	4056f4 <_sbrk_r>
  4047c2:	1c43      	adds	r3, r0, #1
  4047c4:	f8dd c004 	ldr.w	ip, [sp, #4]
  4047c8:	f000 8135 	beq.w	404a36 <_malloc_r+0x4f2>
  4047cc:	ebc8 0200 	rsb	r2, r8, r0
  4047d0:	4452      	add	r2, sl
  4047d2:	f042 0201 	orr.w	r2, r2, #1
  4047d6:	f8dc 3000 	ldr.w	r3, [ip]
  4047da:	42bc      	cmp	r4, r7
  4047dc:	4453      	add	r3, sl
  4047de:	f8c7 8008 	str.w	r8, [r7, #8]
  4047e2:	f8cc 3000 	str.w	r3, [ip]
  4047e6:	f8c8 2004 	str.w	r2, [r8, #4]
  4047ea:	f8df a098 	ldr.w	sl, [pc, #152]	; 404884 <_malloc_r+0x340>
  4047ee:	d015      	beq.n	40481c <_malloc_r+0x2d8>
  4047f0:	f1b9 0f0f 	cmp.w	r9, #15
  4047f4:	f240 80eb 	bls.w	4049ce <_malloc_r+0x48a>
  4047f8:	6861      	ldr	r1, [r4, #4]
  4047fa:	f1a9 020c 	sub.w	r2, r9, #12
  4047fe:	f022 0207 	bic.w	r2, r2, #7
  404802:	f001 0101 	and.w	r1, r1, #1
  404806:	ea42 0e01 	orr.w	lr, r2, r1
  40480a:	2005      	movs	r0, #5
  40480c:	18a1      	adds	r1, r4, r2
  40480e:	2a0f      	cmp	r2, #15
  404810:	f8c4 e004 	str.w	lr, [r4, #4]
  404814:	6048      	str	r0, [r1, #4]
  404816:	6088      	str	r0, [r1, #8]
  404818:	f200 8111 	bhi.w	404a3e <_malloc_r+0x4fa>
  40481c:	4a17      	ldr	r2, [pc, #92]	; (40487c <_malloc_r+0x338>)
  40481e:	68bc      	ldr	r4, [r7, #8]
  404820:	6811      	ldr	r1, [r2, #0]
  404822:	428b      	cmp	r3, r1
  404824:	bf88      	it	hi
  404826:	6013      	strhi	r3, [r2, #0]
  404828:	4a15      	ldr	r2, [pc, #84]	; (404880 <_malloc_r+0x33c>)
  40482a:	6811      	ldr	r1, [r2, #0]
  40482c:	428b      	cmp	r3, r1
  40482e:	bf88      	it	hi
  404830:	6013      	strhi	r3, [r2, #0]
  404832:	6862      	ldr	r2, [r4, #4]
  404834:	f022 0203 	bic.w	r2, r2, #3
  404838:	4295      	cmp	r5, r2
  40483a:	ebc5 0302 	rsb	r3, r5, r2
  40483e:	d801      	bhi.n	404844 <_malloc_r+0x300>
  404840:	2b0f      	cmp	r3, #15
  404842:	dc04      	bgt.n	40484e <_malloc_r+0x30a>
  404844:	4630      	mov	r0, r6
  404846:	f000 fa41 	bl	404ccc <__malloc_unlock>
  40484a:	2400      	movs	r4, #0
  40484c:	e6a6      	b.n	40459c <_malloc_r+0x58>
  40484e:	f045 0201 	orr.w	r2, r5, #1
  404852:	f043 0301 	orr.w	r3, r3, #1
  404856:	4425      	add	r5, r4
  404858:	6062      	str	r2, [r4, #4]
  40485a:	4630      	mov	r0, r6
  40485c:	60bd      	str	r5, [r7, #8]
  40485e:	606b      	str	r3, [r5, #4]
  404860:	f000 fa34 	bl	404ccc <__malloc_unlock>
  404864:	3408      	adds	r4, #8
  404866:	4620      	mov	r0, r4
  404868:	b003      	add	sp, #12
  40486a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40486e:	bf00      	nop
  404870:	2000054c 	.word	0x2000054c
  404874:	20000bd4 	.word	0x20000bd4
  404878:	20000958 	.word	0x20000958
  40487c:	20000bd0 	.word	0x20000bd0
  404880:	20000bcc 	.word	0x20000bcc
  404884:	20000bd8 	.word	0x20000bd8
  404888:	f1bc 0f14 	cmp.w	ip, #20
  40488c:	d961      	bls.n	404952 <_malloc_r+0x40e>
  40488e:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
  404892:	f200 808f 	bhi.w	4049b4 <_malloc_r+0x470>
  404896:	ea4f 3c15 	mov.w	ip, r5, lsr #12
  40489a:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
  40489e:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4048a2:	e697      	b.n	4045d4 <_malloc_r+0x90>
  4048a4:	0a4b      	lsrs	r3, r1, #9
  4048a6:	2b04      	cmp	r3, #4
  4048a8:	d958      	bls.n	40495c <_malloc_r+0x418>
  4048aa:	2b14      	cmp	r3, #20
  4048ac:	f200 80ad 	bhi.w	404a0a <_malloc_r+0x4c6>
  4048b0:	f103 025b 	add.w	r2, r3, #91	; 0x5b
  4048b4:	0050      	lsls	r0, r2, #1
  4048b6:	eb07 0080 	add.w	r0, r7, r0, lsl #2
  4048ba:	6883      	ldr	r3, [r0, #8]
  4048bc:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 404a78 <_malloc_r+0x534>
  4048c0:	4283      	cmp	r3, r0
  4048c2:	f000 808a 	beq.w	4049da <_malloc_r+0x496>
  4048c6:	685a      	ldr	r2, [r3, #4]
  4048c8:	f022 0203 	bic.w	r2, r2, #3
  4048cc:	4291      	cmp	r1, r2
  4048ce:	d202      	bcs.n	4048d6 <_malloc_r+0x392>
  4048d0:	689b      	ldr	r3, [r3, #8]
  4048d2:	4298      	cmp	r0, r3
  4048d4:	d1f7      	bne.n	4048c6 <_malloc_r+0x382>
  4048d6:	68d9      	ldr	r1, [r3, #12]
  4048d8:	687a      	ldr	r2, [r7, #4]
  4048da:	60e1      	str	r1, [r4, #12]
  4048dc:	60a3      	str	r3, [r4, #8]
  4048de:	608c      	str	r4, [r1, #8]
  4048e0:	60dc      	str	r4, [r3, #12]
  4048e2:	e6b6      	b.n	404652 <_malloc_r+0x10e>
  4048e4:	f045 0701 	orr.w	r7, r5, #1
  4048e8:	f042 0101 	orr.w	r1, r2, #1
  4048ec:	4425      	add	r5, r4
  4048ee:	6067      	str	r7, [r4, #4]
  4048f0:	4630      	mov	r0, r6
  4048f2:	615d      	str	r5, [r3, #20]
  4048f4:	611d      	str	r5, [r3, #16]
  4048f6:	f8c5 e00c 	str.w	lr, [r5, #12]
  4048fa:	f8c5 e008 	str.w	lr, [r5, #8]
  4048fe:	6069      	str	r1, [r5, #4]
  404900:	50aa      	str	r2, [r5, r2]
  404902:	3408      	adds	r4, #8
  404904:	f000 f9e2 	bl	404ccc <__malloc_unlock>
  404908:	e648      	b.n	40459c <_malloc_r+0x58>
  40490a:	685a      	ldr	r2, [r3, #4]
  40490c:	e6a1      	b.n	404652 <_malloc_r+0x10e>
  40490e:	f109 0901 	add.w	r9, r9, #1
  404912:	f019 0f03 	tst.w	r9, #3
  404916:	f104 0408 	add.w	r4, r4, #8
  40491a:	f47f aead 	bne.w	404678 <_malloc_r+0x134>
  40491e:	e02d      	b.n	40497c <_malloc_r+0x438>
  404920:	f104 0308 	add.w	r3, r4, #8
  404924:	6964      	ldr	r4, [r4, #20]
  404926:	42a3      	cmp	r3, r4
  404928:	bf08      	it	eq
  40492a:	f10c 0c02 	addeq.w	ip, ip, #2
  40492e:	f43f ae67 	beq.w	404600 <_malloc_r+0xbc>
  404932:	e623      	b.n	40457c <_malloc_r+0x38>
  404934:	4419      	add	r1, r3
  404936:	6848      	ldr	r0, [r1, #4]
  404938:	461c      	mov	r4, r3
  40493a:	f854 2f08 	ldr.w	r2, [r4, #8]!
  40493e:	68db      	ldr	r3, [r3, #12]
  404940:	f040 0501 	orr.w	r5, r0, #1
  404944:	604d      	str	r5, [r1, #4]
  404946:	4630      	mov	r0, r6
  404948:	60d3      	str	r3, [r2, #12]
  40494a:	609a      	str	r2, [r3, #8]
  40494c:	f000 f9be 	bl	404ccc <__malloc_unlock>
  404950:	e624      	b.n	40459c <_malloc_r+0x58>
  404952:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
  404956:	ea4f 014c 	mov.w	r1, ip, lsl #1
  40495a:	e63b      	b.n	4045d4 <_malloc_r+0x90>
  40495c:	098a      	lsrs	r2, r1, #6
  40495e:	3238      	adds	r2, #56	; 0x38
  404960:	0050      	lsls	r0, r2, #1
  404962:	e7a8      	b.n	4048b6 <_malloc_r+0x372>
  404964:	42bc      	cmp	r4, r7
  404966:	f43f af02 	beq.w	40476e <_malloc_r+0x22a>
  40496a:	68bc      	ldr	r4, [r7, #8]
  40496c:	6862      	ldr	r2, [r4, #4]
  40496e:	f022 0203 	bic.w	r2, r2, #3
  404972:	e761      	b.n	404838 <_malloc_r+0x2f4>
  404974:	f8d8 8000 	ldr.w	r8, [r8]
  404978:	4598      	cmp	r8, r3
  40497a:	d17a      	bne.n	404a72 <_malloc_r+0x52e>
  40497c:	f01c 0f03 	tst.w	ip, #3
  404980:	f1a8 0308 	sub.w	r3, r8, #8
  404984:	f10c 3cff 	add.w	ip, ip, #4294967295
  404988:	d1f4      	bne.n	404974 <_malloc_r+0x430>
  40498a:	687b      	ldr	r3, [r7, #4]
  40498c:	ea23 0300 	bic.w	r3, r3, r0
  404990:	607b      	str	r3, [r7, #4]
  404992:	0040      	lsls	r0, r0, #1
  404994:	4298      	cmp	r0, r3
  404996:	f63f aebe 	bhi.w	404716 <_malloc_r+0x1d2>
  40499a:	2800      	cmp	r0, #0
  40499c:	f43f aebb 	beq.w	404716 <_malloc_r+0x1d2>
  4049a0:	4203      	tst	r3, r0
  4049a2:	46cc      	mov	ip, r9
  4049a4:	f47f ae64 	bne.w	404670 <_malloc_r+0x12c>
  4049a8:	0040      	lsls	r0, r0, #1
  4049aa:	4203      	tst	r3, r0
  4049ac:	f10c 0c04 	add.w	ip, ip, #4
  4049b0:	d0fa      	beq.n	4049a8 <_malloc_r+0x464>
  4049b2:	e65d      	b.n	404670 <_malloc_r+0x12c>
  4049b4:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
  4049b8:	d819      	bhi.n	4049ee <_malloc_r+0x4aa>
  4049ba:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
  4049be:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
  4049c2:	ea4f 014c 	mov.w	r1, ip, lsl #1
  4049c6:	e605      	b.n	4045d4 <_malloc_r+0x90>
  4049c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4049cc:	e6ee      	b.n	4047ac <_malloc_r+0x268>
  4049ce:	2301      	movs	r3, #1
  4049d0:	f8c8 3004 	str.w	r3, [r8, #4]
  4049d4:	4644      	mov	r4, r8
  4049d6:	2200      	movs	r2, #0
  4049d8:	e72e      	b.n	404838 <_malloc_r+0x2f4>
  4049da:	1092      	asrs	r2, r2, #2
  4049dc:	2001      	movs	r0, #1
  4049de:	4090      	lsls	r0, r2
  4049e0:	f8d8 2004 	ldr.w	r2, [r8, #4]
  4049e4:	4619      	mov	r1, r3
  4049e6:	4302      	orrs	r2, r0
  4049e8:	f8c8 2004 	str.w	r2, [r8, #4]
  4049ec:	e775      	b.n	4048da <_malloc_r+0x396>
  4049ee:	f240 5354 	movw	r3, #1364	; 0x554
  4049f2:	459c      	cmp	ip, r3
  4049f4:	d81b      	bhi.n	404a2e <_malloc_r+0x4ea>
  4049f6:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  4049fa:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
  4049fe:	ea4f 014c 	mov.w	r1, ip, lsl #1
  404a02:	e5e7      	b.n	4045d4 <_malloc_r+0x90>
  404a04:	f10a 0a10 	add.w	sl, sl, #16
  404a08:	e6a3      	b.n	404752 <_malloc_r+0x20e>
  404a0a:	2b54      	cmp	r3, #84	; 0x54
  404a0c:	d81f      	bhi.n	404a4e <_malloc_r+0x50a>
  404a0e:	0b0a      	lsrs	r2, r1, #12
  404a10:	326e      	adds	r2, #110	; 0x6e
  404a12:	0050      	lsls	r0, r2, #1
  404a14:	e74f      	b.n	4048b6 <_malloc_r+0x372>
  404a16:	f3cb 010b 	ubfx	r1, fp, #0, #12
  404a1a:	2900      	cmp	r1, #0
  404a1c:	f47f aeb1 	bne.w	404782 <_malloc_r+0x23e>
  404a20:	eb0a 0109 	add.w	r1, sl, r9
  404a24:	68ba      	ldr	r2, [r7, #8]
  404a26:	f041 0101 	orr.w	r1, r1, #1
  404a2a:	6051      	str	r1, [r2, #4]
  404a2c:	e6f6      	b.n	40481c <_malloc_r+0x2d8>
  404a2e:	21fc      	movs	r1, #252	; 0xfc
  404a30:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
  404a34:	e5ce      	b.n	4045d4 <_malloc_r+0x90>
  404a36:	2201      	movs	r2, #1
  404a38:	f04f 0a00 	mov.w	sl, #0
  404a3c:	e6cb      	b.n	4047d6 <_malloc_r+0x292>
  404a3e:	f104 0108 	add.w	r1, r4, #8
  404a42:	4630      	mov	r0, r6
  404a44:	f7ff fcae 	bl	4043a4 <_free_r>
  404a48:	f8da 3000 	ldr.w	r3, [sl]
  404a4c:	e6e6      	b.n	40481c <_malloc_r+0x2d8>
  404a4e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  404a52:	d803      	bhi.n	404a5c <_malloc_r+0x518>
  404a54:	0bca      	lsrs	r2, r1, #15
  404a56:	3277      	adds	r2, #119	; 0x77
  404a58:	0050      	lsls	r0, r2, #1
  404a5a:	e72c      	b.n	4048b6 <_malloc_r+0x372>
  404a5c:	f240 5254 	movw	r2, #1364	; 0x554
  404a60:	4293      	cmp	r3, r2
  404a62:	d803      	bhi.n	404a6c <_malloc_r+0x528>
  404a64:	0c8a      	lsrs	r2, r1, #18
  404a66:	327c      	adds	r2, #124	; 0x7c
  404a68:	0050      	lsls	r0, r2, #1
  404a6a:	e724      	b.n	4048b6 <_malloc_r+0x372>
  404a6c:	20fc      	movs	r0, #252	; 0xfc
  404a6e:	227e      	movs	r2, #126	; 0x7e
  404a70:	e721      	b.n	4048b6 <_malloc_r+0x372>
  404a72:	687b      	ldr	r3, [r7, #4]
  404a74:	e78d      	b.n	404992 <_malloc_r+0x44e>
  404a76:	bf00      	nop
  404a78:	2000054c 	.word	0x2000054c

00404a7c <memchr>:
  404a7c:	0783      	lsls	r3, r0, #30
  404a7e:	b470      	push	{r4, r5, r6}
  404a80:	b2c9      	uxtb	r1, r1
  404a82:	d040      	beq.n	404b06 <memchr+0x8a>
  404a84:	1e54      	subs	r4, r2, #1
  404a86:	b32a      	cbz	r2, 404ad4 <memchr+0x58>
  404a88:	7803      	ldrb	r3, [r0, #0]
  404a8a:	428b      	cmp	r3, r1
  404a8c:	d023      	beq.n	404ad6 <memchr+0x5a>
  404a8e:	1c43      	adds	r3, r0, #1
  404a90:	e004      	b.n	404a9c <memchr+0x20>
  404a92:	b1fc      	cbz	r4, 404ad4 <memchr+0x58>
  404a94:	7805      	ldrb	r5, [r0, #0]
  404a96:	4614      	mov	r4, r2
  404a98:	428d      	cmp	r5, r1
  404a9a:	d01c      	beq.n	404ad6 <memchr+0x5a>
  404a9c:	f013 0f03 	tst.w	r3, #3
  404aa0:	4618      	mov	r0, r3
  404aa2:	f104 32ff 	add.w	r2, r4, #4294967295
  404aa6:	f103 0301 	add.w	r3, r3, #1
  404aaa:	d1f2      	bne.n	404a92 <memchr+0x16>
  404aac:	2c03      	cmp	r4, #3
  404aae:	d814      	bhi.n	404ada <memchr+0x5e>
  404ab0:	1e65      	subs	r5, r4, #1
  404ab2:	b354      	cbz	r4, 404b0a <memchr+0x8e>
  404ab4:	7803      	ldrb	r3, [r0, #0]
  404ab6:	428b      	cmp	r3, r1
  404ab8:	d00d      	beq.n	404ad6 <memchr+0x5a>
  404aba:	1c42      	adds	r2, r0, #1
  404abc:	2300      	movs	r3, #0
  404abe:	e002      	b.n	404ac6 <memchr+0x4a>
  404ac0:	7804      	ldrb	r4, [r0, #0]
  404ac2:	428c      	cmp	r4, r1
  404ac4:	d007      	beq.n	404ad6 <memchr+0x5a>
  404ac6:	42ab      	cmp	r3, r5
  404ac8:	4610      	mov	r0, r2
  404aca:	f103 0301 	add.w	r3, r3, #1
  404ace:	f102 0201 	add.w	r2, r2, #1
  404ad2:	d1f5      	bne.n	404ac0 <memchr+0x44>
  404ad4:	2000      	movs	r0, #0
  404ad6:	bc70      	pop	{r4, r5, r6}
  404ad8:	4770      	bx	lr
  404ada:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
  404ade:	4603      	mov	r3, r0
  404ae0:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
  404ae4:	681a      	ldr	r2, [r3, #0]
  404ae6:	4618      	mov	r0, r3
  404ae8:	4072      	eors	r2, r6
  404aea:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
  404aee:	ea25 0202 	bic.w	r2, r5, r2
  404af2:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
  404af6:	f103 0304 	add.w	r3, r3, #4
  404afa:	d1d9      	bne.n	404ab0 <memchr+0x34>
  404afc:	3c04      	subs	r4, #4
  404afe:	2c03      	cmp	r4, #3
  404b00:	4618      	mov	r0, r3
  404b02:	d8ef      	bhi.n	404ae4 <memchr+0x68>
  404b04:	e7d4      	b.n	404ab0 <memchr+0x34>
  404b06:	4614      	mov	r4, r2
  404b08:	e7d0      	b.n	404aac <memchr+0x30>
  404b0a:	4620      	mov	r0, r4
  404b0c:	e7e3      	b.n	404ad6 <memchr+0x5a>
  404b0e:	bf00      	nop

00404b10 <memcpy>:
  404b10:	4684      	mov	ip, r0
  404b12:	ea41 0300 	orr.w	r3, r1, r0
  404b16:	f013 0303 	ands.w	r3, r3, #3
  404b1a:	d149      	bne.n	404bb0 <memcpy+0xa0>
  404b1c:	3a40      	subs	r2, #64	; 0x40
  404b1e:	d323      	bcc.n	404b68 <memcpy+0x58>
  404b20:	680b      	ldr	r3, [r1, #0]
  404b22:	6003      	str	r3, [r0, #0]
  404b24:	684b      	ldr	r3, [r1, #4]
  404b26:	6043      	str	r3, [r0, #4]
  404b28:	688b      	ldr	r3, [r1, #8]
  404b2a:	6083      	str	r3, [r0, #8]
  404b2c:	68cb      	ldr	r3, [r1, #12]
  404b2e:	60c3      	str	r3, [r0, #12]
  404b30:	690b      	ldr	r3, [r1, #16]
  404b32:	6103      	str	r3, [r0, #16]
  404b34:	694b      	ldr	r3, [r1, #20]
  404b36:	6143      	str	r3, [r0, #20]
  404b38:	698b      	ldr	r3, [r1, #24]
  404b3a:	6183      	str	r3, [r0, #24]
  404b3c:	69cb      	ldr	r3, [r1, #28]
  404b3e:	61c3      	str	r3, [r0, #28]
  404b40:	6a0b      	ldr	r3, [r1, #32]
  404b42:	6203      	str	r3, [r0, #32]
  404b44:	6a4b      	ldr	r3, [r1, #36]	; 0x24
  404b46:	6243      	str	r3, [r0, #36]	; 0x24
  404b48:	6a8b      	ldr	r3, [r1, #40]	; 0x28
  404b4a:	6283      	str	r3, [r0, #40]	; 0x28
  404b4c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
  404b4e:	62c3      	str	r3, [r0, #44]	; 0x2c
  404b50:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  404b52:	6303      	str	r3, [r0, #48]	; 0x30
  404b54:	6b4b      	ldr	r3, [r1, #52]	; 0x34
  404b56:	6343      	str	r3, [r0, #52]	; 0x34
  404b58:	6b8b      	ldr	r3, [r1, #56]	; 0x38
  404b5a:	6383      	str	r3, [r0, #56]	; 0x38
  404b5c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
  404b5e:	63c3      	str	r3, [r0, #60]	; 0x3c
  404b60:	3040      	adds	r0, #64	; 0x40
  404b62:	3140      	adds	r1, #64	; 0x40
  404b64:	3a40      	subs	r2, #64	; 0x40
  404b66:	d2db      	bcs.n	404b20 <memcpy+0x10>
  404b68:	3230      	adds	r2, #48	; 0x30
  404b6a:	d30b      	bcc.n	404b84 <memcpy+0x74>
  404b6c:	680b      	ldr	r3, [r1, #0]
  404b6e:	6003      	str	r3, [r0, #0]
  404b70:	684b      	ldr	r3, [r1, #4]
  404b72:	6043      	str	r3, [r0, #4]
  404b74:	688b      	ldr	r3, [r1, #8]
  404b76:	6083      	str	r3, [r0, #8]
  404b78:	68cb      	ldr	r3, [r1, #12]
  404b7a:	60c3      	str	r3, [r0, #12]
  404b7c:	3010      	adds	r0, #16
  404b7e:	3110      	adds	r1, #16
  404b80:	3a10      	subs	r2, #16
  404b82:	d2f3      	bcs.n	404b6c <memcpy+0x5c>
  404b84:	320c      	adds	r2, #12
  404b86:	d305      	bcc.n	404b94 <memcpy+0x84>
  404b88:	f851 3b04 	ldr.w	r3, [r1], #4
  404b8c:	f840 3b04 	str.w	r3, [r0], #4
  404b90:	3a04      	subs	r2, #4
  404b92:	d2f9      	bcs.n	404b88 <memcpy+0x78>
  404b94:	3204      	adds	r2, #4
  404b96:	d008      	beq.n	404baa <memcpy+0x9a>
  404b98:	07d2      	lsls	r2, r2, #31
  404b9a:	bf1c      	itt	ne
  404b9c:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404ba0:	f800 3b01 	strbne.w	r3, [r0], #1
  404ba4:	d301      	bcc.n	404baa <memcpy+0x9a>
  404ba6:	880b      	ldrh	r3, [r1, #0]
  404ba8:	8003      	strh	r3, [r0, #0]
  404baa:	4660      	mov	r0, ip
  404bac:	4770      	bx	lr
  404bae:	bf00      	nop
  404bb0:	2a08      	cmp	r2, #8
  404bb2:	d313      	bcc.n	404bdc <memcpy+0xcc>
  404bb4:	078b      	lsls	r3, r1, #30
  404bb6:	d0b1      	beq.n	404b1c <memcpy+0xc>
  404bb8:	f010 0303 	ands.w	r3, r0, #3
  404bbc:	d0ae      	beq.n	404b1c <memcpy+0xc>
  404bbe:	f1c3 0304 	rsb	r3, r3, #4
  404bc2:	1ad2      	subs	r2, r2, r3
  404bc4:	07db      	lsls	r3, r3, #31
  404bc6:	bf1c      	itt	ne
  404bc8:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404bcc:	f800 3b01 	strbne.w	r3, [r0], #1
  404bd0:	d3a4      	bcc.n	404b1c <memcpy+0xc>
  404bd2:	f831 3b02 	ldrh.w	r3, [r1], #2
  404bd6:	f820 3b02 	strh.w	r3, [r0], #2
  404bda:	e79f      	b.n	404b1c <memcpy+0xc>
  404bdc:	3a04      	subs	r2, #4
  404bde:	d3d9      	bcc.n	404b94 <memcpy+0x84>
  404be0:	3a01      	subs	r2, #1
  404be2:	f811 3b01 	ldrb.w	r3, [r1], #1
  404be6:	f800 3b01 	strb.w	r3, [r0], #1
  404bea:	d2f9      	bcs.n	404be0 <memcpy+0xd0>
  404bec:	780b      	ldrb	r3, [r1, #0]
  404bee:	7003      	strb	r3, [r0, #0]
  404bf0:	784b      	ldrb	r3, [r1, #1]
  404bf2:	7043      	strb	r3, [r0, #1]
  404bf4:	788b      	ldrb	r3, [r1, #2]
  404bf6:	7083      	strb	r3, [r0, #2]
  404bf8:	4660      	mov	r0, ip
  404bfa:	4770      	bx	lr

00404bfc <memmove>:
  404bfc:	4288      	cmp	r0, r1
  404bfe:	b4f0      	push	{r4, r5, r6, r7}
  404c00:	d910      	bls.n	404c24 <memmove+0x28>
  404c02:	188c      	adds	r4, r1, r2
  404c04:	42a0      	cmp	r0, r4
  404c06:	d20d      	bcs.n	404c24 <memmove+0x28>
  404c08:	1885      	adds	r5, r0, r2
  404c0a:	1e53      	subs	r3, r2, #1
  404c0c:	b142      	cbz	r2, 404c20 <memmove+0x24>
  404c0e:	4621      	mov	r1, r4
  404c10:	462a      	mov	r2, r5
  404c12:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
  404c16:	3b01      	subs	r3, #1
  404c18:	f802 4d01 	strb.w	r4, [r2, #-1]!
  404c1c:	1c5c      	adds	r4, r3, #1
  404c1e:	d1f8      	bne.n	404c12 <memmove+0x16>
  404c20:	bcf0      	pop	{r4, r5, r6, r7}
  404c22:	4770      	bx	lr
  404c24:	2a0f      	cmp	r2, #15
  404c26:	d944      	bls.n	404cb2 <memmove+0xb6>
  404c28:	ea40 0301 	orr.w	r3, r0, r1
  404c2c:	079b      	lsls	r3, r3, #30
  404c2e:	d144      	bne.n	404cba <memmove+0xbe>
  404c30:	f1a2 0710 	sub.w	r7, r2, #16
  404c34:	093f      	lsrs	r7, r7, #4
  404c36:	eb00 1607 	add.w	r6, r0, r7, lsl #4
  404c3a:	3610      	adds	r6, #16
  404c3c:	460c      	mov	r4, r1
  404c3e:	4603      	mov	r3, r0
  404c40:	6825      	ldr	r5, [r4, #0]
  404c42:	3310      	adds	r3, #16
  404c44:	f843 5c10 	str.w	r5, [r3, #-16]
  404c48:	6865      	ldr	r5, [r4, #4]
  404c4a:	3410      	adds	r4, #16
  404c4c:	f843 5c0c 	str.w	r5, [r3, #-12]
  404c50:	f854 5c08 	ldr.w	r5, [r4, #-8]
  404c54:	f843 5c08 	str.w	r5, [r3, #-8]
  404c58:	f854 5c04 	ldr.w	r5, [r4, #-4]
  404c5c:	f843 5c04 	str.w	r5, [r3, #-4]
  404c60:	42b3      	cmp	r3, r6
  404c62:	d1ed      	bne.n	404c40 <memmove+0x44>
  404c64:	1c7b      	adds	r3, r7, #1
  404c66:	f002 0c0f 	and.w	ip, r2, #15
  404c6a:	011b      	lsls	r3, r3, #4
  404c6c:	f1bc 0f03 	cmp.w	ip, #3
  404c70:	4419      	add	r1, r3
  404c72:	4403      	add	r3, r0
  404c74:	d923      	bls.n	404cbe <memmove+0xc2>
  404c76:	460e      	mov	r6, r1
  404c78:	461d      	mov	r5, r3
  404c7a:	4664      	mov	r4, ip
  404c7c:	f856 7b04 	ldr.w	r7, [r6], #4
  404c80:	3c04      	subs	r4, #4
  404c82:	2c03      	cmp	r4, #3
  404c84:	f845 7b04 	str.w	r7, [r5], #4
  404c88:	d8f8      	bhi.n	404c7c <memmove+0x80>
  404c8a:	f1ac 0404 	sub.w	r4, ip, #4
  404c8e:	f024 0403 	bic.w	r4, r4, #3
  404c92:	3404      	adds	r4, #4
  404c94:	f002 0203 	and.w	r2, r2, #3
  404c98:	4423      	add	r3, r4
  404c9a:	4421      	add	r1, r4
  404c9c:	2a00      	cmp	r2, #0
  404c9e:	d0bf      	beq.n	404c20 <memmove+0x24>
  404ca0:	441a      	add	r2, r3
  404ca2:	f811 4b01 	ldrb.w	r4, [r1], #1
  404ca6:	f803 4b01 	strb.w	r4, [r3], #1
  404caa:	4293      	cmp	r3, r2
  404cac:	d1f9      	bne.n	404ca2 <memmove+0xa6>
  404cae:	bcf0      	pop	{r4, r5, r6, r7}
  404cb0:	4770      	bx	lr
  404cb2:	4603      	mov	r3, r0
  404cb4:	2a00      	cmp	r2, #0
  404cb6:	d1f3      	bne.n	404ca0 <memmove+0xa4>
  404cb8:	e7b2      	b.n	404c20 <memmove+0x24>
  404cba:	4603      	mov	r3, r0
  404cbc:	e7f0      	b.n	404ca0 <memmove+0xa4>
  404cbe:	4662      	mov	r2, ip
  404cc0:	2a00      	cmp	r2, #0
  404cc2:	d1ed      	bne.n	404ca0 <memmove+0xa4>
  404cc4:	e7ac      	b.n	404c20 <memmove+0x24>
  404cc6:	bf00      	nop

00404cc8 <__malloc_lock>:
  404cc8:	4770      	bx	lr
  404cca:	bf00      	nop

00404ccc <__malloc_unlock>:
  404ccc:	4770      	bx	lr
  404cce:	bf00      	nop

00404cd0 <_Balloc>:
  404cd0:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
  404cd2:	b570      	push	{r4, r5, r6, lr}
  404cd4:	4605      	mov	r5, r0
  404cd6:	460c      	mov	r4, r1
  404cd8:	b14a      	cbz	r2, 404cee <_Balloc+0x1e>
  404cda:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
  404cde:	b180      	cbz	r0, 404d02 <_Balloc+0x32>
  404ce0:	6801      	ldr	r1, [r0, #0]
  404ce2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
  404ce6:	2200      	movs	r2, #0
  404ce8:	6102      	str	r2, [r0, #16]
  404cea:	60c2      	str	r2, [r0, #12]
  404cec:	bd70      	pop	{r4, r5, r6, pc}
  404cee:	2221      	movs	r2, #33	; 0x21
  404cf0:	2104      	movs	r1, #4
  404cf2:	f000 fe15 	bl	405920 <_calloc_r>
  404cf6:	64e8      	str	r0, [r5, #76]	; 0x4c
  404cf8:	4602      	mov	r2, r0
  404cfa:	2800      	cmp	r0, #0
  404cfc:	d1ed      	bne.n	404cda <_Balloc+0xa>
  404cfe:	2000      	movs	r0, #0
  404d00:	bd70      	pop	{r4, r5, r6, pc}
  404d02:	2101      	movs	r1, #1
  404d04:	fa01 f604 	lsl.w	r6, r1, r4
  404d08:	1d72      	adds	r2, r6, #5
  404d0a:	4628      	mov	r0, r5
  404d0c:	0092      	lsls	r2, r2, #2
  404d0e:	f000 fe07 	bl	405920 <_calloc_r>
  404d12:	2800      	cmp	r0, #0
  404d14:	d0f3      	beq.n	404cfe <_Balloc+0x2e>
  404d16:	6044      	str	r4, [r0, #4]
  404d18:	6086      	str	r6, [r0, #8]
  404d1a:	e7e4      	b.n	404ce6 <_Balloc+0x16>

00404d1c <_Bfree>:
  404d1c:	b131      	cbz	r1, 404d2c <_Bfree+0x10>
  404d1e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  404d20:	684a      	ldr	r2, [r1, #4]
  404d22:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404d26:	6008      	str	r0, [r1, #0]
  404d28:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404d2c:	4770      	bx	lr
  404d2e:	bf00      	nop

00404d30 <__multadd>:
  404d30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  404d34:	690f      	ldr	r7, [r1, #16]
  404d36:	b083      	sub	sp, #12
  404d38:	4688      	mov	r8, r1
  404d3a:	4681      	mov	r9, r0
  404d3c:	f101 0514 	add.w	r5, r1, #20
  404d40:	2400      	movs	r4, #0
  404d42:	682e      	ldr	r6, [r5, #0]
  404d44:	3401      	adds	r4, #1
  404d46:	b2b1      	uxth	r1, r6
  404d48:	0c36      	lsrs	r6, r6, #16
  404d4a:	fb02 3301 	mla	r3, r2, r1, r3
  404d4e:	fb02 f606 	mul.w	r6, r2, r6
  404d52:	b299      	uxth	r1, r3
  404d54:	eb06 4313 	add.w	r3, r6, r3, lsr #16
  404d58:	eb01 4103 	add.w	r1, r1, r3, lsl #16
  404d5c:	42a7      	cmp	r7, r4
  404d5e:	f845 1b04 	str.w	r1, [r5], #4
  404d62:	ea4f 4313 	mov.w	r3, r3, lsr #16
  404d66:	dcec      	bgt.n	404d42 <__multadd+0x12>
  404d68:	b14b      	cbz	r3, 404d7e <__multadd+0x4e>
  404d6a:	f8d8 2008 	ldr.w	r2, [r8, #8]
  404d6e:	4297      	cmp	r7, r2
  404d70:	da09      	bge.n	404d86 <__multadd+0x56>
  404d72:	eb08 0287 	add.w	r2, r8, r7, lsl #2
  404d76:	3701      	adds	r7, #1
  404d78:	6153      	str	r3, [r2, #20]
  404d7a:	f8c8 7010 	str.w	r7, [r8, #16]
  404d7e:	4640      	mov	r0, r8
  404d80:	b003      	add	sp, #12
  404d82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  404d86:	f8d8 1004 	ldr.w	r1, [r8, #4]
  404d8a:	4648      	mov	r0, r9
  404d8c:	3101      	adds	r1, #1
  404d8e:	9301      	str	r3, [sp, #4]
  404d90:	f7ff ff9e 	bl	404cd0 <_Balloc>
  404d94:	f8d8 2010 	ldr.w	r2, [r8, #16]
  404d98:	f108 010c 	add.w	r1, r8, #12
  404d9c:	3202      	adds	r2, #2
  404d9e:	4604      	mov	r4, r0
  404da0:	0092      	lsls	r2, r2, #2
  404da2:	300c      	adds	r0, #12
  404da4:	f7ff feb4 	bl	404b10 <memcpy>
  404da8:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
  404dac:	f8d8 1004 	ldr.w	r1, [r8, #4]
  404db0:	9b01      	ldr	r3, [sp, #4]
  404db2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404db6:	f8c8 0000 	str.w	r0, [r8]
  404dba:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
  404dbe:	46a0      	mov	r8, r4
  404dc0:	e7d7      	b.n	404d72 <__multadd+0x42>
  404dc2:	bf00      	nop

00404dc4 <__hi0bits>:
  404dc4:	0c03      	lsrs	r3, r0, #16
  404dc6:	041b      	lsls	r3, r3, #16
  404dc8:	b9b3      	cbnz	r3, 404df8 <__hi0bits+0x34>
  404dca:	0400      	lsls	r0, r0, #16
  404dcc:	2310      	movs	r3, #16
  404dce:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
  404dd2:	bf04      	itt	eq
  404dd4:	0200      	lsleq	r0, r0, #8
  404dd6:	3308      	addeq	r3, #8
  404dd8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
  404ddc:	bf04      	itt	eq
  404dde:	0100      	lsleq	r0, r0, #4
  404de0:	3304      	addeq	r3, #4
  404de2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
  404de6:	bf04      	itt	eq
  404de8:	0080      	lsleq	r0, r0, #2
  404dea:	3302      	addeq	r3, #2
  404dec:	2800      	cmp	r0, #0
  404dee:	db07      	blt.n	404e00 <__hi0bits+0x3c>
  404df0:	0042      	lsls	r2, r0, #1
  404df2:	d403      	bmi.n	404dfc <__hi0bits+0x38>
  404df4:	2020      	movs	r0, #32
  404df6:	4770      	bx	lr
  404df8:	2300      	movs	r3, #0
  404dfa:	e7e8      	b.n	404dce <__hi0bits+0xa>
  404dfc:	1c58      	adds	r0, r3, #1
  404dfe:	4770      	bx	lr
  404e00:	4618      	mov	r0, r3
  404e02:	4770      	bx	lr

00404e04 <__lo0bits>:
  404e04:	6803      	ldr	r3, [r0, #0]
  404e06:	f013 0207 	ands.w	r2, r3, #7
  404e0a:	d007      	beq.n	404e1c <__lo0bits+0x18>
  404e0c:	07d9      	lsls	r1, r3, #31
  404e0e:	d420      	bmi.n	404e52 <__lo0bits+0x4e>
  404e10:	079a      	lsls	r2, r3, #30
  404e12:	d420      	bmi.n	404e56 <__lo0bits+0x52>
  404e14:	089b      	lsrs	r3, r3, #2
  404e16:	6003      	str	r3, [r0, #0]
  404e18:	2002      	movs	r0, #2
  404e1a:	4770      	bx	lr
  404e1c:	b299      	uxth	r1, r3
  404e1e:	b909      	cbnz	r1, 404e24 <__lo0bits+0x20>
  404e20:	0c1b      	lsrs	r3, r3, #16
  404e22:	2210      	movs	r2, #16
  404e24:	f013 0fff 	tst.w	r3, #255	; 0xff
  404e28:	bf04      	itt	eq
  404e2a:	0a1b      	lsreq	r3, r3, #8
  404e2c:	3208      	addeq	r2, #8
  404e2e:	0719      	lsls	r1, r3, #28
  404e30:	bf04      	itt	eq
  404e32:	091b      	lsreq	r3, r3, #4
  404e34:	3204      	addeq	r2, #4
  404e36:	0799      	lsls	r1, r3, #30
  404e38:	bf04      	itt	eq
  404e3a:	089b      	lsreq	r3, r3, #2
  404e3c:	3202      	addeq	r2, #2
  404e3e:	07d9      	lsls	r1, r3, #31
  404e40:	d404      	bmi.n	404e4c <__lo0bits+0x48>
  404e42:	085b      	lsrs	r3, r3, #1
  404e44:	d101      	bne.n	404e4a <__lo0bits+0x46>
  404e46:	2020      	movs	r0, #32
  404e48:	4770      	bx	lr
  404e4a:	3201      	adds	r2, #1
  404e4c:	6003      	str	r3, [r0, #0]
  404e4e:	4610      	mov	r0, r2
  404e50:	4770      	bx	lr
  404e52:	2000      	movs	r0, #0
  404e54:	4770      	bx	lr
  404e56:	085b      	lsrs	r3, r3, #1
  404e58:	6003      	str	r3, [r0, #0]
  404e5a:	2001      	movs	r0, #1
  404e5c:	4770      	bx	lr
  404e5e:	bf00      	nop

00404e60 <__i2b>:
  404e60:	b510      	push	{r4, lr}
  404e62:	460c      	mov	r4, r1
  404e64:	2101      	movs	r1, #1
  404e66:	f7ff ff33 	bl	404cd0 <_Balloc>
  404e6a:	2201      	movs	r2, #1
  404e6c:	6144      	str	r4, [r0, #20]
  404e6e:	6102      	str	r2, [r0, #16]
  404e70:	bd10      	pop	{r4, pc}
  404e72:	bf00      	nop

00404e74 <__multiply>:
  404e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404e78:	690d      	ldr	r5, [r1, #16]
  404e7a:	f8d2 9010 	ldr.w	r9, [r2, #16]
  404e7e:	b085      	sub	sp, #20
  404e80:	454d      	cmp	r5, r9
  404e82:	460c      	mov	r4, r1
  404e84:	4692      	mov	sl, r2
  404e86:	da04      	bge.n	404e92 <__multiply+0x1e>
  404e88:	462a      	mov	r2, r5
  404e8a:	4654      	mov	r4, sl
  404e8c:	464d      	mov	r5, r9
  404e8e:	468a      	mov	sl, r1
  404e90:	4691      	mov	r9, r2
  404e92:	68a3      	ldr	r3, [r4, #8]
  404e94:	eb05 0709 	add.w	r7, r5, r9
  404e98:	6861      	ldr	r1, [r4, #4]
  404e9a:	429f      	cmp	r7, r3
  404e9c:	bfc8      	it	gt
  404e9e:	3101      	addgt	r1, #1
  404ea0:	f7ff ff16 	bl	404cd0 <_Balloc>
  404ea4:	f100 0614 	add.w	r6, r0, #20
  404ea8:	eb06 0887 	add.w	r8, r6, r7, lsl #2
  404eac:	4546      	cmp	r6, r8
  404eae:	9001      	str	r0, [sp, #4]
  404eb0:	d205      	bcs.n	404ebe <__multiply+0x4a>
  404eb2:	4633      	mov	r3, r6
  404eb4:	2000      	movs	r0, #0
  404eb6:	f843 0b04 	str.w	r0, [r3], #4
  404eba:	4598      	cmp	r8, r3
  404ebc:	d8fb      	bhi.n	404eb6 <__multiply+0x42>
  404ebe:	f10a 0c14 	add.w	ip, sl, #20
  404ec2:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
  404ec6:	3414      	adds	r4, #20
  404ec8:	45cc      	cmp	ip, r9
  404eca:	9400      	str	r4, [sp, #0]
  404ecc:	eb04 0585 	add.w	r5, r4, r5, lsl #2
  404ed0:	d25b      	bcs.n	404f8a <__multiply+0x116>
  404ed2:	f8cd 8008 	str.w	r8, [sp, #8]
  404ed6:	9703      	str	r7, [sp, #12]
  404ed8:	46c8      	mov	r8, r9
  404eda:	f85c 3b04 	ldr.w	r3, [ip], #4
  404ede:	b29c      	uxth	r4, r3
  404ee0:	b324      	cbz	r4, 404f2c <__multiply+0xb8>
  404ee2:	9a00      	ldr	r2, [sp, #0]
  404ee4:	4633      	mov	r3, r6
  404ee6:	f04f 0900 	mov.w	r9, #0
  404eea:	e000      	b.n	404eee <__multiply+0x7a>
  404eec:	460b      	mov	r3, r1
  404eee:	f852 7b04 	ldr.w	r7, [r2], #4
  404ef2:	6819      	ldr	r1, [r3, #0]
  404ef4:	fa1f fb87 	uxth.w	fp, r7
  404ef8:	fa1f fa81 	uxth.w	sl, r1
  404efc:	0c38      	lsrs	r0, r7, #16
  404efe:	0c09      	lsrs	r1, r1, #16
  404f00:	fb04 aa0b 	mla	sl, r4, fp, sl
  404f04:	fb04 1000 	mla	r0, r4, r0, r1
  404f08:	44d1      	add	r9, sl
  404f0a:	eb00 4019 	add.w	r0, r0, r9, lsr #16
  404f0e:	fa1f f989 	uxth.w	r9, r9
  404f12:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
  404f16:	4619      	mov	r1, r3
  404f18:	4295      	cmp	r5, r2
  404f1a:	ea4f 4910 	mov.w	r9, r0, lsr #16
  404f1e:	f841 7b04 	str.w	r7, [r1], #4
  404f22:	d8e3      	bhi.n	404eec <__multiply+0x78>
  404f24:	f8c3 9004 	str.w	r9, [r3, #4]
  404f28:	f85c 3c04 	ldr.w	r3, [ip, #-4]
  404f2c:	ea5f 4913 	movs.w	r9, r3, lsr #16
  404f30:	d024      	beq.n	404f7c <__multiply+0x108>
  404f32:	f8d6 a000 	ldr.w	sl, [r6]
  404f36:	9b00      	ldr	r3, [sp, #0]
  404f38:	4650      	mov	r0, sl
  404f3a:	4631      	mov	r1, r6
  404f3c:	f04f 0b00 	mov.w	fp, #0
  404f40:	e000      	b.n	404f44 <__multiply+0xd0>
  404f42:	4611      	mov	r1, r2
  404f44:	881a      	ldrh	r2, [r3, #0]
  404f46:	0c00      	lsrs	r0, r0, #16
  404f48:	fb09 0002 	mla	r0, r9, r2, r0
  404f4c:	fa1f fa8a 	uxth.w	sl, sl
  404f50:	4483      	add	fp, r0
  404f52:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
  404f56:	460a      	mov	r2, r1
  404f58:	f842 0b04 	str.w	r0, [r2], #4
  404f5c:	f853 7b04 	ldr.w	r7, [r3], #4
  404f60:	6848      	ldr	r0, [r1, #4]
  404f62:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  404f66:	b284      	uxth	r4, r0
  404f68:	fb09 4a0a 	mla	sl, r9, sl, r4
  404f6c:	429d      	cmp	r5, r3
  404f6e:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
  404f72:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
  404f76:	d8e4      	bhi.n	404f42 <__multiply+0xce>
  404f78:	f8c1 a004 	str.w	sl, [r1, #4]
  404f7c:	45e0      	cmp	r8, ip
  404f7e:	f106 0604 	add.w	r6, r6, #4
  404f82:	d8aa      	bhi.n	404eda <__multiply+0x66>
  404f84:	f8dd 8008 	ldr.w	r8, [sp, #8]
  404f88:	9f03      	ldr	r7, [sp, #12]
  404f8a:	2f00      	cmp	r7, #0
  404f8c:	dd0a      	ble.n	404fa4 <__multiply+0x130>
  404f8e:	f858 3c04 	ldr.w	r3, [r8, #-4]
  404f92:	f1a8 0804 	sub.w	r8, r8, #4
  404f96:	b11b      	cbz	r3, 404fa0 <__multiply+0x12c>
  404f98:	e004      	b.n	404fa4 <__multiply+0x130>
  404f9a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
  404f9e:	b90b      	cbnz	r3, 404fa4 <__multiply+0x130>
  404fa0:	3f01      	subs	r7, #1
  404fa2:	d1fa      	bne.n	404f9a <__multiply+0x126>
  404fa4:	9b01      	ldr	r3, [sp, #4]
  404fa6:	4618      	mov	r0, r3
  404fa8:	611f      	str	r7, [r3, #16]
  404faa:	b005      	add	sp, #20
  404fac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404fb0 <__pow5mult>:
  404fb0:	f012 0303 	ands.w	r3, r2, #3
  404fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404fb8:	4614      	mov	r4, r2
  404fba:	4607      	mov	r7, r0
  404fbc:	460e      	mov	r6, r1
  404fbe:	d12c      	bne.n	40501a <__pow5mult+0x6a>
  404fc0:	10a4      	asrs	r4, r4, #2
  404fc2:	d01c      	beq.n	404ffe <__pow5mult+0x4e>
  404fc4:	6cbd      	ldr	r5, [r7, #72]	; 0x48
  404fc6:	2d00      	cmp	r5, #0
  404fc8:	d030      	beq.n	40502c <__pow5mult+0x7c>
  404fca:	f04f 0800 	mov.w	r8, #0
  404fce:	e004      	b.n	404fda <__pow5mult+0x2a>
  404fd0:	1064      	asrs	r4, r4, #1
  404fd2:	d014      	beq.n	404ffe <__pow5mult+0x4e>
  404fd4:	6828      	ldr	r0, [r5, #0]
  404fd6:	b1a8      	cbz	r0, 405004 <__pow5mult+0x54>
  404fd8:	4605      	mov	r5, r0
  404fda:	07e3      	lsls	r3, r4, #31
  404fdc:	d5f8      	bpl.n	404fd0 <__pow5mult+0x20>
  404fde:	4638      	mov	r0, r7
  404fe0:	4631      	mov	r1, r6
  404fe2:	462a      	mov	r2, r5
  404fe4:	f7ff ff46 	bl	404e74 <__multiply>
  404fe8:	b1ae      	cbz	r6, 405016 <__pow5mult+0x66>
  404fea:	6872      	ldr	r2, [r6, #4]
  404fec:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404fee:	1064      	asrs	r4, r4, #1
  404ff0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404ff4:	6031      	str	r1, [r6, #0]
  404ff6:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404ffa:	4606      	mov	r6, r0
  404ffc:	d1ea      	bne.n	404fd4 <__pow5mult+0x24>
  404ffe:	4630      	mov	r0, r6
  405000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  405004:	4638      	mov	r0, r7
  405006:	4629      	mov	r1, r5
  405008:	462a      	mov	r2, r5
  40500a:	f7ff ff33 	bl	404e74 <__multiply>
  40500e:	6028      	str	r0, [r5, #0]
  405010:	f8c0 8000 	str.w	r8, [r0]
  405014:	e7e0      	b.n	404fd8 <__pow5mult+0x28>
  405016:	4606      	mov	r6, r0
  405018:	e7da      	b.n	404fd0 <__pow5mult+0x20>
  40501a:	4a0b      	ldr	r2, [pc, #44]	; (405048 <__pow5mult+0x98>)
  40501c:	3b01      	subs	r3, #1
  40501e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
  405022:	2300      	movs	r3, #0
  405024:	f7ff fe84 	bl	404d30 <__multadd>
  405028:	4606      	mov	r6, r0
  40502a:	e7c9      	b.n	404fc0 <__pow5mult+0x10>
  40502c:	2101      	movs	r1, #1
  40502e:	4638      	mov	r0, r7
  405030:	f7ff fe4e 	bl	404cd0 <_Balloc>
  405034:	f240 2171 	movw	r1, #625	; 0x271
  405038:	2201      	movs	r2, #1
  40503a:	2300      	movs	r3, #0
  40503c:	6141      	str	r1, [r0, #20]
  40503e:	6102      	str	r2, [r0, #16]
  405040:	4605      	mov	r5, r0
  405042:	64b8      	str	r0, [r7, #72]	; 0x48
  405044:	6003      	str	r3, [r0, #0]
  405046:	e7c0      	b.n	404fca <__pow5mult+0x1a>
  405048:	00406de8 	.word	0x00406de8

0040504c <__lshift>:
  40504c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405050:	690b      	ldr	r3, [r1, #16]
  405052:	ea4f 1a62 	mov.w	sl, r2, asr #5
  405056:	eb0a 0903 	add.w	r9, sl, r3
  40505a:	688b      	ldr	r3, [r1, #8]
  40505c:	f109 0601 	add.w	r6, r9, #1
  405060:	429e      	cmp	r6, r3
  405062:	460f      	mov	r7, r1
  405064:	4693      	mov	fp, r2
  405066:	4680      	mov	r8, r0
  405068:	6849      	ldr	r1, [r1, #4]
  40506a:	dd04      	ble.n	405076 <__lshift+0x2a>
  40506c:	005b      	lsls	r3, r3, #1
  40506e:	429e      	cmp	r6, r3
  405070:	f101 0101 	add.w	r1, r1, #1
  405074:	dcfa      	bgt.n	40506c <__lshift+0x20>
  405076:	4640      	mov	r0, r8
  405078:	f7ff fe2a 	bl	404cd0 <_Balloc>
  40507c:	f1ba 0f00 	cmp.w	sl, #0
  405080:	f100 0414 	add.w	r4, r0, #20
  405084:	dd09      	ble.n	40509a <__lshift+0x4e>
  405086:	2300      	movs	r3, #0
  405088:	461a      	mov	r2, r3
  40508a:	4625      	mov	r5, r4
  40508c:	3301      	adds	r3, #1
  40508e:	4553      	cmp	r3, sl
  405090:	f845 2b04 	str.w	r2, [r5], #4
  405094:	d1fa      	bne.n	40508c <__lshift+0x40>
  405096:	eb04 0483 	add.w	r4, r4, r3, lsl #2
  40509a:	693a      	ldr	r2, [r7, #16]
  40509c:	f107 0314 	add.w	r3, r7, #20
  4050a0:	f01b 0b1f 	ands.w	fp, fp, #31
  4050a4:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
  4050a8:	d021      	beq.n	4050ee <__lshift+0xa2>
  4050aa:	f1cb 0a20 	rsb	sl, fp, #32
  4050ae:	2200      	movs	r2, #0
  4050b0:	e000      	b.n	4050b4 <__lshift+0x68>
  4050b2:	462c      	mov	r4, r5
  4050b4:	6819      	ldr	r1, [r3, #0]
  4050b6:	4625      	mov	r5, r4
  4050b8:	fa01 f10b 	lsl.w	r1, r1, fp
  4050bc:	430a      	orrs	r2, r1
  4050be:	f845 2b04 	str.w	r2, [r5], #4
  4050c2:	f853 2b04 	ldr.w	r2, [r3], #4
  4050c6:	4563      	cmp	r3, ip
  4050c8:	fa22 f20a 	lsr.w	r2, r2, sl
  4050cc:	d3f1      	bcc.n	4050b2 <__lshift+0x66>
  4050ce:	6062      	str	r2, [r4, #4]
  4050d0:	b10a      	cbz	r2, 4050d6 <__lshift+0x8a>
  4050d2:	f109 0602 	add.w	r6, r9, #2
  4050d6:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
  4050da:	687a      	ldr	r2, [r7, #4]
  4050dc:	3e01      	subs	r6, #1
  4050de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  4050e2:	6106      	str	r6, [r0, #16]
  4050e4:	6039      	str	r1, [r7, #0]
  4050e6:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  4050ea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4050ee:	f853 2b04 	ldr.w	r2, [r3], #4
  4050f2:	459c      	cmp	ip, r3
  4050f4:	f844 2b04 	str.w	r2, [r4], #4
  4050f8:	d9ed      	bls.n	4050d6 <__lshift+0x8a>
  4050fa:	f853 2b04 	ldr.w	r2, [r3], #4
  4050fe:	459c      	cmp	ip, r3
  405100:	f844 2b04 	str.w	r2, [r4], #4
  405104:	d8f3      	bhi.n	4050ee <__lshift+0xa2>
  405106:	e7e6      	b.n	4050d6 <__lshift+0x8a>

00405108 <__mcmp>:
  405108:	6902      	ldr	r2, [r0, #16]
  40510a:	690b      	ldr	r3, [r1, #16]
  40510c:	b410      	push	{r4}
  40510e:	1ad2      	subs	r2, r2, r3
  405110:	d115      	bne.n	40513e <__mcmp+0x36>
  405112:	009b      	lsls	r3, r3, #2
  405114:	3014      	adds	r0, #20
  405116:	3114      	adds	r1, #20
  405118:	4419      	add	r1, r3
  40511a:	4403      	add	r3, r0
  40511c:	e001      	b.n	405122 <__mcmp+0x1a>
  40511e:	4298      	cmp	r0, r3
  405120:	d211      	bcs.n	405146 <__mcmp+0x3e>
  405122:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  405126:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  40512a:	42a2      	cmp	r2, r4
  40512c:	d0f7      	beq.n	40511e <__mcmp+0x16>
  40512e:	4294      	cmp	r4, r2
  405130:	bf94      	ite	ls
  405132:	2001      	movls	r0, #1
  405134:	f04f 30ff 	movhi.w	r0, #4294967295
  405138:	f85d 4b04 	ldr.w	r4, [sp], #4
  40513c:	4770      	bx	lr
  40513e:	4610      	mov	r0, r2
  405140:	f85d 4b04 	ldr.w	r4, [sp], #4
  405144:	4770      	bx	lr
  405146:	2000      	movs	r0, #0
  405148:	f85d 4b04 	ldr.w	r4, [sp], #4
  40514c:	4770      	bx	lr
  40514e:	bf00      	nop

00405150 <__mdiff>:
  405150:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  405154:	460d      	mov	r5, r1
  405156:	4604      	mov	r4, r0
  405158:	4611      	mov	r1, r2
  40515a:	4628      	mov	r0, r5
  40515c:	4616      	mov	r6, r2
  40515e:	f7ff ffd3 	bl	405108 <__mcmp>
  405162:	1e07      	subs	r7, r0, #0
  405164:	d056      	beq.n	405214 <__mdiff+0xc4>
  405166:	db4f      	blt.n	405208 <__mdiff+0xb8>
  405168:	f04f 0900 	mov.w	r9, #0
  40516c:	6869      	ldr	r1, [r5, #4]
  40516e:	4620      	mov	r0, r4
  405170:	f7ff fdae 	bl	404cd0 <_Balloc>
  405174:	692f      	ldr	r7, [r5, #16]
  405176:	6932      	ldr	r2, [r6, #16]
  405178:	3514      	adds	r5, #20
  40517a:	3614      	adds	r6, #20
  40517c:	f8c0 900c 	str.w	r9, [r0, #12]
  405180:	f100 0314 	add.w	r3, r0, #20
  405184:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
  405188:	eb06 0882 	add.w	r8, r6, r2, lsl #2
  40518c:	2100      	movs	r1, #0
  40518e:	f855 4b04 	ldr.w	r4, [r5], #4
  405192:	f856 2b04 	ldr.w	r2, [r6], #4
  405196:	fa1f fa84 	uxth.w	sl, r4
  40519a:	448a      	add	sl, r1
  40519c:	fa1f f982 	uxth.w	r9, r2
  4051a0:	0c11      	lsrs	r1, r2, #16
  4051a2:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
  4051a6:	ebc9 020a 	rsb	r2, r9, sl
  4051aa:	eb01 4122 	add.w	r1, r1, r2, asr #16
  4051ae:	b292      	uxth	r2, r2
  4051b0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  4051b4:	45b0      	cmp	r8, r6
  4051b6:	f843 2b04 	str.w	r2, [r3], #4
  4051ba:	ea4f 4121 	mov.w	r1, r1, asr #16
  4051be:	462c      	mov	r4, r5
  4051c0:	d8e5      	bhi.n	40518e <__mdiff+0x3e>
  4051c2:	45ac      	cmp	ip, r5
  4051c4:	4698      	mov	r8, r3
  4051c6:	d915      	bls.n	4051f4 <__mdiff+0xa4>
  4051c8:	f854 6b04 	ldr.w	r6, [r4], #4
  4051cc:	b2b2      	uxth	r2, r6
  4051ce:	4411      	add	r1, r2
  4051d0:	0c36      	lsrs	r6, r6, #16
  4051d2:	eb06 4621 	add.w	r6, r6, r1, asr #16
  4051d6:	b289      	uxth	r1, r1
  4051d8:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
  4051dc:	45a4      	cmp	ip, r4
  4051de:	f843 2b04 	str.w	r2, [r3], #4
  4051e2:	ea4f 4126 	mov.w	r1, r6, asr #16
  4051e6:	d8ef      	bhi.n	4051c8 <__mdiff+0x78>
  4051e8:	43eb      	mvns	r3, r5
  4051ea:	4463      	add	r3, ip
  4051ec:	f023 0303 	bic.w	r3, r3, #3
  4051f0:	3304      	adds	r3, #4
  4051f2:	4443      	add	r3, r8
  4051f4:	3b04      	subs	r3, #4
  4051f6:	b922      	cbnz	r2, 405202 <__mdiff+0xb2>
  4051f8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  4051fc:	3f01      	subs	r7, #1
  4051fe:	2a00      	cmp	r2, #0
  405200:	d0fa      	beq.n	4051f8 <__mdiff+0xa8>
  405202:	6107      	str	r7, [r0, #16]
  405204:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405208:	462b      	mov	r3, r5
  40520a:	f04f 0901 	mov.w	r9, #1
  40520e:	4635      	mov	r5, r6
  405210:	461e      	mov	r6, r3
  405212:	e7ab      	b.n	40516c <__mdiff+0x1c>
  405214:	4620      	mov	r0, r4
  405216:	4639      	mov	r1, r7
  405218:	f7ff fd5a 	bl	404cd0 <_Balloc>
  40521c:	2301      	movs	r3, #1
  40521e:	6147      	str	r7, [r0, #20]
  405220:	6103      	str	r3, [r0, #16]
  405222:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405226:	bf00      	nop

00405228 <__d2b>:
  405228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  40522c:	2101      	movs	r1, #1
  40522e:	b083      	sub	sp, #12
  405230:	461d      	mov	r5, r3
  405232:	f3c3 560a 	ubfx	r6, r3, #20, #11
  405236:	4614      	mov	r4, r2
  405238:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  40523a:	f7ff fd49 	bl	404cd0 <_Balloc>
  40523e:	f3c5 0313 	ubfx	r3, r5, #0, #20
  405242:	4680      	mov	r8, r0
  405244:	b10e      	cbz	r6, 40524a <__d2b+0x22>
  405246:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40524a:	9301      	str	r3, [sp, #4]
  40524c:	b324      	cbz	r4, 405298 <__d2b+0x70>
  40524e:	a802      	add	r0, sp, #8
  405250:	f840 4d08 	str.w	r4, [r0, #-8]!
  405254:	4668      	mov	r0, sp
  405256:	f7ff fdd5 	bl	404e04 <__lo0bits>
  40525a:	2800      	cmp	r0, #0
  40525c:	d135      	bne.n	4052ca <__d2b+0xa2>
  40525e:	e89d 000c 	ldmia.w	sp, {r2, r3}
  405262:	f8c8 2014 	str.w	r2, [r8, #20]
  405266:	2b00      	cmp	r3, #0
  405268:	bf0c      	ite	eq
  40526a:	2401      	moveq	r4, #1
  40526c:	2402      	movne	r4, #2
  40526e:	f8c8 3018 	str.w	r3, [r8, #24]
  405272:	f8c8 4010 	str.w	r4, [r8, #16]
  405276:	b9de      	cbnz	r6, 4052b0 <__d2b+0x88>
  405278:	eb08 0384 	add.w	r3, r8, r4, lsl #2
  40527c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  405280:	6038      	str	r0, [r7, #0]
  405282:	6918      	ldr	r0, [r3, #16]
  405284:	f7ff fd9e 	bl	404dc4 <__hi0bits>
  405288:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40528a:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
  40528e:	6018      	str	r0, [r3, #0]
  405290:	4640      	mov	r0, r8
  405292:	b003      	add	sp, #12
  405294:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  405298:	a801      	add	r0, sp, #4
  40529a:	f7ff fdb3 	bl	404e04 <__lo0bits>
  40529e:	9b01      	ldr	r3, [sp, #4]
  4052a0:	2401      	movs	r4, #1
  4052a2:	3020      	adds	r0, #32
  4052a4:	f8c8 3014 	str.w	r3, [r8, #20]
  4052a8:	f8c8 4010 	str.w	r4, [r8, #16]
  4052ac:	2e00      	cmp	r6, #0
  4052ae:	d0e3      	beq.n	405278 <__d2b+0x50>
  4052b0:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
  4052b4:	eb09 0300 	add.w	r3, r9, r0
  4052b8:	603b      	str	r3, [r7, #0]
  4052ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4052bc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4052c0:	6018      	str	r0, [r3, #0]
  4052c2:	4640      	mov	r0, r8
  4052c4:	b003      	add	sp, #12
  4052c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4052ca:	9b01      	ldr	r3, [sp, #4]
  4052cc:	f1c0 0120 	rsb	r1, r0, #32
  4052d0:	fa03 f101 	lsl.w	r1, r3, r1
  4052d4:	40c3      	lsrs	r3, r0
  4052d6:	9a00      	ldr	r2, [sp, #0]
  4052d8:	9301      	str	r3, [sp, #4]
  4052da:	430a      	orrs	r2, r1
  4052dc:	f8c8 2014 	str.w	r2, [r8, #20]
  4052e0:	e7c1      	b.n	405266 <__d2b+0x3e>
  4052e2:	bf00      	nop

004052e4 <_realloc_r>:
  4052e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4052e8:	460c      	mov	r4, r1
  4052ea:	b083      	sub	sp, #12
  4052ec:	4690      	mov	r8, r2
  4052ee:	4681      	mov	r9, r0
  4052f0:	2900      	cmp	r1, #0
  4052f2:	f000 80ba 	beq.w	40546a <_realloc_r+0x186>
  4052f6:	f7ff fce7 	bl	404cc8 <__malloc_lock>
  4052fa:	f108 060b 	add.w	r6, r8, #11
  4052fe:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405302:	2e16      	cmp	r6, #22
  405304:	f023 0503 	bic.w	r5, r3, #3
  405308:	f1a4 0708 	sub.w	r7, r4, #8
  40530c:	d84b      	bhi.n	4053a6 <_realloc_r+0xc2>
  40530e:	2110      	movs	r1, #16
  405310:	460e      	mov	r6, r1
  405312:	45b0      	cmp	r8, r6
  405314:	d84c      	bhi.n	4053b0 <_realloc_r+0xcc>
  405316:	428d      	cmp	r5, r1
  405318:	da51      	bge.n	4053be <_realloc_r+0xda>
  40531a:	f8df b384 	ldr.w	fp, [pc, #900]	; 4056a0 <_realloc_r+0x3bc>
  40531e:	1978      	adds	r0, r7, r5
  405320:	f8db e008 	ldr.w	lr, [fp, #8]
  405324:	4586      	cmp	lr, r0
  405326:	f000 80a6 	beq.w	405476 <_realloc_r+0x192>
  40532a:	6842      	ldr	r2, [r0, #4]
  40532c:	f022 0c01 	bic.w	ip, r2, #1
  405330:	4484      	add	ip, r0
  405332:	f8dc c004 	ldr.w	ip, [ip, #4]
  405336:	f01c 0f01 	tst.w	ip, #1
  40533a:	d054      	beq.n	4053e6 <_realloc_r+0x102>
  40533c:	2200      	movs	r2, #0
  40533e:	4610      	mov	r0, r2
  405340:	07db      	lsls	r3, r3, #31
  405342:	d46f      	bmi.n	405424 <_realloc_r+0x140>
  405344:	f854 3c08 	ldr.w	r3, [r4, #-8]
  405348:	ebc3 0a07 	rsb	sl, r3, r7
  40534c:	f8da 3004 	ldr.w	r3, [sl, #4]
  405350:	f023 0303 	bic.w	r3, r3, #3
  405354:	442b      	add	r3, r5
  405356:	2800      	cmp	r0, #0
  405358:	d062      	beq.n	405420 <_realloc_r+0x13c>
  40535a:	4570      	cmp	r0, lr
  40535c:	f000 80e9 	beq.w	405532 <_realloc_r+0x24e>
  405360:	eb02 0e03 	add.w	lr, r2, r3
  405364:	458e      	cmp	lr, r1
  405366:	db5b      	blt.n	405420 <_realloc_r+0x13c>
  405368:	68c3      	ldr	r3, [r0, #12]
  40536a:	6882      	ldr	r2, [r0, #8]
  40536c:	46d0      	mov	r8, sl
  40536e:	60d3      	str	r3, [r2, #12]
  405370:	609a      	str	r2, [r3, #8]
  405372:	f858 1f08 	ldr.w	r1, [r8, #8]!
  405376:	f8da 300c 	ldr.w	r3, [sl, #12]
  40537a:	1f2a      	subs	r2, r5, #4
  40537c:	2a24      	cmp	r2, #36	; 0x24
  40537e:	60cb      	str	r3, [r1, #12]
  405380:	6099      	str	r1, [r3, #8]
  405382:	f200 8123 	bhi.w	4055cc <_realloc_r+0x2e8>
  405386:	2a13      	cmp	r2, #19
  405388:	f240 80b0 	bls.w	4054ec <_realloc_r+0x208>
  40538c:	6823      	ldr	r3, [r4, #0]
  40538e:	2a1b      	cmp	r2, #27
  405390:	f8ca 3008 	str.w	r3, [sl, #8]
  405394:	6863      	ldr	r3, [r4, #4]
  405396:	f8ca 300c 	str.w	r3, [sl, #12]
  40539a:	f200 812b 	bhi.w	4055f4 <_realloc_r+0x310>
  40539e:	3408      	adds	r4, #8
  4053a0:	f10a 0310 	add.w	r3, sl, #16
  4053a4:	e0a3      	b.n	4054ee <_realloc_r+0x20a>
  4053a6:	f026 0607 	bic.w	r6, r6, #7
  4053aa:	2e00      	cmp	r6, #0
  4053ac:	4631      	mov	r1, r6
  4053ae:	dab0      	bge.n	405312 <_realloc_r+0x2e>
  4053b0:	230c      	movs	r3, #12
  4053b2:	2000      	movs	r0, #0
  4053b4:	f8c9 3000 	str.w	r3, [r9]
  4053b8:	b003      	add	sp, #12
  4053ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053be:	46a0      	mov	r8, r4
  4053c0:	1baa      	subs	r2, r5, r6
  4053c2:	2a0f      	cmp	r2, #15
  4053c4:	f003 0301 	and.w	r3, r3, #1
  4053c8:	d81a      	bhi.n	405400 <_realloc_r+0x11c>
  4053ca:	432b      	orrs	r3, r5
  4053cc:	607b      	str	r3, [r7, #4]
  4053ce:	443d      	add	r5, r7
  4053d0:	686b      	ldr	r3, [r5, #4]
  4053d2:	f043 0301 	orr.w	r3, r3, #1
  4053d6:	606b      	str	r3, [r5, #4]
  4053d8:	4648      	mov	r0, r9
  4053da:	f7ff fc77 	bl	404ccc <__malloc_unlock>
  4053de:	4640      	mov	r0, r8
  4053e0:	b003      	add	sp, #12
  4053e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053e6:	f022 0203 	bic.w	r2, r2, #3
  4053ea:	eb02 0c05 	add.w	ip, r2, r5
  4053ee:	458c      	cmp	ip, r1
  4053f0:	dba6      	blt.n	405340 <_realloc_r+0x5c>
  4053f2:	68c2      	ldr	r2, [r0, #12]
  4053f4:	6881      	ldr	r1, [r0, #8]
  4053f6:	46a0      	mov	r8, r4
  4053f8:	60ca      	str	r2, [r1, #12]
  4053fa:	4665      	mov	r5, ip
  4053fc:	6091      	str	r1, [r2, #8]
  4053fe:	e7df      	b.n	4053c0 <_realloc_r+0xdc>
  405400:	19b9      	adds	r1, r7, r6
  405402:	4333      	orrs	r3, r6
  405404:	f042 0001 	orr.w	r0, r2, #1
  405408:	607b      	str	r3, [r7, #4]
  40540a:	440a      	add	r2, r1
  40540c:	6048      	str	r0, [r1, #4]
  40540e:	6853      	ldr	r3, [r2, #4]
  405410:	3108      	adds	r1, #8
  405412:	f043 0301 	orr.w	r3, r3, #1
  405416:	6053      	str	r3, [r2, #4]
  405418:	4648      	mov	r0, r9
  40541a:	f7fe ffc3 	bl	4043a4 <_free_r>
  40541e:	e7db      	b.n	4053d8 <_realloc_r+0xf4>
  405420:	428b      	cmp	r3, r1
  405422:	da33      	bge.n	40548c <_realloc_r+0x1a8>
  405424:	4641      	mov	r1, r8
  405426:	4648      	mov	r0, r9
  405428:	f7ff f88c 	bl	404544 <_malloc_r>
  40542c:	4680      	mov	r8, r0
  40542e:	2800      	cmp	r0, #0
  405430:	d0d2      	beq.n	4053d8 <_realloc_r+0xf4>
  405432:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405436:	f1a0 0108 	sub.w	r1, r0, #8
  40543a:	f023 0201 	bic.w	r2, r3, #1
  40543e:	443a      	add	r2, r7
  405440:	4291      	cmp	r1, r2
  405442:	f000 80bc 	beq.w	4055be <_realloc_r+0x2da>
  405446:	1f2a      	subs	r2, r5, #4
  405448:	2a24      	cmp	r2, #36	; 0x24
  40544a:	d86e      	bhi.n	40552a <_realloc_r+0x246>
  40544c:	2a13      	cmp	r2, #19
  40544e:	d842      	bhi.n	4054d6 <_realloc_r+0x1f2>
  405450:	4603      	mov	r3, r0
  405452:	4622      	mov	r2, r4
  405454:	6811      	ldr	r1, [r2, #0]
  405456:	6019      	str	r1, [r3, #0]
  405458:	6851      	ldr	r1, [r2, #4]
  40545a:	6059      	str	r1, [r3, #4]
  40545c:	6892      	ldr	r2, [r2, #8]
  40545e:	609a      	str	r2, [r3, #8]
  405460:	4621      	mov	r1, r4
  405462:	4648      	mov	r0, r9
  405464:	f7fe ff9e 	bl	4043a4 <_free_r>
  405468:	e7b6      	b.n	4053d8 <_realloc_r+0xf4>
  40546a:	4611      	mov	r1, r2
  40546c:	b003      	add	sp, #12
  40546e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405472:	f7ff b867 	b.w	404544 <_malloc_r>
  405476:	f8de 2004 	ldr.w	r2, [lr, #4]
  40547a:	f106 0c10 	add.w	ip, r6, #16
  40547e:	f022 0203 	bic.w	r2, r2, #3
  405482:	1950      	adds	r0, r2, r5
  405484:	4560      	cmp	r0, ip
  405486:	da3d      	bge.n	405504 <_realloc_r+0x220>
  405488:	4670      	mov	r0, lr
  40548a:	e759      	b.n	405340 <_realloc_r+0x5c>
  40548c:	46d0      	mov	r8, sl
  40548e:	f858 0f08 	ldr.w	r0, [r8, #8]!
  405492:	f8da 100c 	ldr.w	r1, [sl, #12]
  405496:	1f2a      	subs	r2, r5, #4
  405498:	2a24      	cmp	r2, #36	; 0x24
  40549a:	60c1      	str	r1, [r0, #12]
  40549c:	6088      	str	r0, [r1, #8]
  40549e:	f200 80a0 	bhi.w	4055e2 <_realloc_r+0x2fe>
  4054a2:	2a13      	cmp	r2, #19
  4054a4:	f240 809b 	bls.w	4055de <_realloc_r+0x2fa>
  4054a8:	6821      	ldr	r1, [r4, #0]
  4054aa:	2a1b      	cmp	r2, #27
  4054ac:	f8ca 1008 	str.w	r1, [sl, #8]
  4054b0:	6861      	ldr	r1, [r4, #4]
  4054b2:	f8ca 100c 	str.w	r1, [sl, #12]
  4054b6:	f200 80b2 	bhi.w	40561e <_realloc_r+0x33a>
  4054ba:	3408      	adds	r4, #8
  4054bc:	f10a 0210 	add.w	r2, sl, #16
  4054c0:	6821      	ldr	r1, [r4, #0]
  4054c2:	461d      	mov	r5, r3
  4054c4:	6011      	str	r1, [r2, #0]
  4054c6:	6861      	ldr	r1, [r4, #4]
  4054c8:	4657      	mov	r7, sl
  4054ca:	6051      	str	r1, [r2, #4]
  4054cc:	68a3      	ldr	r3, [r4, #8]
  4054ce:	6093      	str	r3, [r2, #8]
  4054d0:	f8da 3004 	ldr.w	r3, [sl, #4]
  4054d4:	e774      	b.n	4053c0 <_realloc_r+0xdc>
  4054d6:	6823      	ldr	r3, [r4, #0]
  4054d8:	2a1b      	cmp	r2, #27
  4054da:	6003      	str	r3, [r0, #0]
  4054dc:	6863      	ldr	r3, [r4, #4]
  4054de:	6043      	str	r3, [r0, #4]
  4054e0:	d862      	bhi.n	4055a8 <_realloc_r+0x2c4>
  4054e2:	f100 0308 	add.w	r3, r0, #8
  4054e6:	f104 0208 	add.w	r2, r4, #8
  4054ea:	e7b3      	b.n	405454 <_realloc_r+0x170>
  4054ec:	4643      	mov	r3, r8
  4054ee:	6822      	ldr	r2, [r4, #0]
  4054f0:	4675      	mov	r5, lr
  4054f2:	601a      	str	r2, [r3, #0]
  4054f4:	6862      	ldr	r2, [r4, #4]
  4054f6:	4657      	mov	r7, sl
  4054f8:	605a      	str	r2, [r3, #4]
  4054fa:	68a2      	ldr	r2, [r4, #8]
  4054fc:	609a      	str	r2, [r3, #8]
  4054fe:	f8da 3004 	ldr.w	r3, [sl, #4]
  405502:	e75d      	b.n	4053c0 <_realloc_r+0xdc>
  405504:	1b83      	subs	r3, r0, r6
  405506:	4437      	add	r7, r6
  405508:	f043 0301 	orr.w	r3, r3, #1
  40550c:	f8cb 7008 	str.w	r7, [fp, #8]
  405510:	607b      	str	r3, [r7, #4]
  405512:	f854 3c04 	ldr.w	r3, [r4, #-4]
  405516:	4648      	mov	r0, r9
  405518:	f003 0301 	and.w	r3, r3, #1
  40551c:	431e      	orrs	r6, r3
  40551e:	f844 6c04 	str.w	r6, [r4, #-4]
  405522:	f7ff fbd3 	bl	404ccc <__malloc_unlock>
  405526:	4620      	mov	r0, r4
  405528:	e75a      	b.n	4053e0 <_realloc_r+0xfc>
  40552a:	4621      	mov	r1, r4
  40552c:	f7ff fb66 	bl	404bfc <memmove>
  405530:	e796      	b.n	405460 <_realloc_r+0x17c>
  405532:	eb02 0c03 	add.w	ip, r2, r3
  405536:	f106 0210 	add.w	r2, r6, #16
  40553a:	4594      	cmp	ip, r2
  40553c:	f6ff af70 	blt.w	405420 <_realloc_r+0x13c>
  405540:	4657      	mov	r7, sl
  405542:	f857 1f08 	ldr.w	r1, [r7, #8]!
  405546:	f8da 300c 	ldr.w	r3, [sl, #12]
  40554a:	1f2a      	subs	r2, r5, #4
  40554c:	2a24      	cmp	r2, #36	; 0x24
  40554e:	60cb      	str	r3, [r1, #12]
  405550:	6099      	str	r1, [r3, #8]
  405552:	f200 8086 	bhi.w	405662 <_realloc_r+0x37e>
  405556:	2a13      	cmp	r2, #19
  405558:	d977      	bls.n	40564a <_realloc_r+0x366>
  40555a:	6823      	ldr	r3, [r4, #0]
  40555c:	2a1b      	cmp	r2, #27
  40555e:	f8ca 3008 	str.w	r3, [sl, #8]
  405562:	6863      	ldr	r3, [r4, #4]
  405564:	f8ca 300c 	str.w	r3, [sl, #12]
  405568:	f200 8084 	bhi.w	405674 <_realloc_r+0x390>
  40556c:	3408      	adds	r4, #8
  40556e:	f10a 0310 	add.w	r3, sl, #16
  405572:	6822      	ldr	r2, [r4, #0]
  405574:	601a      	str	r2, [r3, #0]
  405576:	6862      	ldr	r2, [r4, #4]
  405578:	605a      	str	r2, [r3, #4]
  40557a:	68a2      	ldr	r2, [r4, #8]
  40557c:	609a      	str	r2, [r3, #8]
  40557e:	ebc6 020c 	rsb	r2, r6, ip
  405582:	eb0a 0306 	add.w	r3, sl, r6
  405586:	f042 0201 	orr.w	r2, r2, #1
  40558a:	f8cb 3008 	str.w	r3, [fp, #8]
  40558e:	605a      	str	r2, [r3, #4]
  405590:	f8da 3004 	ldr.w	r3, [sl, #4]
  405594:	4648      	mov	r0, r9
  405596:	f003 0301 	and.w	r3, r3, #1
  40559a:	431e      	orrs	r6, r3
  40559c:	f8ca 6004 	str.w	r6, [sl, #4]
  4055a0:	f7ff fb94 	bl	404ccc <__malloc_unlock>
  4055a4:	4638      	mov	r0, r7
  4055a6:	e71b      	b.n	4053e0 <_realloc_r+0xfc>
  4055a8:	68a3      	ldr	r3, [r4, #8]
  4055aa:	2a24      	cmp	r2, #36	; 0x24
  4055ac:	6083      	str	r3, [r0, #8]
  4055ae:	68e3      	ldr	r3, [r4, #12]
  4055b0:	60c3      	str	r3, [r0, #12]
  4055b2:	d02b      	beq.n	40560c <_realloc_r+0x328>
  4055b4:	f100 0310 	add.w	r3, r0, #16
  4055b8:	f104 0210 	add.w	r2, r4, #16
  4055bc:	e74a      	b.n	405454 <_realloc_r+0x170>
  4055be:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4055c2:	46a0      	mov	r8, r4
  4055c4:	f022 0203 	bic.w	r2, r2, #3
  4055c8:	4415      	add	r5, r2
  4055ca:	e6f9      	b.n	4053c0 <_realloc_r+0xdc>
  4055cc:	4621      	mov	r1, r4
  4055ce:	4640      	mov	r0, r8
  4055d0:	4675      	mov	r5, lr
  4055d2:	4657      	mov	r7, sl
  4055d4:	f7ff fb12 	bl	404bfc <memmove>
  4055d8:	f8da 3004 	ldr.w	r3, [sl, #4]
  4055dc:	e6f0      	b.n	4053c0 <_realloc_r+0xdc>
  4055de:	4642      	mov	r2, r8
  4055e0:	e76e      	b.n	4054c0 <_realloc_r+0x1dc>
  4055e2:	4621      	mov	r1, r4
  4055e4:	4640      	mov	r0, r8
  4055e6:	461d      	mov	r5, r3
  4055e8:	4657      	mov	r7, sl
  4055ea:	f7ff fb07 	bl	404bfc <memmove>
  4055ee:	f8da 3004 	ldr.w	r3, [sl, #4]
  4055f2:	e6e5      	b.n	4053c0 <_realloc_r+0xdc>
  4055f4:	68a3      	ldr	r3, [r4, #8]
  4055f6:	2a24      	cmp	r2, #36	; 0x24
  4055f8:	f8ca 3010 	str.w	r3, [sl, #16]
  4055fc:	68e3      	ldr	r3, [r4, #12]
  4055fe:	f8ca 3014 	str.w	r3, [sl, #20]
  405602:	d018      	beq.n	405636 <_realloc_r+0x352>
  405604:	3410      	adds	r4, #16
  405606:	f10a 0318 	add.w	r3, sl, #24
  40560a:	e770      	b.n	4054ee <_realloc_r+0x20a>
  40560c:	6922      	ldr	r2, [r4, #16]
  40560e:	f100 0318 	add.w	r3, r0, #24
  405612:	6102      	str	r2, [r0, #16]
  405614:	6961      	ldr	r1, [r4, #20]
  405616:	f104 0218 	add.w	r2, r4, #24
  40561a:	6141      	str	r1, [r0, #20]
  40561c:	e71a      	b.n	405454 <_realloc_r+0x170>
  40561e:	68a1      	ldr	r1, [r4, #8]
  405620:	2a24      	cmp	r2, #36	; 0x24
  405622:	f8ca 1010 	str.w	r1, [sl, #16]
  405626:	68e1      	ldr	r1, [r4, #12]
  405628:	f8ca 1014 	str.w	r1, [sl, #20]
  40562c:	d00f      	beq.n	40564e <_realloc_r+0x36a>
  40562e:	3410      	adds	r4, #16
  405630:	f10a 0218 	add.w	r2, sl, #24
  405634:	e744      	b.n	4054c0 <_realloc_r+0x1dc>
  405636:	6922      	ldr	r2, [r4, #16]
  405638:	f10a 0320 	add.w	r3, sl, #32
  40563c:	f8ca 2018 	str.w	r2, [sl, #24]
  405640:	6962      	ldr	r2, [r4, #20]
  405642:	3418      	adds	r4, #24
  405644:	f8ca 201c 	str.w	r2, [sl, #28]
  405648:	e751      	b.n	4054ee <_realloc_r+0x20a>
  40564a:	463b      	mov	r3, r7
  40564c:	e791      	b.n	405572 <_realloc_r+0x28e>
  40564e:	6921      	ldr	r1, [r4, #16]
  405650:	f10a 0220 	add.w	r2, sl, #32
  405654:	f8ca 1018 	str.w	r1, [sl, #24]
  405658:	6961      	ldr	r1, [r4, #20]
  40565a:	3418      	adds	r4, #24
  40565c:	f8ca 101c 	str.w	r1, [sl, #28]
  405660:	e72e      	b.n	4054c0 <_realloc_r+0x1dc>
  405662:	4621      	mov	r1, r4
  405664:	4638      	mov	r0, r7
  405666:	f8cd c004 	str.w	ip, [sp, #4]
  40566a:	f7ff fac7 	bl	404bfc <memmove>
  40566e:	f8dd c004 	ldr.w	ip, [sp, #4]
  405672:	e784      	b.n	40557e <_realloc_r+0x29a>
  405674:	68a3      	ldr	r3, [r4, #8]
  405676:	2a24      	cmp	r2, #36	; 0x24
  405678:	f8ca 3010 	str.w	r3, [sl, #16]
  40567c:	68e3      	ldr	r3, [r4, #12]
  40567e:	f8ca 3014 	str.w	r3, [sl, #20]
  405682:	d003      	beq.n	40568c <_realloc_r+0x3a8>
  405684:	3410      	adds	r4, #16
  405686:	f10a 0318 	add.w	r3, sl, #24
  40568a:	e772      	b.n	405572 <_realloc_r+0x28e>
  40568c:	6922      	ldr	r2, [r4, #16]
  40568e:	f10a 0320 	add.w	r3, sl, #32
  405692:	f8ca 2018 	str.w	r2, [sl, #24]
  405696:	6962      	ldr	r2, [r4, #20]
  405698:	3418      	adds	r4, #24
  40569a:	f8ca 201c 	str.w	r2, [sl, #28]
  40569e:	e768      	b.n	405572 <_realloc_r+0x28e>
  4056a0:	2000054c 	.word	0x2000054c

004056a4 <__fpclassifyd>:
  4056a4:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  4056a8:	b410      	push	{r4}
  4056aa:	d008      	beq.n	4056be <__fpclassifyd+0x1a>
  4056ac:	4a0f      	ldr	r2, [pc, #60]	; (4056ec <__fpclassifyd+0x48>)
  4056ae:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
  4056b2:	4294      	cmp	r4, r2
  4056b4:	d80a      	bhi.n	4056cc <__fpclassifyd+0x28>
  4056b6:	2004      	movs	r0, #4
  4056b8:	f85d 4b04 	ldr.w	r4, [sp], #4
  4056bc:	4770      	bx	lr
  4056be:	2800      	cmp	r0, #0
  4056c0:	bf0c      	ite	eq
  4056c2:	2002      	moveq	r0, #2
  4056c4:	2003      	movne	r0, #3
  4056c6:	f85d 4b04 	ldr.w	r4, [sp], #4
  4056ca:	4770      	bx	lr
  4056cc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
  4056d0:	d201      	bcs.n	4056d6 <__fpclassifyd+0x32>
  4056d2:	2003      	movs	r0, #3
  4056d4:	e7f7      	b.n	4056c6 <__fpclassifyd+0x22>
  4056d6:	4a06      	ldr	r2, [pc, #24]	; (4056f0 <__fpclassifyd+0x4c>)
  4056d8:	4293      	cmp	r3, r2
  4056da:	d001      	beq.n	4056e0 <__fpclassifyd+0x3c>
  4056dc:	2000      	movs	r0, #0
  4056de:	e7f2      	b.n	4056c6 <__fpclassifyd+0x22>
  4056e0:	f1d0 0001 	rsbs	r0, r0, #1
  4056e4:	bf38      	it	cc
  4056e6:	2000      	movcc	r0, #0
  4056e8:	e7ed      	b.n	4056c6 <__fpclassifyd+0x22>
  4056ea:	bf00      	nop
  4056ec:	7fdfffff 	.word	0x7fdfffff
  4056f0:	7ff00000 	.word	0x7ff00000

004056f4 <_sbrk_r>:
  4056f4:	b538      	push	{r3, r4, r5, lr}
  4056f6:	4c07      	ldr	r4, [pc, #28]	; (405714 <_sbrk_r+0x20>)
  4056f8:	2300      	movs	r3, #0
  4056fa:	4605      	mov	r5, r0
  4056fc:	4608      	mov	r0, r1
  4056fe:	6023      	str	r3, [r4, #0]
  405700:	f7fb fd8a 	bl	401218 <_sbrk>
  405704:	1c43      	adds	r3, r0, #1
  405706:	d000      	beq.n	40570a <_sbrk_r+0x16>
  405708:	bd38      	pop	{r3, r4, r5, pc}
  40570a:	6823      	ldr	r3, [r4, #0]
  40570c:	2b00      	cmp	r3, #0
  40570e:	d0fb      	beq.n	405708 <_sbrk_r+0x14>
  405710:	602b      	str	r3, [r5, #0]
  405712:	bd38      	pop	{r3, r4, r5, pc}
  405714:	20000c10 	.word	0x20000c10

00405718 <strlen>:
  405718:	f020 0103 	bic.w	r1, r0, #3
  40571c:	f010 0003 	ands.w	r0, r0, #3
  405720:	f1c0 0000 	rsb	r0, r0, #0
  405724:	f851 3b04 	ldr.w	r3, [r1], #4
  405728:	f100 0c04 	add.w	ip, r0, #4
  40572c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
  405730:	f06f 0200 	mvn.w	r2, #0
  405734:	bf1c      	itt	ne
  405736:	fa22 f20c 	lsrne.w	r2, r2, ip
  40573a:	4313      	orrne	r3, r2
  40573c:	f04f 0c01 	mov.w	ip, #1
  405740:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
  405744:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
  405748:	eba3 020c 	sub.w	r2, r3, ip
  40574c:	ea22 0203 	bic.w	r2, r2, r3
  405750:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
  405754:	bf04      	itt	eq
  405756:	f851 3b04 	ldreq.w	r3, [r1], #4
  40575a:	3004      	addeq	r0, #4
  40575c:	d0f4      	beq.n	405748 <strlen+0x30>
  40575e:	f013 0fff 	tst.w	r3, #255	; 0xff
  405762:	bf1f      	itttt	ne
  405764:	3001      	addne	r0, #1
  405766:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
  40576a:	3001      	addne	r0, #1
  40576c:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
  405770:	bf18      	it	ne
  405772:	3001      	addne	r0, #1
  405774:	4770      	bx	lr
  405776:	bf00      	nop

00405778 <__ssprint_r>:
  405778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40577c:	6894      	ldr	r4, [r2, #8]
  40577e:	b083      	sub	sp, #12
  405780:	4692      	mov	sl, r2
  405782:	4680      	mov	r8, r0
  405784:	460d      	mov	r5, r1
  405786:	6816      	ldr	r6, [r2, #0]
  405788:	2c00      	cmp	r4, #0
  40578a:	d06f      	beq.n	40586c <__ssprint_r+0xf4>
  40578c:	f04f 0b00 	mov.w	fp, #0
  405790:	6808      	ldr	r0, [r1, #0]
  405792:	688b      	ldr	r3, [r1, #8]
  405794:	465c      	mov	r4, fp
  405796:	2c00      	cmp	r4, #0
  405798:	d043      	beq.n	405822 <__ssprint_r+0xaa>
  40579a:	429c      	cmp	r4, r3
  40579c:	461f      	mov	r7, r3
  40579e:	d345      	bcc.n	40582c <__ssprint_r+0xb4>
  4057a0:	89ab      	ldrh	r3, [r5, #12]
  4057a2:	f413 6f90 	tst.w	r3, #1152	; 0x480
  4057a6:	d044      	beq.n	405832 <__ssprint_r+0xba>
  4057a8:	696f      	ldr	r7, [r5, #20]
  4057aa:	6929      	ldr	r1, [r5, #16]
  4057ac:	eb07 0747 	add.w	r7, r7, r7, lsl #1
  4057b0:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
  4057b4:	ebc1 0900 	rsb	r9, r1, r0
  4057b8:	1c62      	adds	r2, r4, #1
  4057ba:	107f      	asrs	r7, r7, #1
  4057bc:	444a      	add	r2, r9
  4057be:	4297      	cmp	r7, r2
  4057c0:	bf34      	ite	cc
  4057c2:	4617      	movcc	r7, r2
  4057c4:	463a      	movcs	r2, r7
  4057c6:	055b      	lsls	r3, r3, #21
  4057c8:	d535      	bpl.n	405836 <__ssprint_r+0xbe>
  4057ca:	4611      	mov	r1, r2
  4057cc:	4640      	mov	r0, r8
  4057ce:	f7fe feb9 	bl	404544 <_malloc_r>
  4057d2:	2800      	cmp	r0, #0
  4057d4:	d039      	beq.n	40584a <__ssprint_r+0xd2>
  4057d6:	6929      	ldr	r1, [r5, #16]
  4057d8:	464a      	mov	r2, r9
  4057da:	9001      	str	r0, [sp, #4]
  4057dc:	f7ff f998 	bl	404b10 <memcpy>
  4057e0:	89aa      	ldrh	r2, [r5, #12]
  4057e2:	9b01      	ldr	r3, [sp, #4]
  4057e4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  4057e8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  4057ec:	81aa      	strh	r2, [r5, #12]
  4057ee:	ebc9 0207 	rsb	r2, r9, r7
  4057f2:	eb03 0009 	add.w	r0, r3, r9
  4057f6:	616f      	str	r7, [r5, #20]
  4057f8:	612b      	str	r3, [r5, #16]
  4057fa:	6028      	str	r0, [r5, #0]
  4057fc:	60aa      	str	r2, [r5, #8]
  4057fe:	4627      	mov	r7, r4
  405800:	46a1      	mov	r9, r4
  405802:	464a      	mov	r2, r9
  405804:	4659      	mov	r1, fp
  405806:	f7ff f9f9 	bl	404bfc <memmove>
  40580a:	f8da 2008 	ldr.w	r2, [sl, #8]
  40580e:	68ab      	ldr	r3, [r5, #8]
  405810:	6828      	ldr	r0, [r5, #0]
  405812:	1bdb      	subs	r3, r3, r7
  405814:	4448      	add	r0, r9
  405816:	1b14      	subs	r4, r2, r4
  405818:	60ab      	str	r3, [r5, #8]
  40581a:	6028      	str	r0, [r5, #0]
  40581c:	f8ca 4008 	str.w	r4, [sl, #8]
  405820:	b324      	cbz	r4, 40586c <__ssprint_r+0xf4>
  405822:	f8d6 b000 	ldr.w	fp, [r6]
  405826:	6874      	ldr	r4, [r6, #4]
  405828:	3608      	adds	r6, #8
  40582a:	e7b4      	b.n	405796 <__ssprint_r+0x1e>
  40582c:	4627      	mov	r7, r4
  40582e:	46a1      	mov	r9, r4
  405830:	e7e7      	b.n	405802 <__ssprint_r+0x8a>
  405832:	46b9      	mov	r9, r7
  405834:	e7e5      	b.n	405802 <__ssprint_r+0x8a>
  405836:	4640      	mov	r0, r8
  405838:	f7ff fd54 	bl	4052e4 <_realloc_r>
  40583c:	4603      	mov	r3, r0
  40583e:	2800      	cmp	r0, #0
  405840:	d1d5      	bne.n	4057ee <__ssprint_r+0x76>
  405842:	4640      	mov	r0, r8
  405844:	6929      	ldr	r1, [r5, #16]
  405846:	f7fe fdad 	bl	4043a4 <_free_r>
  40584a:	89aa      	ldrh	r2, [r5, #12]
  40584c:	230c      	movs	r3, #12
  40584e:	f8c8 3000 	str.w	r3, [r8]
  405852:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  405856:	2300      	movs	r3, #0
  405858:	f04f 30ff 	mov.w	r0, #4294967295
  40585c:	81aa      	strh	r2, [r5, #12]
  40585e:	f8ca 3008 	str.w	r3, [sl, #8]
  405862:	f8ca 3004 	str.w	r3, [sl, #4]
  405866:	b003      	add	sp, #12
  405868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40586c:	4620      	mov	r0, r4
  40586e:	f8ca 4004 	str.w	r4, [sl, #4]
  405872:	b003      	add	sp, #12
  405874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405878 <__register_exitproc>:
  405878:	b5f0      	push	{r4, r5, r6, r7, lr}
  40587a:	4c27      	ldr	r4, [pc, #156]	; (405918 <__register_exitproc+0xa0>)
  40587c:	b085      	sub	sp, #20
  40587e:	6826      	ldr	r6, [r4, #0]
  405880:	4607      	mov	r7, r0
  405882:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
  405886:	2c00      	cmp	r4, #0
  405888:	d040      	beq.n	40590c <__register_exitproc+0x94>
  40588a:	6865      	ldr	r5, [r4, #4]
  40588c:	2d1f      	cmp	r5, #31
  40588e:	dd1e      	ble.n	4058ce <__register_exitproc+0x56>
  405890:	4822      	ldr	r0, [pc, #136]	; (40591c <__register_exitproc+0xa4>)
  405892:	b918      	cbnz	r0, 40589c <__register_exitproc+0x24>
  405894:	f04f 30ff 	mov.w	r0, #4294967295
  405898:	b005      	add	sp, #20
  40589a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40589c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  4058a0:	9103      	str	r1, [sp, #12]
  4058a2:	9202      	str	r2, [sp, #8]
  4058a4:	9301      	str	r3, [sp, #4]
  4058a6:	f3af 8000 	nop.w
  4058aa:	9903      	ldr	r1, [sp, #12]
  4058ac:	4604      	mov	r4, r0
  4058ae:	9a02      	ldr	r2, [sp, #8]
  4058b0:	9b01      	ldr	r3, [sp, #4]
  4058b2:	2800      	cmp	r0, #0
  4058b4:	d0ee      	beq.n	405894 <__register_exitproc+0x1c>
  4058b6:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
  4058ba:	2000      	movs	r0, #0
  4058bc:	6025      	str	r5, [r4, #0]
  4058be:	6060      	str	r0, [r4, #4]
  4058c0:	4605      	mov	r5, r0
  4058c2:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  4058c6:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
  4058ca:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
  4058ce:	b93f      	cbnz	r7, 4058e0 <__register_exitproc+0x68>
  4058d0:	1c6b      	adds	r3, r5, #1
  4058d2:	2000      	movs	r0, #0
  4058d4:	3502      	adds	r5, #2
  4058d6:	6063      	str	r3, [r4, #4]
  4058d8:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
  4058dc:	b005      	add	sp, #20
  4058de:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4058e0:	2601      	movs	r6, #1
  4058e2:	40ae      	lsls	r6, r5
  4058e4:	eb04 0085 	add.w	r0, r4, r5, lsl #2
  4058e8:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
  4058ec:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
  4058f0:	2f02      	cmp	r7, #2
  4058f2:	ea42 0206 	orr.w	r2, r2, r6
  4058f6:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
  4058fa:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
  4058fe:	d1e7      	bne.n	4058d0 <__register_exitproc+0x58>
  405900:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
  405904:	431e      	orrs	r6, r3
  405906:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
  40590a:	e7e1      	b.n	4058d0 <__register_exitproc+0x58>
  40590c:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
  405910:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
  405914:	e7b9      	b.n	40588a <__register_exitproc+0x12>
  405916:	bf00      	nop
  405918:	00406c70 	.word	0x00406c70
  40591c:	00000000 	.word	0x00000000

00405920 <_calloc_r>:
  405920:	b510      	push	{r4, lr}
  405922:	fb02 f101 	mul.w	r1, r2, r1
  405926:	f7fe fe0d 	bl	404544 <_malloc_r>
  40592a:	4604      	mov	r4, r0
  40592c:	b168      	cbz	r0, 40594a <_calloc_r+0x2a>
  40592e:	f850 2c04 	ldr.w	r2, [r0, #-4]
  405932:	f022 0203 	bic.w	r2, r2, #3
  405936:	3a04      	subs	r2, #4
  405938:	2a24      	cmp	r2, #36	; 0x24
  40593a:	d818      	bhi.n	40596e <_calloc_r+0x4e>
  40593c:	2a13      	cmp	r2, #19
  40593e:	d806      	bhi.n	40594e <_calloc_r+0x2e>
  405940:	4603      	mov	r3, r0
  405942:	2200      	movs	r2, #0
  405944:	601a      	str	r2, [r3, #0]
  405946:	605a      	str	r2, [r3, #4]
  405948:	609a      	str	r2, [r3, #8]
  40594a:	4620      	mov	r0, r4
  40594c:	bd10      	pop	{r4, pc}
  40594e:	2300      	movs	r3, #0
  405950:	2a1b      	cmp	r2, #27
  405952:	6003      	str	r3, [r0, #0]
  405954:	6043      	str	r3, [r0, #4]
  405956:	d90f      	bls.n	405978 <_calloc_r+0x58>
  405958:	2a24      	cmp	r2, #36	; 0x24
  40595a:	6083      	str	r3, [r0, #8]
  40595c:	60c3      	str	r3, [r0, #12]
  40595e:	bf05      	ittet	eq
  405960:	6103      	streq	r3, [r0, #16]
  405962:	6143      	streq	r3, [r0, #20]
  405964:	f100 0310 	addne.w	r3, r0, #16
  405968:	f100 0318 	addeq.w	r3, r0, #24
  40596c:	e7e9      	b.n	405942 <_calloc_r+0x22>
  40596e:	2100      	movs	r1, #0
  405970:	f7fc f9fe 	bl	401d70 <memset>
  405974:	4620      	mov	r0, r4
  405976:	bd10      	pop	{r4, pc}
  405978:	f100 0308 	add.w	r3, r0, #8
  40597c:	e7e1      	b.n	405942 <_calloc_r+0x22>
  40597e:	bf00      	nop

00405980 <__aeabi_dmul>:
  405980:	b570      	push	{r4, r5, r6, lr}
  405982:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405986:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40598a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40598e:	bf1d      	ittte	ne
  405990:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405994:	ea94 0f0c 	teqne	r4, ip
  405998:	ea95 0f0c 	teqne	r5, ip
  40599c:	f000 f8de 	bleq	405b5c <__aeabi_dmul+0x1dc>
  4059a0:	442c      	add	r4, r5
  4059a2:	ea81 0603 	eor.w	r6, r1, r3
  4059a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  4059aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  4059ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  4059b2:	bf18      	it	ne
  4059b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  4059b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4059bc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4059c0:	d038      	beq.n	405a34 <__aeabi_dmul+0xb4>
  4059c2:	fba0 ce02 	umull	ip, lr, r0, r2
  4059c6:	f04f 0500 	mov.w	r5, #0
  4059ca:	fbe1 e502 	umlal	lr, r5, r1, r2
  4059ce:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4059d2:	fbe0 e503 	umlal	lr, r5, r0, r3
  4059d6:	f04f 0600 	mov.w	r6, #0
  4059da:	fbe1 5603 	umlal	r5, r6, r1, r3
  4059de:	f09c 0f00 	teq	ip, #0
  4059e2:	bf18      	it	ne
  4059e4:	f04e 0e01 	orrne.w	lr, lr, #1
  4059e8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4059ec:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4059f0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4059f4:	d204      	bcs.n	405a00 <__aeabi_dmul+0x80>
  4059f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4059fa:	416d      	adcs	r5, r5
  4059fc:	eb46 0606 	adc.w	r6, r6, r6
  405a00:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405a04:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405a08:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405a0c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405a10:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405a14:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405a18:	bf88      	it	hi
  405a1a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405a1e:	d81e      	bhi.n	405a5e <__aeabi_dmul+0xde>
  405a20:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405a24:	bf08      	it	eq
  405a26:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405a2a:	f150 0000 	adcs.w	r0, r0, #0
  405a2e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405a32:	bd70      	pop	{r4, r5, r6, pc}
  405a34:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405a38:	ea46 0101 	orr.w	r1, r6, r1
  405a3c:	ea40 0002 	orr.w	r0, r0, r2
  405a40:	ea81 0103 	eor.w	r1, r1, r3
  405a44:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405a48:	bfc2      	ittt	gt
  405a4a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405a4e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405a52:	bd70      	popgt	{r4, r5, r6, pc}
  405a54:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405a58:	f04f 0e00 	mov.w	lr, #0
  405a5c:	3c01      	subs	r4, #1
  405a5e:	f300 80ab 	bgt.w	405bb8 <__aeabi_dmul+0x238>
  405a62:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405a66:	bfde      	ittt	le
  405a68:	2000      	movle	r0, #0
  405a6a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405a6e:	bd70      	pople	{r4, r5, r6, pc}
  405a70:	f1c4 0400 	rsb	r4, r4, #0
  405a74:	3c20      	subs	r4, #32
  405a76:	da35      	bge.n	405ae4 <__aeabi_dmul+0x164>
  405a78:	340c      	adds	r4, #12
  405a7a:	dc1b      	bgt.n	405ab4 <__aeabi_dmul+0x134>
  405a7c:	f104 0414 	add.w	r4, r4, #20
  405a80:	f1c4 0520 	rsb	r5, r4, #32
  405a84:	fa00 f305 	lsl.w	r3, r0, r5
  405a88:	fa20 f004 	lsr.w	r0, r0, r4
  405a8c:	fa01 f205 	lsl.w	r2, r1, r5
  405a90:	ea40 0002 	orr.w	r0, r0, r2
  405a94:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405a98:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405a9c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405aa0:	fa21 f604 	lsr.w	r6, r1, r4
  405aa4:	eb42 0106 	adc.w	r1, r2, r6
  405aa8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405aac:	bf08      	it	eq
  405aae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ab2:	bd70      	pop	{r4, r5, r6, pc}
  405ab4:	f1c4 040c 	rsb	r4, r4, #12
  405ab8:	f1c4 0520 	rsb	r5, r4, #32
  405abc:	fa00 f304 	lsl.w	r3, r0, r4
  405ac0:	fa20 f005 	lsr.w	r0, r0, r5
  405ac4:	fa01 f204 	lsl.w	r2, r1, r4
  405ac8:	ea40 0002 	orr.w	r0, r0, r2
  405acc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405ad0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405ad4:	f141 0100 	adc.w	r1, r1, #0
  405ad8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405adc:	bf08      	it	eq
  405ade:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405ae2:	bd70      	pop	{r4, r5, r6, pc}
  405ae4:	f1c4 0520 	rsb	r5, r4, #32
  405ae8:	fa00 f205 	lsl.w	r2, r0, r5
  405aec:	ea4e 0e02 	orr.w	lr, lr, r2
  405af0:	fa20 f304 	lsr.w	r3, r0, r4
  405af4:	fa01 f205 	lsl.w	r2, r1, r5
  405af8:	ea43 0302 	orr.w	r3, r3, r2
  405afc:	fa21 f004 	lsr.w	r0, r1, r4
  405b00:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b04:	fa21 f204 	lsr.w	r2, r1, r4
  405b08:	ea20 0002 	bic.w	r0, r0, r2
  405b0c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405b10:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b14:	bf08      	it	eq
  405b16:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b1a:	bd70      	pop	{r4, r5, r6, pc}
  405b1c:	f094 0f00 	teq	r4, #0
  405b20:	d10f      	bne.n	405b42 <__aeabi_dmul+0x1c2>
  405b22:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405b26:	0040      	lsls	r0, r0, #1
  405b28:	eb41 0101 	adc.w	r1, r1, r1
  405b2c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405b30:	bf08      	it	eq
  405b32:	3c01      	subeq	r4, #1
  405b34:	d0f7      	beq.n	405b26 <__aeabi_dmul+0x1a6>
  405b36:	ea41 0106 	orr.w	r1, r1, r6
  405b3a:	f095 0f00 	teq	r5, #0
  405b3e:	bf18      	it	ne
  405b40:	4770      	bxne	lr
  405b42:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405b46:	0052      	lsls	r2, r2, #1
  405b48:	eb43 0303 	adc.w	r3, r3, r3
  405b4c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405b50:	bf08      	it	eq
  405b52:	3d01      	subeq	r5, #1
  405b54:	d0f7      	beq.n	405b46 <__aeabi_dmul+0x1c6>
  405b56:	ea43 0306 	orr.w	r3, r3, r6
  405b5a:	4770      	bx	lr
  405b5c:	ea94 0f0c 	teq	r4, ip
  405b60:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405b64:	bf18      	it	ne
  405b66:	ea95 0f0c 	teqne	r5, ip
  405b6a:	d00c      	beq.n	405b86 <__aeabi_dmul+0x206>
  405b6c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405b70:	bf18      	it	ne
  405b72:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405b76:	d1d1      	bne.n	405b1c <__aeabi_dmul+0x19c>
  405b78:	ea81 0103 	eor.w	r1, r1, r3
  405b7c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b80:	f04f 0000 	mov.w	r0, #0
  405b84:	bd70      	pop	{r4, r5, r6, pc}
  405b86:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405b8a:	bf06      	itte	eq
  405b8c:	4610      	moveq	r0, r2
  405b8e:	4619      	moveq	r1, r3
  405b90:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405b94:	d019      	beq.n	405bca <__aeabi_dmul+0x24a>
  405b96:	ea94 0f0c 	teq	r4, ip
  405b9a:	d102      	bne.n	405ba2 <__aeabi_dmul+0x222>
  405b9c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405ba0:	d113      	bne.n	405bca <__aeabi_dmul+0x24a>
  405ba2:	ea95 0f0c 	teq	r5, ip
  405ba6:	d105      	bne.n	405bb4 <__aeabi_dmul+0x234>
  405ba8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405bac:	bf1c      	itt	ne
  405bae:	4610      	movne	r0, r2
  405bb0:	4619      	movne	r1, r3
  405bb2:	d10a      	bne.n	405bca <__aeabi_dmul+0x24a>
  405bb4:	ea81 0103 	eor.w	r1, r1, r3
  405bb8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bbc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405bc0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405bc4:	f04f 0000 	mov.w	r0, #0
  405bc8:	bd70      	pop	{r4, r5, r6, pc}
  405bca:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405bce:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405bd2:	bd70      	pop	{r4, r5, r6, pc}

00405bd4 <__aeabi_ddiv>:
  405bd4:	b570      	push	{r4, r5, r6, lr}
  405bd6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405bda:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405bde:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405be2:	bf1d      	ittte	ne
  405be4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405be8:	ea94 0f0c 	teqne	r4, ip
  405bec:	ea95 0f0c 	teqne	r5, ip
  405bf0:	f000 f8a7 	bleq	405d42 <__aeabi_ddiv+0x16e>
  405bf4:	eba4 0405 	sub.w	r4, r4, r5
  405bf8:	ea81 0e03 	eor.w	lr, r1, r3
  405bfc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405c00:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c04:	f000 8088 	beq.w	405d18 <__aeabi_ddiv+0x144>
  405c08:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c0c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405c10:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405c14:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405c18:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405c1c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405c20:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405c24:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405c28:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405c2c:	429d      	cmp	r5, r3
  405c2e:	bf08      	it	eq
  405c30:	4296      	cmpeq	r6, r2
  405c32:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405c36:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405c3a:	d202      	bcs.n	405c42 <__aeabi_ddiv+0x6e>
  405c3c:	085b      	lsrs	r3, r3, #1
  405c3e:	ea4f 0232 	mov.w	r2, r2, rrx
  405c42:	1ab6      	subs	r6, r6, r2
  405c44:	eb65 0503 	sbc.w	r5, r5, r3
  405c48:	085b      	lsrs	r3, r3, #1
  405c4a:	ea4f 0232 	mov.w	r2, r2, rrx
  405c4e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405c52:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405c56:	ebb6 0e02 	subs.w	lr, r6, r2
  405c5a:	eb75 0e03 	sbcs.w	lr, r5, r3
  405c5e:	bf22      	ittt	cs
  405c60:	1ab6      	subcs	r6, r6, r2
  405c62:	4675      	movcs	r5, lr
  405c64:	ea40 000c 	orrcs.w	r0, r0, ip
  405c68:	085b      	lsrs	r3, r3, #1
  405c6a:	ea4f 0232 	mov.w	r2, r2, rrx
  405c6e:	ebb6 0e02 	subs.w	lr, r6, r2
  405c72:	eb75 0e03 	sbcs.w	lr, r5, r3
  405c76:	bf22      	ittt	cs
  405c78:	1ab6      	subcs	r6, r6, r2
  405c7a:	4675      	movcs	r5, lr
  405c7c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405c80:	085b      	lsrs	r3, r3, #1
  405c82:	ea4f 0232 	mov.w	r2, r2, rrx
  405c86:	ebb6 0e02 	subs.w	lr, r6, r2
  405c8a:	eb75 0e03 	sbcs.w	lr, r5, r3
  405c8e:	bf22      	ittt	cs
  405c90:	1ab6      	subcs	r6, r6, r2
  405c92:	4675      	movcs	r5, lr
  405c94:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405c98:	085b      	lsrs	r3, r3, #1
  405c9a:	ea4f 0232 	mov.w	r2, r2, rrx
  405c9e:	ebb6 0e02 	subs.w	lr, r6, r2
  405ca2:	eb75 0e03 	sbcs.w	lr, r5, r3
  405ca6:	bf22      	ittt	cs
  405ca8:	1ab6      	subcs	r6, r6, r2
  405caa:	4675      	movcs	r5, lr
  405cac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405cb0:	ea55 0e06 	orrs.w	lr, r5, r6
  405cb4:	d018      	beq.n	405ce8 <__aeabi_ddiv+0x114>
  405cb6:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405cba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405cbe:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405cc2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405cc6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405cca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405cce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405cd2:	d1c0      	bne.n	405c56 <__aeabi_ddiv+0x82>
  405cd4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405cd8:	d10b      	bne.n	405cf2 <__aeabi_ddiv+0x11e>
  405cda:	ea41 0100 	orr.w	r1, r1, r0
  405cde:	f04f 0000 	mov.w	r0, #0
  405ce2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405ce6:	e7b6      	b.n	405c56 <__aeabi_ddiv+0x82>
  405ce8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405cec:	bf04      	itt	eq
  405cee:	4301      	orreq	r1, r0
  405cf0:	2000      	moveq	r0, #0
  405cf2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405cf6:	bf88      	it	hi
  405cf8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405cfc:	f63f aeaf 	bhi.w	405a5e <__aeabi_dmul+0xde>
  405d00:	ebb5 0c03 	subs.w	ip, r5, r3
  405d04:	bf04      	itt	eq
  405d06:	ebb6 0c02 	subseq.w	ip, r6, r2
  405d0a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d0e:	f150 0000 	adcs.w	r0, r0, #0
  405d12:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d16:	bd70      	pop	{r4, r5, r6, pc}
  405d18:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405d1c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405d20:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405d24:	bfc2      	ittt	gt
  405d26:	ebd4 050c 	rsbsgt	r5, r4, ip
  405d2a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405d2e:	bd70      	popgt	{r4, r5, r6, pc}
  405d30:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405d34:	f04f 0e00 	mov.w	lr, #0
  405d38:	3c01      	subs	r4, #1
  405d3a:	e690      	b.n	405a5e <__aeabi_dmul+0xde>
  405d3c:	ea45 0e06 	orr.w	lr, r5, r6
  405d40:	e68d      	b.n	405a5e <__aeabi_dmul+0xde>
  405d42:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405d46:	ea94 0f0c 	teq	r4, ip
  405d4a:	bf08      	it	eq
  405d4c:	ea95 0f0c 	teqeq	r5, ip
  405d50:	f43f af3b 	beq.w	405bca <__aeabi_dmul+0x24a>
  405d54:	ea94 0f0c 	teq	r4, ip
  405d58:	d10a      	bne.n	405d70 <__aeabi_ddiv+0x19c>
  405d5a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405d5e:	f47f af34 	bne.w	405bca <__aeabi_dmul+0x24a>
  405d62:	ea95 0f0c 	teq	r5, ip
  405d66:	f47f af25 	bne.w	405bb4 <__aeabi_dmul+0x234>
  405d6a:	4610      	mov	r0, r2
  405d6c:	4619      	mov	r1, r3
  405d6e:	e72c      	b.n	405bca <__aeabi_dmul+0x24a>
  405d70:	ea95 0f0c 	teq	r5, ip
  405d74:	d106      	bne.n	405d84 <__aeabi_ddiv+0x1b0>
  405d76:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405d7a:	f43f aefd 	beq.w	405b78 <__aeabi_dmul+0x1f8>
  405d7e:	4610      	mov	r0, r2
  405d80:	4619      	mov	r1, r3
  405d82:	e722      	b.n	405bca <__aeabi_dmul+0x24a>
  405d84:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405d88:	bf18      	it	ne
  405d8a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405d8e:	f47f aec5 	bne.w	405b1c <__aeabi_dmul+0x19c>
  405d92:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405d96:	f47f af0d 	bne.w	405bb4 <__aeabi_dmul+0x234>
  405d9a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405d9e:	f47f aeeb 	bne.w	405b78 <__aeabi_dmul+0x1f8>
  405da2:	e712      	b.n	405bca <__aeabi_dmul+0x24a>

00405da4 <__gedf2>:
  405da4:	f04f 3cff 	mov.w	ip, #4294967295
  405da8:	e006      	b.n	405db8 <__cmpdf2+0x4>
  405daa:	bf00      	nop

00405dac <__ledf2>:
  405dac:	f04f 0c01 	mov.w	ip, #1
  405db0:	e002      	b.n	405db8 <__cmpdf2+0x4>
  405db2:	bf00      	nop

00405db4 <__cmpdf2>:
  405db4:	f04f 0c01 	mov.w	ip, #1
  405db8:	f84d cd04 	str.w	ip, [sp, #-4]!
  405dbc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405dc0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405dc4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405dc8:	bf18      	it	ne
  405dca:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405dce:	d01b      	beq.n	405e08 <__cmpdf2+0x54>
  405dd0:	b001      	add	sp, #4
  405dd2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405dd6:	bf0c      	ite	eq
  405dd8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405ddc:	ea91 0f03 	teqne	r1, r3
  405de0:	bf02      	ittt	eq
  405de2:	ea90 0f02 	teqeq	r0, r2
  405de6:	2000      	moveq	r0, #0
  405de8:	4770      	bxeq	lr
  405dea:	f110 0f00 	cmn.w	r0, #0
  405dee:	ea91 0f03 	teq	r1, r3
  405df2:	bf58      	it	pl
  405df4:	4299      	cmppl	r1, r3
  405df6:	bf08      	it	eq
  405df8:	4290      	cmpeq	r0, r2
  405dfa:	bf2c      	ite	cs
  405dfc:	17d8      	asrcs	r0, r3, #31
  405dfe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405e02:	f040 0001 	orr.w	r0, r0, #1
  405e06:	4770      	bx	lr
  405e08:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e10:	d102      	bne.n	405e18 <__cmpdf2+0x64>
  405e12:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405e16:	d107      	bne.n	405e28 <__cmpdf2+0x74>
  405e18:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e20:	d1d6      	bne.n	405dd0 <__cmpdf2+0x1c>
  405e22:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e26:	d0d3      	beq.n	405dd0 <__cmpdf2+0x1c>
  405e28:	f85d 0b04 	ldr.w	r0, [sp], #4
  405e2c:	4770      	bx	lr
  405e2e:	bf00      	nop

00405e30 <__aeabi_cdrcmple>:
  405e30:	4684      	mov	ip, r0
  405e32:	4610      	mov	r0, r2
  405e34:	4662      	mov	r2, ip
  405e36:	468c      	mov	ip, r1
  405e38:	4619      	mov	r1, r3
  405e3a:	4663      	mov	r3, ip
  405e3c:	e000      	b.n	405e40 <__aeabi_cdcmpeq>
  405e3e:	bf00      	nop

00405e40 <__aeabi_cdcmpeq>:
  405e40:	b501      	push	{r0, lr}
  405e42:	f7ff ffb7 	bl	405db4 <__cmpdf2>
  405e46:	2800      	cmp	r0, #0
  405e48:	bf48      	it	mi
  405e4a:	f110 0f00 	cmnmi.w	r0, #0
  405e4e:	bd01      	pop	{r0, pc}

00405e50 <__aeabi_dcmpeq>:
  405e50:	f84d ed08 	str.w	lr, [sp, #-8]!
  405e54:	f7ff fff4 	bl	405e40 <__aeabi_cdcmpeq>
  405e58:	bf0c      	ite	eq
  405e5a:	2001      	moveq	r0, #1
  405e5c:	2000      	movne	r0, #0
  405e5e:	f85d fb08 	ldr.w	pc, [sp], #8
  405e62:	bf00      	nop

00405e64 <__aeabi_dcmplt>:
  405e64:	f84d ed08 	str.w	lr, [sp, #-8]!
  405e68:	f7ff ffea 	bl	405e40 <__aeabi_cdcmpeq>
  405e6c:	bf34      	ite	cc
  405e6e:	2001      	movcc	r0, #1
  405e70:	2000      	movcs	r0, #0
  405e72:	f85d fb08 	ldr.w	pc, [sp], #8
  405e76:	bf00      	nop

00405e78 <__aeabi_dcmple>:
  405e78:	f84d ed08 	str.w	lr, [sp, #-8]!
  405e7c:	f7ff ffe0 	bl	405e40 <__aeabi_cdcmpeq>
  405e80:	bf94      	ite	ls
  405e82:	2001      	movls	r0, #1
  405e84:	2000      	movhi	r0, #0
  405e86:	f85d fb08 	ldr.w	pc, [sp], #8
  405e8a:	bf00      	nop

00405e8c <__aeabi_dcmpge>:
  405e8c:	f84d ed08 	str.w	lr, [sp, #-8]!
  405e90:	f7ff ffce 	bl	405e30 <__aeabi_cdrcmple>
  405e94:	bf94      	ite	ls
  405e96:	2001      	movls	r0, #1
  405e98:	2000      	movhi	r0, #0
  405e9a:	f85d fb08 	ldr.w	pc, [sp], #8
  405e9e:	bf00      	nop

00405ea0 <__aeabi_dcmpgt>:
  405ea0:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ea4:	f7ff ffc4 	bl	405e30 <__aeabi_cdrcmple>
  405ea8:	bf34      	ite	cc
  405eaa:	2001      	movcc	r0, #1
  405eac:	2000      	movcs	r0, #0
  405eae:	f85d fb08 	ldr.w	pc, [sp], #8
  405eb2:	bf00      	nop

00405eb4 <__aeabi_d2iz>:
  405eb4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405eb8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405ebc:	d215      	bcs.n	405eea <__aeabi_d2iz+0x36>
  405ebe:	d511      	bpl.n	405ee4 <__aeabi_d2iz+0x30>
  405ec0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405ec4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405ec8:	d912      	bls.n	405ef0 <__aeabi_d2iz+0x3c>
  405eca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405ece:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405ed2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405ed6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405eda:	fa23 f002 	lsr.w	r0, r3, r2
  405ede:	bf18      	it	ne
  405ee0:	4240      	negne	r0, r0
  405ee2:	4770      	bx	lr
  405ee4:	f04f 0000 	mov.w	r0, #0
  405ee8:	4770      	bx	lr
  405eea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405eee:	d105      	bne.n	405efc <__aeabi_d2iz+0x48>
  405ef0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405ef4:	bf08      	it	eq
  405ef6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405efa:	4770      	bx	lr
  405efc:	f04f 0000 	mov.w	r0, #0
  405f00:	4770      	bx	lr
  405f02:	bf00      	nop

00405f04 <__aeabi_uldivmod>:
  405f04:	b94b      	cbnz	r3, 405f1a <__aeabi_uldivmod+0x16>
  405f06:	b942      	cbnz	r2, 405f1a <__aeabi_uldivmod+0x16>
  405f08:	2900      	cmp	r1, #0
  405f0a:	bf08      	it	eq
  405f0c:	2800      	cmpeq	r0, #0
  405f0e:	d002      	beq.n	405f16 <__aeabi_uldivmod+0x12>
  405f10:	f04f 31ff 	mov.w	r1, #4294967295
  405f14:	4608      	mov	r0, r1
  405f16:	f000 b83b 	b.w	405f90 <__aeabi_idiv0>
  405f1a:	b082      	sub	sp, #8
  405f1c:	46ec      	mov	ip, sp
  405f1e:	e92d 5000 	stmdb	sp!, {ip, lr}
  405f22:	f000 f81d 	bl	405f60 <__gnu_uldivmod_helper>
  405f26:	f8dd e004 	ldr.w	lr, [sp, #4]
  405f2a:	b002      	add	sp, #8
  405f2c:	bc0c      	pop	{r2, r3}
  405f2e:	4770      	bx	lr

00405f30 <__gnu_ldivmod_helper>:
  405f30:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
  405f34:	9e08      	ldr	r6, [sp, #32]
  405f36:	4614      	mov	r4, r2
  405f38:	461d      	mov	r5, r3
  405f3a:	4680      	mov	r8, r0
  405f3c:	4689      	mov	r9, r1
  405f3e:	f000 f829 	bl	405f94 <__divdi3>
  405f42:	fb04 f301 	mul.w	r3, r4, r1
  405f46:	fba4 ab00 	umull	sl, fp, r4, r0
  405f4a:	fb00 3205 	mla	r2, r0, r5, r3
  405f4e:	4493      	add	fp, r2
  405f50:	ebb8 080a 	subs.w	r8, r8, sl
  405f54:	eb69 090b 	sbc.w	r9, r9, fp
  405f58:	e9c6 8900 	strd	r8, r9, [r6]
  405f5c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00405f60 <__gnu_uldivmod_helper>:
  405f60:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
  405f64:	9e08      	ldr	r6, [sp, #32]
  405f66:	4614      	mov	r4, r2
  405f68:	461d      	mov	r5, r3
  405f6a:	4680      	mov	r8, r0
  405f6c:	4689      	mov	r9, r1
  405f6e:	f000 f961 	bl	406234 <__udivdi3>
  405f72:	fb00 f505 	mul.w	r5, r0, r5
  405f76:	fba0 ab04 	umull	sl, fp, r0, r4
  405f7a:	fb04 5401 	mla	r4, r4, r1, r5
  405f7e:	44a3      	add	fp, r4
  405f80:	ebb8 080a 	subs.w	r8, r8, sl
  405f84:	eb69 090b 	sbc.w	r9, r9, fp
  405f88:	e9c6 8900 	strd	r8, r9, [r6]
  405f8c:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00405f90 <__aeabi_idiv0>:
  405f90:	4770      	bx	lr
  405f92:	bf00      	nop

00405f94 <__divdi3>:
  405f94:	2900      	cmp	r1, #0
  405f96:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  405f9a:	f2c0 80a1 	blt.w	4060e0 <__divdi3+0x14c>
  405f9e:	2400      	movs	r4, #0
  405fa0:	2b00      	cmp	r3, #0
  405fa2:	f2c0 8098 	blt.w	4060d6 <__divdi3+0x142>
  405fa6:	4615      	mov	r5, r2
  405fa8:	4606      	mov	r6, r0
  405faa:	460f      	mov	r7, r1
  405fac:	2b00      	cmp	r3, #0
  405fae:	d13f      	bne.n	406030 <__divdi3+0x9c>
  405fb0:	428a      	cmp	r2, r1
  405fb2:	d958      	bls.n	406066 <__divdi3+0xd2>
  405fb4:	fab2 f382 	clz	r3, r2
  405fb8:	b14b      	cbz	r3, 405fce <__divdi3+0x3a>
  405fba:	f1c3 0220 	rsb	r2, r3, #32
  405fbe:	fa01 f703 	lsl.w	r7, r1, r3
  405fc2:	fa20 f202 	lsr.w	r2, r0, r2
  405fc6:	409d      	lsls	r5, r3
  405fc8:	fa00 f603 	lsl.w	r6, r0, r3
  405fcc:	4317      	orrs	r7, r2
  405fce:	0c29      	lsrs	r1, r5, #16
  405fd0:	fbb7 f2f1 	udiv	r2, r7, r1
  405fd4:	fb01 7712 	mls	r7, r1, r2, r7
  405fd8:	b2a8      	uxth	r0, r5
  405fda:	fb00 f302 	mul.w	r3, r0, r2
  405fde:	ea4f 4c16 	mov.w	ip, r6, lsr #16
  405fe2:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
  405fe6:	42bb      	cmp	r3, r7
  405fe8:	d909      	bls.n	405ffe <__divdi3+0x6a>
  405fea:	197f      	adds	r7, r7, r5
  405fec:	f102 3cff 	add.w	ip, r2, #4294967295
  405ff0:	f080 8105 	bcs.w	4061fe <__divdi3+0x26a>
  405ff4:	42bb      	cmp	r3, r7
  405ff6:	f240 8102 	bls.w	4061fe <__divdi3+0x26a>
  405ffa:	3a02      	subs	r2, #2
  405ffc:	442f      	add	r7, r5
  405ffe:	1aff      	subs	r7, r7, r3
  406000:	fbb7 f3f1 	udiv	r3, r7, r1
  406004:	fb01 7113 	mls	r1, r1, r3, r7
  406008:	fb00 f003 	mul.w	r0, r0, r3
  40600c:	b2b6      	uxth	r6, r6
  40600e:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
  406012:	4288      	cmp	r0, r1
  406014:	d908      	bls.n	406028 <__divdi3+0x94>
  406016:	1949      	adds	r1, r1, r5
  406018:	f103 37ff 	add.w	r7, r3, #4294967295
  40601c:	f080 80f1 	bcs.w	406202 <__divdi3+0x26e>
  406020:	4288      	cmp	r0, r1
  406022:	f240 80ee 	bls.w	406202 <__divdi3+0x26e>
  406026:	3b02      	subs	r3, #2
  406028:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  40602c:	2300      	movs	r3, #0
  40602e:	e003      	b.n	406038 <__divdi3+0xa4>
  406030:	428b      	cmp	r3, r1
  406032:	d90a      	bls.n	40604a <__divdi3+0xb6>
  406034:	2300      	movs	r3, #0
  406036:	461a      	mov	r2, r3
  406038:	4610      	mov	r0, r2
  40603a:	4619      	mov	r1, r3
  40603c:	b114      	cbz	r4, 406044 <__divdi3+0xb0>
  40603e:	4240      	negs	r0, r0
  406040:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  406044:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  406048:	4770      	bx	lr
  40604a:	fab3 f883 	clz	r8, r3
  40604e:	f1b8 0f00 	cmp.w	r8, #0
  406052:	f040 8088 	bne.w	406166 <__divdi3+0x1d2>
  406056:	428b      	cmp	r3, r1
  406058:	d302      	bcc.n	406060 <__divdi3+0xcc>
  40605a:	4282      	cmp	r2, r0
  40605c:	f200 80e2 	bhi.w	406224 <__divdi3+0x290>
  406060:	2300      	movs	r3, #0
  406062:	2201      	movs	r2, #1
  406064:	e7e8      	b.n	406038 <__divdi3+0xa4>
  406066:	b912      	cbnz	r2, 40606e <__divdi3+0xda>
  406068:	2301      	movs	r3, #1
  40606a:	fbb3 f5f2 	udiv	r5, r3, r2
  40606e:	fab5 f285 	clz	r2, r5
  406072:	2a00      	cmp	r2, #0
  406074:	d13a      	bne.n	4060ec <__divdi3+0x158>
  406076:	1b7f      	subs	r7, r7, r5
  406078:	0c28      	lsrs	r0, r5, #16
  40607a:	fa1f fc85 	uxth.w	ip, r5
  40607e:	2301      	movs	r3, #1
  406080:	fbb7 f1f0 	udiv	r1, r7, r0
  406084:	fb00 7711 	mls	r7, r0, r1, r7
  406088:	fb0c f201 	mul.w	r2, ip, r1
  40608c:	ea4f 4816 	mov.w	r8, r6, lsr #16
  406090:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
  406094:	42ba      	cmp	r2, r7
  406096:	d907      	bls.n	4060a8 <__divdi3+0x114>
  406098:	197f      	adds	r7, r7, r5
  40609a:	f101 38ff 	add.w	r8, r1, #4294967295
  40609e:	d202      	bcs.n	4060a6 <__divdi3+0x112>
  4060a0:	42ba      	cmp	r2, r7
  4060a2:	f200 80c4 	bhi.w	40622e <__divdi3+0x29a>
  4060a6:	4641      	mov	r1, r8
  4060a8:	1abf      	subs	r7, r7, r2
  4060aa:	fbb7 f2f0 	udiv	r2, r7, r0
  4060ae:	fb00 7012 	mls	r0, r0, r2, r7
  4060b2:	fb0c fc02 	mul.w	ip, ip, r2
  4060b6:	b2b6      	uxth	r6, r6
  4060b8:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
  4060bc:	4584      	cmp	ip, r0
  4060be:	d907      	bls.n	4060d0 <__divdi3+0x13c>
  4060c0:	1940      	adds	r0, r0, r5
  4060c2:	f102 37ff 	add.w	r7, r2, #4294967295
  4060c6:	d202      	bcs.n	4060ce <__divdi3+0x13a>
  4060c8:	4584      	cmp	ip, r0
  4060ca:	f200 80ae 	bhi.w	40622a <__divdi3+0x296>
  4060ce:	463a      	mov	r2, r7
  4060d0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  4060d4:	e7b0      	b.n	406038 <__divdi3+0xa4>
  4060d6:	43e4      	mvns	r4, r4
  4060d8:	4252      	negs	r2, r2
  4060da:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  4060de:	e762      	b.n	405fa6 <__divdi3+0x12>
  4060e0:	4240      	negs	r0, r0
  4060e2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4060e6:	f04f 34ff 	mov.w	r4, #4294967295
  4060ea:	e759      	b.n	405fa0 <__divdi3+0xc>
  4060ec:	4095      	lsls	r5, r2
  4060ee:	f1c2 0920 	rsb	r9, r2, #32
  4060f2:	fa27 f109 	lsr.w	r1, r7, r9
  4060f6:	fa26 f909 	lsr.w	r9, r6, r9
  4060fa:	4097      	lsls	r7, r2
  4060fc:	0c28      	lsrs	r0, r5, #16
  4060fe:	fbb1 f8f0 	udiv	r8, r1, r0
  406102:	fb00 1118 	mls	r1, r0, r8, r1
  406106:	fa1f fc85 	uxth.w	ip, r5
  40610a:	fb0c f308 	mul.w	r3, ip, r8
  40610e:	ea49 0907 	orr.w	r9, r9, r7
  406112:	ea4f 4719 	mov.w	r7, r9, lsr #16
  406116:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
  40611a:	428b      	cmp	r3, r1
  40611c:	fa06 f602 	lsl.w	r6, r6, r2
  406120:	d908      	bls.n	406134 <__divdi3+0x1a0>
  406122:	1949      	adds	r1, r1, r5
  406124:	f108 32ff 	add.w	r2, r8, #4294967295
  406128:	d27a      	bcs.n	406220 <__divdi3+0x28c>
  40612a:	428b      	cmp	r3, r1
  40612c:	d978      	bls.n	406220 <__divdi3+0x28c>
  40612e:	f1a8 0802 	sub.w	r8, r8, #2
  406132:	4429      	add	r1, r5
  406134:	1ac9      	subs	r1, r1, r3
  406136:	fbb1 f3f0 	udiv	r3, r1, r0
  40613a:	fb00 1713 	mls	r7, r0, r3, r1
  40613e:	fb0c f203 	mul.w	r2, ip, r3
  406142:	fa1f f989 	uxth.w	r9, r9
  406146:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
  40614a:	42ba      	cmp	r2, r7
  40614c:	d907      	bls.n	40615e <__divdi3+0x1ca>
  40614e:	197f      	adds	r7, r7, r5
  406150:	f103 31ff 	add.w	r1, r3, #4294967295
  406154:	d260      	bcs.n	406218 <__divdi3+0x284>
  406156:	42ba      	cmp	r2, r7
  406158:	d95e      	bls.n	406218 <__divdi3+0x284>
  40615a:	3b02      	subs	r3, #2
  40615c:	442f      	add	r7, r5
  40615e:	1abf      	subs	r7, r7, r2
  406160:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  406164:	e78c      	b.n	406080 <__divdi3+0xec>
  406166:	f1c8 0220 	rsb	r2, r8, #32
  40616a:	fa25 f102 	lsr.w	r1, r5, r2
  40616e:	fa03 fc08 	lsl.w	ip, r3, r8
  406172:	fa27 f302 	lsr.w	r3, r7, r2
  406176:	fa20 f202 	lsr.w	r2, r0, r2
  40617a:	fa07 f708 	lsl.w	r7, r7, r8
  40617e:	ea41 0c0c 	orr.w	ip, r1, ip
  406182:	ea4f 491c 	mov.w	r9, ip, lsr #16
  406186:	fbb3 f1f9 	udiv	r1, r3, r9
  40618a:	fb09 3311 	mls	r3, r9, r1, r3
  40618e:	fa1f fa8c 	uxth.w	sl, ip
  406192:	fb0a fb01 	mul.w	fp, sl, r1
  406196:	4317      	orrs	r7, r2
  406198:	0c3a      	lsrs	r2, r7, #16
  40619a:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  40619e:	459b      	cmp	fp, r3
  4061a0:	fa05 f008 	lsl.w	r0, r5, r8
  4061a4:	d908      	bls.n	4061b8 <__divdi3+0x224>
  4061a6:	eb13 030c 	adds.w	r3, r3, ip
  4061aa:	f101 32ff 	add.w	r2, r1, #4294967295
  4061ae:	d235      	bcs.n	40621c <__divdi3+0x288>
  4061b0:	459b      	cmp	fp, r3
  4061b2:	d933      	bls.n	40621c <__divdi3+0x288>
  4061b4:	3902      	subs	r1, #2
  4061b6:	4463      	add	r3, ip
  4061b8:	ebcb 0303 	rsb	r3, fp, r3
  4061bc:	fbb3 f2f9 	udiv	r2, r3, r9
  4061c0:	fb09 3312 	mls	r3, r9, r2, r3
  4061c4:	fb0a fa02 	mul.w	sl, sl, r2
  4061c8:	b2bf      	uxth	r7, r7
  4061ca:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  4061ce:	45ba      	cmp	sl, r7
  4061d0:	d908      	bls.n	4061e4 <__divdi3+0x250>
  4061d2:	eb17 070c 	adds.w	r7, r7, ip
  4061d6:	f102 33ff 	add.w	r3, r2, #4294967295
  4061da:	d21b      	bcs.n	406214 <__divdi3+0x280>
  4061dc:	45ba      	cmp	sl, r7
  4061de:	d919      	bls.n	406214 <__divdi3+0x280>
  4061e0:	3a02      	subs	r2, #2
  4061e2:	4467      	add	r7, ip
  4061e4:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
  4061e8:	fba5 0100 	umull	r0, r1, r5, r0
  4061ec:	ebca 0707 	rsb	r7, sl, r7
  4061f0:	428f      	cmp	r7, r1
  4061f2:	f04f 0300 	mov.w	r3, #0
  4061f6:	d30a      	bcc.n	40620e <__divdi3+0x27a>
  4061f8:	d005      	beq.n	406206 <__divdi3+0x272>
  4061fa:	462a      	mov	r2, r5
  4061fc:	e71c      	b.n	406038 <__divdi3+0xa4>
  4061fe:	4662      	mov	r2, ip
  406200:	e6fd      	b.n	405ffe <__divdi3+0x6a>
  406202:	463b      	mov	r3, r7
  406204:	e710      	b.n	406028 <__divdi3+0x94>
  406206:	fa06 f608 	lsl.w	r6, r6, r8
  40620a:	4286      	cmp	r6, r0
  40620c:	d2f5      	bcs.n	4061fa <__divdi3+0x266>
  40620e:	1e6a      	subs	r2, r5, #1
  406210:	2300      	movs	r3, #0
  406212:	e711      	b.n	406038 <__divdi3+0xa4>
  406214:	461a      	mov	r2, r3
  406216:	e7e5      	b.n	4061e4 <__divdi3+0x250>
  406218:	460b      	mov	r3, r1
  40621a:	e7a0      	b.n	40615e <__divdi3+0x1ca>
  40621c:	4611      	mov	r1, r2
  40621e:	e7cb      	b.n	4061b8 <__divdi3+0x224>
  406220:	4690      	mov	r8, r2
  406222:	e787      	b.n	406134 <__divdi3+0x1a0>
  406224:	4643      	mov	r3, r8
  406226:	4642      	mov	r2, r8
  406228:	e706      	b.n	406038 <__divdi3+0xa4>
  40622a:	3a02      	subs	r2, #2
  40622c:	e750      	b.n	4060d0 <__divdi3+0x13c>
  40622e:	3902      	subs	r1, #2
  406230:	442f      	add	r7, r5
  406232:	e739      	b.n	4060a8 <__divdi3+0x114>

00406234 <__udivdi3>:
  406234:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  406238:	4614      	mov	r4, r2
  40623a:	4605      	mov	r5, r0
  40623c:	460e      	mov	r6, r1
  40623e:	2b00      	cmp	r3, #0
  406240:	d143      	bne.n	4062ca <__udivdi3+0x96>
  406242:	428a      	cmp	r2, r1
  406244:	d953      	bls.n	4062ee <__udivdi3+0xba>
  406246:	fab2 f782 	clz	r7, r2
  40624a:	b157      	cbz	r7, 406262 <__udivdi3+0x2e>
  40624c:	f1c7 0620 	rsb	r6, r7, #32
  406250:	fa20 f606 	lsr.w	r6, r0, r6
  406254:	fa01 f307 	lsl.w	r3, r1, r7
  406258:	fa02 f407 	lsl.w	r4, r2, r7
  40625c:	fa00 f507 	lsl.w	r5, r0, r7
  406260:	431e      	orrs	r6, r3
  406262:	0c21      	lsrs	r1, r4, #16
  406264:	fbb6 f2f1 	udiv	r2, r6, r1
  406268:	fb01 6612 	mls	r6, r1, r2, r6
  40626c:	b2a0      	uxth	r0, r4
  40626e:	fb00 f302 	mul.w	r3, r0, r2
  406272:	0c2f      	lsrs	r7, r5, #16
  406274:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
  406278:	42b3      	cmp	r3, r6
  40627a:	d909      	bls.n	406290 <__udivdi3+0x5c>
  40627c:	1936      	adds	r6, r6, r4
  40627e:	f102 37ff 	add.w	r7, r2, #4294967295
  406282:	f080 80fd 	bcs.w	406480 <__udivdi3+0x24c>
  406286:	42b3      	cmp	r3, r6
  406288:	f240 80fa 	bls.w	406480 <__udivdi3+0x24c>
  40628c:	3a02      	subs	r2, #2
  40628e:	4426      	add	r6, r4
  406290:	1af6      	subs	r6, r6, r3
  406292:	fbb6 f3f1 	udiv	r3, r6, r1
  406296:	fb01 6113 	mls	r1, r1, r3, r6
  40629a:	fb00 f003 	mul.w	r0, r0, r3
  40629e:	b2ad      	uxth	r5, r5
  4062a0:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
  4062a4:	4288      	cmp	r0, r1
  4062a6:	d908      	bls.n	4062ba <__udivdi3+0x86>
  4062a8:	1909      	adds	r1, r1, r4
  4062aa:	f103 36ff 	add.w	r6, r3, #4294967295
  4062ae:	f080 80e9 	bcs.w	406484 <__udivdi3+0x250>
  4062b2:	4288      	cmp	r0, r1
  4062b4:	f240 80e6 	bls.w	406484 <__udivdi3+0x250>
  4062b8:	3b02      	subs	r3, #2
  4062ba:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
  4062be:	2300      	movs	r3, #0
  4062c0:	4610      	mov	r0, r2
  4062c2:	4619      	mov	r1, r3
  4062c4:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4062c8:	4770      	bx	lr
  4062ca:	428b      	cmp	r3, r1
  4062cc:	d84c      	bhi.n	406368 <__udivdi3+0x134>
  4062ce:	fab3 f683 	clz	r6, r3
  4062d2:	2e00      	cmp	r6, #0
  4062d4:	d14f      	bne.n	406376 <__udivdi3+0x142>
  4062d6:	428b      	cmp	r3, r1
  4062d8:	d302      	bcc.n	4062e0 <__udivdi3+0xac>
  4062da:	4282      	cmp	r2, r0
  4062dc:	f200 80dd 	bhi.w	40649a <__udivdi3+0x266>
  4062e0:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  4062e4:	2300      	movs	r3, #0
  4062e6:	2201      	movs	r2, #1
  4062e8:	4610      	mov	r0, r2
  4062ea:	4619      	mov	r1, r3
  4062ec:	4770      	bx	lr
  4062ee:	b912      	cbnz	r2, 4062f6 <__udivdi3+0xc2>
  4062f0:	2401      	movs	r4, #1
  4062f2:	fbb4 f4f2 	udiv	r4, r4, r2
  4062f6:	fab4 f284 	clz	r2, r4
  4062fa:	2a00      	cmp	r2, #0
  4062fc:	f040 8082 	bne.w	406404 <__udivdi3+0x1d0>
  406300:	1b09      	subs	r1, r1, r4
  406302:	0c26      	lsrs	r6, r4, #16
  406304:	b2a7      	uxth	r7, r4
  406306:	2301      	movs	r3, #1
  406308:	fbb1 f0f6 	udiv	r0, r1, r6
  40630c:	fb06 1110 	mls	r1, r6, r0, r1
  406310:	fb07 f200 	mul.w	r2, r7, r0
  406314:	ea4f 4c15 	mov.w	ip, r5, lsr #16
  406318:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
  40631c:	428a      	cmp	r2, r1
  40631e:	d907      	bls.n	406330 <__udivdi3+0xfc>
  406320:	1909      	adds	r1, r1, r4
  406322:	f100 3cff 	add.w	ip, r0, #4294967295
  406326:	d202      	bcs.n	40632e <__udivdi3+0xfa>
  406328:	428a      	cmp	r2, r1
  40632a:	f200 80c8 	bhi.w	4064be <__udivdi3+0x28a>
  40632e:	4660      	mov	r0, ip
  406330:	1a89      	subs	r1, r1, r2
  406332:	fbb1 f2f6 	udiv	r2, r1, r6
  406336:	fb06 1112 	mls	r1, r6, r2, r1
  40633a:	fb07 f702 	mul.w	r7, r7, r2
  40633e:	b2ad      	uxth	r5, r5
  406340:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
  406344:	42af      	cmp	r7, r5
  406346:	d908      	bls.n	40635a <__udivdi3+0x126>
  406348:	192c      	adds	r4, r5, r4
  40634a:	f102 31ff 	add.w	r1, r2, #4294967295
  40634e:	f080 809b 	bcs.w	406488 <__udivdi3+0x254>
  406352:	42a7      	cmp	r7, r4
  406354:	f240 8098 	bls.w	406488 <__udivdi3+0x254>
  406358:	3a02      	subs	r2, #2
  40635a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
  40635e:	4610      	mov	r0, r2
  406360:	4619      	mov	r1, r3
  406362:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  406366:	4770      	bx	lr
  406368:	2300      	movs	r3, #0
  40636a:	461a      	mov	r2, r3
  40636c:	4610      	mov	r0, r2
  40636e:	4619      	mov	r1, r3
  406370:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
  406374:	4770      	bx	lr
  406376:	f1c6 0520 	rsb	r5, r6, #32
  40637a:	fa22 f705 	lsr.w	r7, r2, r5
  40637e:	fa03 f406 	lsl.w	r4, r3, r6
  406382:	fa21 f305 	lsr.w	r3, r1, r5
  406386:	fa01 fb06 	lsl.w	fp, r1, r6
  40638a:	fa20 f505 	lsr.w	r5, r0, r5
  40638e:	433c      	orrs	r4, r7
  406390:	ea4f 4814 	mov.w	r8, r4, lsr #16
  406394:	fbb3 fcf8 	udiv	ip, r3, r8
  406398:	fb08 331c 	mls	r3, r8, ip, r3
  40639c:	fa1f f984 	uxth.w	r9, r4
  4063a0:	fb09 fa0c 	mul.w	sl, r9, ip
  4063a4:	ea45 0b0b 	orr.w	fp, r5, fp
  4063a8:	ea4f 451b 	mov.w	r5, fp, lsr #16
  4063ac:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
  4063b0:	459a      	cmp	sl, r3
  4063b2:	fa02 f206 	lsl.w	r2, r2, r6
  4063b6:	d904      	bls.n	4063c2 <__udivdi3+0x18e>
  4063b8:	191b      	adds	r3, r3, r4
  4063ba:	f10c 35ff 	add.w	r5, ip, #4294967295
  4063be:	d36f      	bcc.n	4064a0 <__udivdi3+0x26c>
  4063c0:	46ac      	mov	ip, r5
  4063c2:	ebca 0303 	rsb	r3, sl, r3
  4063c6:	fbb3 f5f8 	udiv	r5, r3, r8
  4063ca:	fb08 3315 	mls	r3, r8, r5, r3
  4063ce:	fb09 f905 	mul.w	r9, r9, r5
  4063d2:	fa1f fb8b 	uxth.w	fp, fp
  4063d6:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
  4063da:	45b9      	cmp	r9, r7
  4063dc:	d904      	bls.n	4063e8 <__udivdi3+0x1b4>
  4063de:	193f      	adds	r7, r7, r4
  4063e0:	f105 33ff 	add.w	r3, r5, #4294967295
  4063e4:	d362      	bcc.n	4064ac <__udivdi3+0x278>
  4063e6:	461d      	mov	r5, r3
  4063e8:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
  4063ec:	fbac 2302 	umull	r2, r3, ip, r2
  4063f0:	ebc9 0707 	rsb	r7, r9, r7
  4063f4:	429f      	cmp	r7, r3
  4063f6:	f04f 0500 	mov.w	r5, #0
  4063fa:	d34a      	bcc.n	406492 <__udivdi3+0x25e>
  4063fc:	d046      	beq.n	40648c <__udivdi3+0x258>
  4063fe:	4662      	mov	r2, ip
  406400:	462b      	mov	r3, r5
  406402:	e75d      	b.n	4062c0 <__udivdi3+0x8c>
  406404:	4094      	lsls	r4, r2
  406406:	f1c2 0920 	rsb	r9, r2, #32
  40640a:	fa21 fc09 	lsr.w	ip, r1, r9
  40640e:	4091      	lsls	r1, r2
  406410:	fa20 f909 	lsr.w	r9, r0, r9
  406414:	0c26      	lsrs	r6, r4, #16
  406416:	fbbc f8f6 	udiv	r8, ip, r6
  40641a:	fb06 cc18 	mls	ip, r6, r8, ip
  40641e:	b2a7      	uxth	r7, r4
  406420:	fb07 f308 	mul.w	r3, r7, r8
  406424:	ea49 0901 	orr.w	r9, r9, r1
  406428:	ea4f 4119 	mov.w	r1, r9, lsr #16
  40642c:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
  406430:	4563      	cmp	r3, ip
  406432:	fa00 f502 	lsl.w	r5, r0, r2
  406436:	d909      	bls.n	40644c <__udivdi3+0x218>
  406438:	eb1c 0c04 	adds.w	ip, ip, r4
  40643c:	f108 32ff 	add.w	r2, r8, #4294967295
  406440:	d23b      	bcs.n	4064ba <__udivdi3+0x286>
  406442:	4563      	cmp	r3, ip
  406444:	d939      	bls.n	4064ba <__udivdi3+0x286>
  406446:	f1a8 0802 	sub.w	r8, r8, #2
  40644a:	44a4      	add	ip, r4
  40644c:	ebc3 0c0c 	rsb	ip, r3, ip
  406450:	fbbc f3f6 	udiv	r3, ip, r6
  406454:	fb06 c113 	mls	r1, r6, r3, ip
  406458:	fb07 f203 	mul.w	r2, r7, r3
  40645c:	fa1f f989 	uxth.w	r9, r9
  406460:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
  406464:	428a      	cmp	r2, r1
  406466:	d907      	bls.n	406478 <__udivdi3+0x244>
  406468:	1909      	adds	r1, r1, r4
  40646a:	f103 30ff 	add.w	r0, r3, #4294967295
  40646e:	d222      	bcs.n	4064b6 <__udivdi3+0x282>
  406470:	428a      	cmp	r2, r1
  406472:	d920      	bls.n	4064b6 <__udivdi3+0x282>
  406474:	3b02      	subs	r3, #2
  406476:	4421      	add	r1, r4
  406478:	1a89      	subs	r1, r1, r2
  40647a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
  40647e:	e743      	b.n	406308 <__udivdi3+0xd4>
  406480:	463a      	mov	r2, r7
  406482:	e705      	b.n	406290 <__udivdi3+0x5c>
  406484:	4633      	mov	r3, r6
  406486:	e718      	b.n	4062ba <__udivdi3+0x86>
  406488:	460a      	mov	r2, r1
  40648a:	e766      	b.n	40635a <__udivdi3+0x126>
  40648c:	40b0      	lsls	r0, r6
  40648e:	4290      	cmp	r0, r2
  406490:	d2b5      	bcs.n	4063fe <__udivdi3+0x1ca>
  406492:	f10c 32ff 	add.w	r2, ip, #4294967295
  406496:	2300      	movs	r3, #0
  406498:	e712      	b.n	4062c0 <__udivdi3+0x8c>
  40649a:	4633      	mov	r3, r6
  40649c:	4632      	mov	r2, r6
  40649e:	e70f      	b.n	4062c0 <__udivdi3+0x8c>
  4064a0:	459a      	cmp	sl, r3
  4064a2:	d98d      	bls.n	4063c0 <__udivdi3+0x18c>
  4064a4:	f1ac 0c02 	sub.w	ip, ip, #2
  4064a8:	4423      	add	r3, r4
  4064aa:	e78a      	b.n	4063c2 <__udivdi3+0x18e>
  4064ac:	45b9      	cmp	r9, r7
  4064ae:	d99a      	bls.n	4063e6 <__udivdi3+0x1b2>
  4064b0:	3d02      	subs	r5, #2
  4064b2:	4427      	add	r7, r4
  4064b4:	e798      	b.n	4063e8 <__udivdi3+0x1b4>
  4064b6:	4603      	mov	r3, r0
  4064b8:	e7de      	b.n	406478 <__udivdi3+0x244>
  4064ba:	4690      	mov	r8, r2
  4064bc:	e7c6      	b.n	40644c <__udivdi3+0x218>
  4064be:	3802      	subs	r0, #2
  4064c0:	4421      	add	r1, r4
  4064c2:	e735      	b.n	406330 <__udivdi3+0xfc>

004064c4 <p_uc_charset10x14>:
	...
  4064e0:	ccff ccff 0000 0000 0000 0000 0000 0000     ................
  4064f0:	00f0 00f0 0000 0000 00f0 00f0 0000 0000     ................
  406500:	c00c c00c fcff fcff c00c c00c fcff fcff     ................
  406510:	c00c c00c 600c 701e 303f 3033 fcff fcff     .....`.p?030....
  406520:	3033 f033 e039 c018 0060 0cf0 3cf0 f060     303.9...`....<`.
  406530:	c003 000f 183c 3cf0 3cc0 1800 f03c f87f     ....<..<.<..<...
  406540:	1cc3 8cc7 cccf ecdc 7878 3030 fc00 cc00     ........xx00....
  406550:	0000 0000 0000 0044 00ec 00f8 0070 0000     ......D.....p...
	...
  406568:	c00f f03f 7878 1860 0cc0 0cc0 0000 0000     ..?.xx`.........
  406578:	0000 0000 0cc0 0cc0 1860 7878 f03f c00f     ........`.xx?...
  406588:	0000 0000 600c e00e c007 8003 f83f f83f     .....`......?.?.
  406598:	8003 c007 e00e 600c 0003 0003 0003 0003     .......`........
  4065a8:	f03f f03f 0003 0003 0003 0003 4400 ec00     ?.?..........D..
  4065b8:	f800 7000 0000 0000 0000 0000 0000 0000     ...p............
  4065c8:	0003 0003 0003 0003 0003 0003 0003 0003     ................
  4065d8:	0003 0003 1800 3c00 3c00 1800 0000 0000     .......<.<......
	...
  4065f0:	0000 0c00 3c00 f000 c003 000f 003c 00f0     .....<......<...
  406600:	00c0 0000 f03f f87f fce0 ccc1 8cc3 0cc7     ....?...........
  406610:	0cce 1cfc f87f f03f 0000 0000 0c30 0c70     ......?.....0.p.
  406620:	fcff fcff 0c00 0c00 0000 0000 0c30 1c70     ............0.p.
  406630:	3ce0 7cc0 ecc0 ccc1 8cc3 0ce7 0c7e 0c3c     .<.|........~.<.
  406640:	3030 3870 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     00p8............
  406650:	f87f f03c c003 c007 c00e c01c c038 c070     ..<.........8.p.
  406660:	fcff fcff c000 c000 30fc 38fc 1ccc 0ccc     .........0.8....
  406670:	0ccc 0ccc 0ccc 1cce f8c7 f0c3 f03f f87f     ............?...
  406680:	1ce3 0cc3 0cc3 0cc3 0cc3 9ce3 f871 f030     ............q.0.
  406690:	00c0 00c0 00c0 00c0 fcc3 fcc7 00ce 00dc     ................
  4066a0:	00f8 00f0 f03c f87f 9ce7 0cc3 0cc3 0cc3     ....<...........
  4066b0:	0cc3 9ce7 f87f f03c 003c 007e 0ce7 0cc3     ......<.<.~.....
  4066c0:	1cc3 38c3 70c3 e0e7 c07f 803f 0000 0000     ...8.p....?.....
  4066d0:	0000 6018 f03c f03c 6018 0000 0000 0000     ...`<.<..`......
  4066e0:	0000 0000 0000 4418 ec3c f83c 7018 0000     .......D<.<..p..
  4066f0:	0000 0000 0000 0003 8007 c00f e01c 7038     ..............8p
  406700:	3870 1ce0 0cc0 0000 c00c c00c c00c c00c     p8..............
  406710:	c00c c00c c00c c00c c00c c00c 0000 0cc0     ................
  406720:	1ce0 3870 7038 e01c c00f 8007 0003 0000     ..p88p..........
  406730:	0030 0070 00e0 00c0 ecc1 ecc3 00c3 00e6     0.p.............
  406740:	007e 003c f030 f871 9ce3 0cc3 fcc3 fcc3     ~.<.0.q.........
  406750:	0cc0 1ce0 f87f f03f fc3f fc7f c0e0 c0c0     ......?.?.......
  406760:	c0c0 c0c0 c0c0 c0e0 fc7f fc3f fcff fcff     ..........?.....
  406770:	0cc3 0cc3 0cc3 0cc3 0cc3 9ce7 f87f f03c     ..............<.
  406780:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406790:	3870 3030 fcff fcff 0cc0 0cc0 0cc0 0cc0     p800............
  4067a0:	0cc0 1ce0 f87f f03f fcff fcff 0cc3 0cc3     ......?.........
  4067b0:	0cc3 0cc3 0cc3 0cc3 0cc0 0cc0 fcff fcff     ................
  4067c0:	00c3 00c3 00c3 00c3 00c3 00c3 00c0 00c0     ................
  4067d0:	f03f f87f 1ce0 0cc0 0cc0 0cc3 0cc3 1ce3     ?...............
  4067e0:	f873 f033 fcff fcff 0003 0003 0003 0003     s.3.............
  4067f0:	0003 0003 fcff fcff 0000 0000 0cc0 0cc0     ................
  406800:	fcff fcff 0cc0 0cc0 0000 0000 3000 3800     .............0.8
  406810:	1cc0 0cc0 0cc0 1cc0 f8ff f0ff 00c0 00c0     ................
  406820:	fcff fcff 8007 8007 c00f e01c 7038 3870     ............8pp8
  406830:	1ce0 0cc0 fcff fcff 0c00 0c00 0c00 0c00     ................
  406840:	0c00 0c00 0c00 0c00 fcff fcff 0070 0038     ............p.8.
  406850:	001f 001f 0038 0070 fcff fcff fcff fcff     ....8.p.........
  406860:	001c 000e 0007 8003 c001 e000 fcff fcff     ................
  406870:	f03f f87f 1ce0 0cc0 0cc0 0cc0 0cc0 1ce0     ?...............
  406880:	f87f f03f fcff fcff 00c3 00c3 00c3 00c3     ..?.............
  406890:	00c3 00e7 007e 003c f03f f87f 1ce0 0cc0     ....~.<.?.......
  4068a0:	ccc0 ecc0 7cc0 38e0 fc7f ec3f fcff fcff     .....|.8..?.....
  4068b0:	00c3 80c3 80c3 c0c3 c0c3 70e7 3c7e 1c3c     ...........p~<<.
  4068c0:	183c 1c7e 0ce7 0cc3 0cc3 0cc3 0cc3 9cc3     <.~.............
  4068d0:	f8e1 f060 00c0 00c0 00c0 00c0 fcff fcff     ..`.............
  4068e0:	00c0 00c0 00c0 00c0 f0ff f8ff 1c00 0c00     ................
  4068f0:	0c00 0c00 0c00 1c00 f8ff f0ff c0ff e0ff     ................
  406900:	7000 3800 1c00 1c00 3800 7000 e0ff c0ff     .p.8.....8.p....
  406910:	f0ff f8ff 1c00 3c00 f800 f800 3c00 1c00     .......<.....<..
  406920:	f8ff f0ff 3cf0 7cf8 e01c c00f 8007 8007     .....<.|........
  406930:	c00f e01c 7cf8 3cf0 00fc 00fe 0007 8003     .....|.<........
  406940:	fc01 fc01 8003 0007 00fe 00fc 3cc0 7cc0     .............<.|
  406950:	ecc0 ccc1 8cc3 0cc7 0cce 0cdc 0cf8 0cf0     ................
  406960:	0000 0000 fcff fcff 0cc0 0cc0 0cc0 0000     ................
  406970:	0000 0000 0030 0030 000c 000c 0003 0003     ....0.0.........
  406980:	c000 c000 3000 3000 0000 0000 0cc0 0cc0     .....0.0........
  406990:	0cc0 fcff fcff 0000 0000 0000 000c 001c     ................
  4069a0:	0038 0070 00e0 00e0 0070 0038 001c 000c     8.p.....p.8.....
  4069b0:	0c00 0c00 0c00 0c00 0c00 0c00 0c00 0c00     ................
  4069c0:	0c00 0c00 0000 0000 00c0 00e0 0070 0038     ............p.8.
  4069d0:	0018 0000 0000 0000 3000 7806 fc0e cc0c     .........0.x....
  4069e0:	cc0c cc0c cc0c cc0e fc07 f803 fcff fcff     ................
  4069f0:	0c03 0c03 0c03 0c03 0c03 9c03 f801 f000     ................
  406a00:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  406a10:	3807 3003 f000 f801 9c03 0c03 0c03 0c03     .8.0............
  406a20:	0c03 0c03 fcff fcff f003 f807 dc0e cc0c     ................
  406a30:	cc0c cc0c cc0c dc0e d807 9003 0000 0003     ................
  406a40:	fc3f fc7f 00e3 00e3 0070 0030 0000 0000     ?.......p.0.....
  406a50:	1803 9c07 cc0f cc0c cc0c cc0c cc0c dc0c     ................
  406a60:	f80f f007 fcff fcff 0003 0003 0003 0003     ................
  406a70:	8003 fc01 fc00 0000 0000 0000 0000 0000     ................
  406a80:	fc1b fc1b 0000 0000 0000 0000 0000 3000     ...............0
  406a90:	3800 1c00 0c00 0c00 1c00 f8cf f0cf 0000     .8..............
  406aa0:	0000 fcff fcff e000 e001 f003 3807 1c0e     .............8..
  406ab0:	0c0c 0000 0000 0000 0cc0 0cc0 fcff fcff     ................
  406ac0:	0c00 0c00 0000 0000 fc0f fc0f 000e 0007     ................
  406ad0:	c003 c003 0007 000e fc0f fc0f fc0f fc0f     ................
  406ae0:	0003 0007 000e 000c 000c 000e fc07 fc03     ................
  406af0:	f003 f807 1c0e 0c0c 0c0c 0c0c 0c0c 1c0e     ................
  406b00:	f807 f003 fc0f fc0f c00c c00c c00c c00c     ................
  406b10:	c00c c00f 8007 0003 0003 8007 c00f c00c     ................
  406b20:	c00c c00c c00c c00c fc0f fc0f fc0f fc0f     ................
  406b30:	8003 0007 000e 000c 000c 000e 0007 0003     ................
  406b40:	1803 9c07 cc0f cc0c cc0c cc0c cc0c fc0c     ................
  406b50:	780e 3006 0000 000c 000c f0ff f8ff 1c0c     .x.0............
  406b60:	1c0c 380c 300c 0000 f00f f80f 1c00 0c00     ...8.0..........
  406b70:	0c00 0c00 0c00 1c00 f80f f00f c00f e00f     ................
  406b80:	7000 3800 1c00 1c00 3800 7000 e00f c00f     .p.8.....8.p....
  406b90:	f00f f80f 1c00 1c00 f800 f800 1c00 1c00     ................
  406ba0:	f80f f00f 0c0c 1c0e 3807 f003 e001 e001     .........8......
  406bb0:	f003 3807 1c0e 0c0c 000c 000e 0c07 9c03     ...8............
  406bc0:	f801 f001 8003 0007 000e 000c 0c0c 1c0c     ................
  406bd0:	3c0c 7c0c ec0c cc0d 8c0f 0c0f 0c0e 0c0c     .<.|............
  406be0:	0000 0003 8007 f03f f87c 1ce0 0cc0 0cc0     ......?.|.......
  406bf0:	0cc0 0000 0c03 0c03 fc3f fc7f 0ce3 0cc3     ........?.......
  406c00:	0cc0 0ce0 0c70 0c30 0000 0cc0 0cc0 0cc0     ....p.0.........
  406c10:	1ce0 f87c f03f 8007 0003 0000 00c0 00c0     ..|.?...........
  406c20:	00c0 00c0 00c0 00c0 00c0 00c0 00c0 00c0     ................
  406c30:	fcff fcff fcff fcff fcff fcff fcff fcff     ................
  406c40:	fcff fcff 6e45 6f63 6564 2072 6554 7473     ....Encoder Test
  406c50:	0000 0000 7247 7561 3a73 2e25 6633 0000     ....Graus:%.3f..
  406c60:	6f52 6e75 3a64 6425 0000 0000 0043 0000     Round:%d....C...

00406c70 <_global_impure_ptr>:
  406c70:	00e8 2000                                   ... 

00406c74 <zeroes.6763>:
  406c74:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406c84:	4e49 0046 6e69 0066 414e 004e 616e 006e     INF.inf.NAN.nan.
  406c94:	3130 3332 3534 3736 3938 4241 4443 4645     0123456789ABCDEF
  406ca4:	0000 0000 3130 3332 3534 3736 3938 6261     ....0123456789ab
  406cb4:	6463 6665 0000 0000 6e28 6c75 296c 0000     cdef....(null)..
  406cc4:	0030 0000                                   0...

00406cc8 <blanks.6762>:
  406cc8:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406cd8:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406ce8:	4f50 4953 0058 0000 002e 0000 0000 0000     POSIX...........

00406cf8 <__mprec_tens>:
  406cf8:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406d08:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406d18:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406d28:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406d38:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406d48:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406d58:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406d68:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406d78:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406d88:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406d98:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406da8:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406db8:	9db4 79d9 7843 44ea                         ...yCx.D

00406dc0 <__mprec_bigtens>:
  406dc0:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406dd0:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406de0:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406de8 <p05.5269>:
  406de8:	0005 0000 0019 0000 007d 0000               ........}...

00406df4 <_init>:
  406df4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406df6:	bf00      	nop
  406df8:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406dfa:	bc08      	pop	{r3}
  406dfc:	469e      	mov	lr, r3
  406dfe:	4770      	bx	lr

00406e00 <__init_array_start>:
  406e00:	0040334d 	.word	0x0040334d

00406e04 <__frame_dummy_init_array_entry>:
  406e04:	004000e9                                ..@.

00406e08 <_fini>:
  406e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406e0a:	bf00      	nop
  406e0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406e0e:	bc08      	pop	{r3}
  406e10:	469e      	mov	lr, r3
  406e12:	4770      	bx	lr

00406e14 <__fini_array_start>:
  406e14:	004000c5 	.word	0x004000c5

Disassembly of section .relocate:

20000000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC->EEFC_FMR = EEFC_FMR_FWS(3);
20000000:	f44f 7240 	mov.w	r2, #768	; 0x300
20000004:	4b1f      	ldr	r3, [pc, #124]	; (20000084 <SystemInit+0x84>)
20000006:	601a      	str	r2, [r3, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000008:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
2000000c:	6a1b      	ldr	r3, [r3, #32]
2000000e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20000012:	d107      	bne.n	20000024 <SystemInit+0x24>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000014:	4a1c      	ldr	r2, [pc, #112]	; (20000088 <SystemInit+0x88>)
20000016:	4b1d      	ldr	r3, [pc, #116]	; (2000008c <SystemInit+0x8c>)
20000018:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2000001a:	461a      	mov	r2, r3
2000001c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000001e:	f013 0f01 	tst.w	r3, #1
20000022:	d0fb      	beq.n	2000001c <SystemInit+0x1c>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000024:	4a1a      	ldr	r2, [pc, #104]	; (20000090 <SystemInit+0x90>)
20000026:	4b19      	ldr	r3, [pc, #100]	; (2000008c <SystemInit+0x8c>)
20000028:	621a      	str	r2, [r3, #32]
	CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2000002a:	461a      	mov	r2, r3
2000002c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000002e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20000032:	d0fb      	beq.n	2000002c <SystemInit+0x2c>
	}
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000034:	4b15      	ldr	r3, [pc, #84]	; (2000008c <SystemInit+0x8c>)
20000036:	6b1a      	ldr	r2, [r3, #48]	; 0x30
20000038:	f022 0203 	bic.w	r2, r2, #3
2000003c:	f042 0201 	orr.w	r2, r2, #1
20000040:	631a      	str	r2, [r3, #48]	; 0x30
		                    PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000042:	461a      	mov	r2, r3
20000044:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000046:	f013 0f08 	tst.w	r3, #8
2000004a:	d0fb      	beq.n	20000044 <SystemInit+0x44>
	}

	/* Initialize PLL */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
2000004c:	4a11      	ldr	r2, [pc, #68]	; (20000094 <SystemInit+0x94>)
2000004e:	4b0f      	ldr	r3, [pc, #60]	; (2000008c <SystemInit+0x8c>)
20000050:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20000052:	461a      	mov	r2, r3
20000054:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000056:	f013 0f02 	tst.w	r3, #2
2000005a:	d0fb      	beq.n	20000054 <SystemInit+0x54>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | 
2000005c:	2211      	movs	r2, #17
2000005e:	4b0b      	ldr	r3, [pc, #44]	; (2000008c <SystemInit+0x8c>)
20000060:	631a      	str	r2, [r3, #48]	; 0x30
	PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000062:	461a      	mov	r2, r3
20000064:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000066:	f013 0f08 	tst.w	r3, #8
2000006a:	d0fb      	beq.n	20000064 <SystemInit+0x64>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2000006c:	2212      	movs	r2, #18
2000006e:	4b07      	ldr	r3, [pc, #28]	; (2000008c <SystemInit+0x8c>)
20000070:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000072:	461a      	mov	r2, r3
20000074:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000076:	f013 0f08 	tst.w	r3, #8
2000007a:	d0fb      	beq.n	20000074 <SystemInit+0x74>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
2000007c:	4a06      	ldr	r2, [pc, #24]	; (20000098 <SystemInit+0x98>)
2000007e:	4b07      	ldr	r3, [pc, #28]	; (2000009c <SystemInit+0x9c>)
20000080:	601a      	str	r2, [r3, #0]
20000082:	4770      	bx	lr
20000084:	400e0a00 	.word	0x400e0a00
20000088:	00370809 	.word	0x00370809
2000008c:	400e0400 	.word	0x400e0400
20000090:	01370809 	.word	0x01370809
20000094:	20073f01 	.word	0x20073f01
20000098:	02dc6c00 	.word	0x02dc6c00
2000009c:	200000e4 	.word	0x200000e4

200000a0 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200000a0:	4b0c      	ldr	r3, [pc, #48]	; (200000d4 <system_init_flash+0x34>)
200000a2:	4298      	cmp	r0, r3
200000a4:	d803      	bhi.n	200000ae <system_init_flash+0xe>
		EFC->EEFC_FMR = EEFC_FMR_FWS(0);
200000a6:	2200      	movs	r2, #0
200000a8:	4b0b      	ldr	r3, [pc, #44]	; (200000d8 <system_init_flash+0x38>)
200000aa:	601a      	str	r2, [r3, #0]
200000ac:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200000ae:	4b0b      	ldr	r3, [pc, #44]	; (200000dc <system_init_flash+0x3c>)
200000b0:	4298      	cmp	r0, r3
200000b2:	d804      	bhi.n	200000be <system_init_flash+0x1e>
		EFC->EEFC_FMR = EEFC_FMR_FWS(1);
200000b4:	f44f 7280 	mov.w	r2, #256	; 0x100
200000b8:	4b07      	ldr	r3, [pc, #28]	; (200000d8 <system_init_flash+0x38>)
200000ba:	601a      	str	r2, [r3, #0]
200000bc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200000be:	4b08      	ldr	r3, [pc, #32]	; (200000e0 <system_init_flash+0x40>)
200000c0:	4298      	cmp	r0, r3
		EFC->EEFC_FMR = EEFC_FMR_FWS(2);
200000c2:	bf94      	ite	ls
200000c4:	f44f 7200 	movls.w	r2, #512	; 0x200
	} else {
		EFC->EEFC_FMR = EEFC_FMR_FWS(3);
200000c8:	f44f 7240 	movhi.w	r2, #768	; 0x300
200000cc:	4b02      	ldr	r3, [pc, #8]	; (200000d8 <system_init_flash+0x38>)
200000ce:	601a      	str	r2, [r3, #0]
200000d0:	4770      	bx	lr
200000d2:	bf00      	nop
200000d4:	01406f3f 	.word	0x01406f3f
200000d8:	400e0a00 	.word	0x400e0a00
200000dc:	01e847ff 	.word	0x01e847ff
200000e0:	02dc6bff 	.word	0x02dc6bff

200000e4 <SystemCoreClock>:
200000e4:	003d0900                                ..=.

200000e8 <impure_data>:
200000e8:	00000000 200003d4 2000043c 200004a4     ....... <.. ... 
	...
2000011c:	00406c6c 00000000 00000000 00000000     ll@.............
	...
20000190:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200001a0:	0005deec 0000000b 00000000 00000000     ................
	...

20000510 <_impure_ptr>:
20000510:	200000e8                                ... 

20000514 <lconv>:
20000514:	00406cf0 00406ca4 00406ca4 00406ca4     .l@..l@..l@..l@.
20000524:	00406ca4 00406ca4 00406ca4 00406ca4     .l@..l@..l@..l@.
20000534:	00406ca4 00406ca4 ffffffff ffffffff     .l@..l@.........
20000544:	ffffffff 0000ffff                       ........

2000054c <__malloc_av_>:
	...
20000554:	2000054c 2000054c 20000554 20000554     L.. L.. T.. T.. 
20000564:	2000055c 2000055c 20000564 20000564     \.. \.. d.. d.. 
20000574:	2000056c 2000056c 20000574 20000574     l.. l.. t.. t.. 
20000584:	2000057c 2000057c 20000584 20000584     |.. |.. ... ... 
20000594:	2000058c 2000058c 20000594 20000594     ... ... ... ... 
200005a4:	2000059c 2000059c 200005a4 200005a4     ... ... ... ... 
200005b4:	200005ac 200005ac 200005b4 200005b4     ... ... ... ... 
200005c4:	200005bc 200005bc 200005c4 200005c4     ... ... ... ... 
200005d4:	200005cc 200005cc 200005d4 200005d4     ... ... ... ... 
200005e4:	200005dc 200005dc 200005e4 200005e4     ... ... ... ... 
200005f4:	200005ec 200005ec 200005f4 200005f4     ... ... ... ... 
20000604:	200005fc 200005fc 20000604 20000604     ... ... ... ... 
20000614:	2000060c 2000060c 20000614 20000614     ... ... ... ... 
20000624:	2000061c 2000061c 20000624 20000624     ... ... $.. $.. 
20000634:	2000062c 2000062c 20000634 20000634     ,.. ,.. 4.. 4.. 
20000644:	2000063c 2000063c 20000644 20000644     <.. <.. D.. D.. 
20000654:	2000064c 2000064c 20000654 20000654     L.. L.. T.. T.. 
20000664:	2000065c 2000065c 20000664 20000664     \.. \.. d.. d.. 
20000674:	2000066c 2000066c 20000674 20000674     l.. l.. t.. t.. 
20000684:	2000067c 2000067c 20000684 20000684     |.. |.. ... ... 
20000694:	2000068c 2000068c 20000694 20000694     ... ... ... ... 
200006a4:	2000069c 2000069c 200006a4 200006a4     ... ... ... ... 
200006b4:	200006ac 200006ac 200006b4 200006b4     ... ... ... ... 
200006c4:	200006bc 200006bc 200006c4 200006c4     ... ... ... ... 
200006d4:	200006cc 200006cc 200006d4 200006d4     ... ... ... ... 
200006e4:	200006dc 200006dc 200006e4 200006e4     ... ... ... ... 
200006f4:	200006ec 200006ec 200006f4 200006f4     ... ... ... ... 
20000704:	200006fc 200006fc 20000704 20000704     ... ... ... ... 
20000714:	2000070c 2000070c 20000714 20000714     ... ... ... ... 
20000724:	2000071c 2000071c 20000724 20000724     ... ... $.. $.. 
20000734:	2000072c 2000072c 20000734 20000734     ,.. ,.. 4.. 4.. 
20000744:	2000073c 2000073c 20000744 20000744     <.. <.. D.. D.. 
20000754:	2000074c 2000074c 20000754 20000754     L.. L.. T.. T.. 
20000764:	2000075c 2000075c 20000764 20000764     \.. \.. d.. d.. 
20000774:	2000076c 2000076c 20000774 20000774     l.. l.. t.. t.. 
20000784:	2000077c 2000077c 20000784 20000784     |.. |.. ... ... 
20000794:	2000078c 2000078c 20000794 20000794     ... ... ... ... 
200007a4:	2000079c 2000079c 200007a4 200007a4     ... ... ... ... 
200007b4:	200007ac 200007ac 200007b4 200007b4     ... ... ... ... 
200007c4:	200007bc 200007bc 200007c4 200007c4     ... ... ... ... 
200007d4:	200007cc 200007cc 200007d4 200007d4     ... ... ... ... 
200007e4:	200007dc 200007dc 200007e4 200007e4     ... ... ... ... 
200007f4:	200007ec 200007ec 200007f4 200007f4     ... ... ... ... 
20000804:	200007fc 200007fc 20000804 20000804     ... ... ... ... 
20000814:	2000080c 2000080c 20000814 20000814     ... ... ... ... 
20000824:	2000081c 2000081c 20000824 20000824     ... ... $.. $.. 
20000834:	2000082c 2000082c 20000834 20000834     ,.. ,.. 4.. 4.. 
20000844:	2000083c 2000083c 20000844 20000844     <.. <.. D.. D.. 
20000854:	2000084c 2000084c 20000854 20000854     L.. L.. T.. T.. 
20000864:	2000085c 2000085c 20000864 20000864     \.. \.. d.. d.. 
20000874:	2000086c 2000086c 20000874 20000874     l.. l.. t.. t.. 
20000884:	2000087c 2000087c 20000884 20000884     |.. |.. ... ... 
20000894:	2000088c 2000088c 20000894 20000894     ... ... ... ... 
200008a4:	2000089c 2000089c 200008a4 200008a4     ... ... ... ... 
200008b4:	200008ac 200008ac 200008b4 200008b4     ... ... ... ... 
200008c4:	200008bc 200008bc 200008c4 200008c4     ... ... ... ... 
200008d4:	200008cc 200008cc 200008d4 200008d4     ... ... ... ... 
200008e4:	200008dc 200008dc 200008e4 200008e4     ... ... ... ... 
200008f4:	200008ec 200008ec 200008f4 200008f4     ... ... ... ... 
20000904:	200008fc 200008fc 20000904 20000904     ... ... ... ... 
20000914:	2000090c 2000090c 20000914 20000914     ... ... ... ... 
20000924:	2000091c 2000091c 20000924 20000924     ... ... $.. $.. 
20000934:	2000092c 2000092c 20000934 20000934     ,.. ,.. 4.. 4.. 
20000944:	2000093c 2000093c 20000944 20000944     <.. <.. D.. D.. 

20000954 <__malloc_trim_threshold>:
20000954:	00020000                                ....

20000958 <__malloc_sbrk_base>:
20000958:	ffffffff                                ....
